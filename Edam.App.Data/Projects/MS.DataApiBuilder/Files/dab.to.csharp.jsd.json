{
    "$schema": "https://json-schema.org/draft-04/schema",
    "$id": "#/additionalProperties/version",
    "title": "Data API builder",
    "description": "Schema for Data API builder engine",
    "additionalProperties": {
        "version": "https://github.com/Azure/data-api-builder/releases/download/v0.8.52/dab.draft.schema.json"
    },
    "type": "object",
    "definitions": {
        "singular_plural_": {
            "type": "object",
            "properties": {
                "singular": {
                    "type": "string"
                },
                "plural": {
                    "type": "string"
                }
            },
            "required": [
                "singular"
            ]
        },
        "actionEnum_": {
            "type": "string",
            "enum": [
                "create",
                "read",
                "update",
                "delete",
                "*"
            ]
        },
        "cardinalityEnum_": {
            "type": "string",
            "enum": [
                "one",
                "many"
            ]
        },
        "relationships_": {
            "type": "object",
            "properties": {
                "cardinality": {
                    "$ref": "#/definitions/cardinalityEnum_"
                },
                "target.entity": {
                    "type": "string"
                },
                "source.fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "target.fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "linking.object": {
                    "type": "string",
                    "description": "The database object used for supporting the M:N relationship"
                },
                "linking.source.fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "linking.target.fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "cardinality",
                "target.entity"
            ]
        },
        "relationshipsMap_": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/relationships_"
            }
        },
        "action_actionEnum_": {
            "type": "string",
            "enum": [
                "execute",
                "*"
            ]
        },
        "action_": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/action_actionEnum_"
                },
                "fields": {
                    "type": "object",
                    "properties": {
                        "include": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "exclude": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "policy": {
                    "type": "object",
                    "description": "Define item-level security policy",
                    "properties": {
                        "database": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "actionExecEnum_": {
            "type": "string",
            "enum": [
                "execute",
                "*"
            ]
        },
        "permissionActionList_": {
            "type": "array",
            "items": {
                "type": "object",
                "description": "actionExecEnum_ or action_"
            },
            "uniqueItems": true
        },
        "permission_": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string"
                },
                "actions": {
                    "type": "object",
                    "description": "string ('*') or permissionActionList_"
                }
            },
            "required": [
                "role",
                "actions"
            ]
        },
        "permissions_": {
            "type": "array",
            "description": "Permissions assigned to this object",
            "items": {
                "$ref": "#/definitions/permission_"
            }
        },
        "stringMap_": {
			"type": "object",
			"additionalProperties": {
				"type": "string"
			}
        },
        "mappings_": {            
            "description": "Define mappings between database fields and GraphQL and REST fields",
            "$ref": "#/definitions/stringMap_"
        },
        "methodEmum_": {
            "type": "array",
            "items": {
                "type": "string",
                "enum": [
                    "get",
                    "post",
                    "put",
                    "patch",
                    "delete"
                ]
            }
        },
        "restProperties_": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string"
                },
                "methods": {
                    "$ref": "#/definitions/methodEmum_"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Allow enabling/disabling REST requests this specific entity.",
                    "default": true
                }
            }
        },
        "operationEnum_": {
            "type": "string",
            "enum": [
                "mutation",
                "query"
            ]
        },
        "graphqlProperties_": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "object",
                    "description": "singular_plural_ or a string value"
                },
                "operation": {
                    "$ref": "#/definitions/operationEnum_"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Allow enabling/disabling GraphQL requests for this specific entity.",
                    "default": true
                }
            }
        },
        "entitySourceParameterMap_": {
            "type": "object",
            "additionalProperties": {
                "type": "string",
                "enum": [
                    "boolean",
                    "string",
                    "number"
                ]
            }
        },
        "entityItemTypeEnum_": {
            "type": "string",
            "enum": [
                "table",
                "view",
                "stored-procedure"
            ],
            "description": "Database object type"
        },
        "entityItem_": {
            "type": "object",
            "description": "The object in the backend database that is mapped to the entity",
            "properties": {
                "type": {
                    "$ref":"#/definitions/entityItemTypeEnum_"
                },
                "object": {
                    "type": "string",
                    "description": "Database object name"
                },
                "parameters": {
                    "type": "object",
                    "description": "Dictionary of parameters and their values",
                    "$ref": "#/definitions/entitySourceParameterMap_"
                },
                "key-fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of fields to be used as primary keys. Mandatory field for views when generated through the CLI."
                }
            },
            "required": [
                "type",
                "object"
            ]
        },
        "entity_": {
            "type": "object",
            "properties": {
                "source": {
                    "type": "object",
                    "description": "The object in the backend database that is mapped to the entity; or entityItem_"
                },
                "rest": {
                    "type": "object",
                    "description": "restProperties_ or boolean"
                },
                "graphql": {
                    "type": "object",
                    "description": "graphqlProperties_ or boolean"
                },
                "mappings": {
                    "$ref": "#/definitions/mappings_"
                },
                "relationships": {
                    "$ref": "#/definitions/relationshipsMap_"
                },
                "permissions": {
                    "$ref": "#/definitions/permissions_"
                }
            },
            "required": [
                "source",
                "permissions"
            ]
        },
        "entitiesMap_": {
            "type": "object",
            "description": "Entities that will be exposed via REST and/or GraphQL",
            "additionalProperties": {
                "$ref": "#/definitions/entity_"
            }
        },
        "option_": {
            "description": "Database specific properties for the backend database",
            "type": "object",
            "properties": {
                "database": {
                    "type": "string",
                    "description": "Name of the database"
                },
                "container": {
                    "description": "Name of the container",
                    "type": "string"
                },
                "schema": {
                    "description": "Path to the GraphQL schema file",
                    "type": "string"
                },

                "set-session-context": {
                    "type": "boolean",
                    "description": "Enable sending data to MsSql using session context"
                }

            },
            "required": [
                "database",
                "schema"
            ]
        },
        "databaseTypeEnum_": {

            "description": "Database used in the backend",
            "type": "string",
            "enum": [
                "mssql",
                "postgresql",
                "mysql",
                "cosmosdb_nosql",
                "cosmosdb_postgresql"
            ]
        },
        "dataSource_": {
            "description": "Data source information",
            "type": "object",
            "properties": {
                "database-type": {
                    "$ref": "#/definitions/databaseTypeEnum_"
                },
                "connection-string": {
                    "description": "Connection string for the selected database type",
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/option_"
                    }
                }
            }
        },
        "modeEnum_": {
            "description": "Set if running in Development or Production mode",
            "type": "string",
            "default": "development",
            "enum": [
                "production",
                "development"
            ]
        },
        "hostItem_": {
            "type": "object",
            "description": "Global hosting configuration",
            "properties": {
                "mode": {
                    "$ref": "#/definitions/modeEnum_"
                },
                "cors": {
                    "type": "object",
                    "description": "Configure CORS",
                    "properties": {
                        "origins": {
                            "type": "array",
                            "description": "Allowed origins",
                            "items": {
                                "type": "string"
                            },
                            "default": []
                        },
                        "allow-credentials": {
                            "type": "boolean",
                            "default": "false",
                            "description": "Set value for Access-Control-Allow-Credentials header"
                        }
                    }
                },
                "authentication": {
                    "type": "object",
                    "properties": {
                        "provider": {
                            "type": "string",
                            "description": "The name of authentication provider",
                            "default": "StaticWebApps"
                        },
                        "jwt": {
                            "type": "object",
                            "properties": {
                                "audience": {
                                    "type": "string"
                                },
                                "issuer": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "runtimeItem_": {
            "type": "object",
            "description": "Runtime configuration settings",
            "properties": {
                "rest": {
                    "type": "object",
                    "description": "Global REST endpoint configuration",
                    "properties": {
                        "path": {
                            "default": "/api",
                            "type": "string"
                        },
                        "enabled": {
                            "type": "boolean",
                            "description": "Allow enabling/disabling REST requests for all entities."
                        }
                    }
                },
                "graphql": {
                    "type": "object",
                    "description": "Global GraphQL endpoint configuration",
                    "properties": {
                        "allow-introspection": {
                            "type": "boolean",
                            "description": "Allow querying of the underlying GraphQL schema."
                        },
                        "path": {
                            "default": "/graphql",
                            "type": "string"
                        },
                        "enabled": {
                            "type": "boolean",
                            "description": "Allow enabling/disabling GraphQL requests for all entities."
                        }
                    }
                },
                "host": {
                    "$ref": "#/definitions/hostItem_"
                }
            }
        },
		"DabConfigFile_": {
			"type": "object",
            "description": "Microsoft Data API Builder configuration file",
            "properties": {
                "data-source": {
                    "$ref": "#/definitions/dataSource_"
                },
                "runtime": {
                    "$ref": "#/definitions/runtimeItem_"
                },
                "entities": {
                    "type": "object",
                    "description": "Entities that will be exposed via REST and/or GraphQL",
                    "$ref": "#/definitions/entity_"
                }
            },
            "required": [
                "data-source",
                "entities"
            ]
		}
    },
    "properties": {
        "DabConfigFile": {
			"description": "root element",
			"AllOf": [
				{
					"$ref": "#/definitions/DabConfigFile_"
				}
			]
        }
    }
}