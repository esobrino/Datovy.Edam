
CREATE PROCEDURE Data.DataElementUpsert
   @SessionId        VARCHAR(40) = NULL,
   @OrganizationId   VARCHAR(20),
   @DataOwnerId      VARCHAR(20),
   @ReferenceDate    DATETIME = null,
   @DomainUri        VARCHAR(80),
   @DomainUriPrefix  VARCHAR(20),
   @DomainName       VARCHAR(20),
	 
   @ExpiredDate      DATETIME = null,
   @AssetNo          INTEGER = null,
   @AssetTypeNo      INTEGER = null,

   @Root             VARCHAR(1024) = null,
   @Domain           VARCHAR(2048) = null,
   @Type             VARCHAR(256) = null,
   @Element          VARCHAR(256) = null,
   @ElementNo        INTEGER,
   @ParentNo         INTEGER,
   @ElementId        VARCHAR(20) = null,
   @TypeNo           INTEGER = 0,
   @ElementURI       VARCHAR(2048) = null,
   @ElementName      VARCHAR(80) = null,
   @ElementType      VARCHAR(20),
   @ElementDataType  VARCHAR(1024),
   @ElementPath      VARCHAR(MAX),
   @Description      VARCHAR(MAX) = null,
   @ElementSequenceID   VARCHAR(128) = null,
   @ElementTypeNo       INTEGER = 0,
   @ElementGroupNo      INTEGER = 0,
   @ElementConstraintNo INTEGER = 0,
   @ElementKeyTypeNo    INTEGER = 0,
   @AutoGeneratedTypeNo INTEGER = 0,
   @StatusNo         INTEGER = 0,
   @ValueTypeNo      SMALLINT = 0,
   @MinLength        INTEGER = 0,
   @MaxLength        INTEGER = 0,
   @MinOccurrence    INTEGER = 0,
   @MaxOccurrence    INTEGER = 0,
   @Nillable         BIT = 0,
   @DefaultValue     VARCHAR(128) = null,
   @FixedValue       VARCHAR(128) = null,
   @SampleValue      VARCHAR(128) = null,
   @PropertiesBagText          VARCHAR(MAX) = null,
   @ProcessInstructionsBagText VARCHAR(MAX) = null,
   @SchemaText       VARCHAR(MAX) = null,
   @OrdinalNo        INTEGER = 0,
   @SequenceID       VARCHAR(20) = null,
   @VersionID        VARCHAR(20) = null,
   @BatchID          VARCHAR(40) = null,

   @ConstraintsText  VARCHAR(MAX) = null,
   @KindNo           SMALLINT = 0,
   @Tags             VARCHAR(128) = null,

   @OriginalName     VARCHAR(128) = null,
   @OriginalDataType VARCHAR(128) = null,
	 
   @OutAssetNo       INTEGER OUTPUT,
   @OutElementNo     INTEGER OUTPUT,
   @OutElementId     VARCHAR(20) OUTPUT
WITH EXECUTE AS 'KifDbWriter'
AS
BEGIN
   SET NOCOUNT ON
			
   IF @OrganizationId = ''    or @Root = ''    or @Domain = ''	  	or @ElementUri = '' or
      @OrganizationId is null or @Root is null or @Domain is null	or @Type is null	or @ElementUri is null
   BEGIN
      RAISERROR (50001,18,1)
   END			
			
   SET @OutElementId = @ElementId
   SET @OutElementNo = @ElementNo
   
   DECLARE @referenceTypeNo SMALLINT,
           @aliasId         VARCHAR(20) = NULL,
           @alternateId     VARCHAR(40) = NULL,
           @domainNo        INTEGER,
           @outDid          VARCHAR(20),
           @outDno          VARCHAR(20)

   -- register domain if it does not exists, or just fetch ID's
   EXEC Data.DataDomainUpsert
      @SessionId       = @SessionId,
      @OrganizationId  = @OrganizationId,
      @DomainNo        = @AssetNo,
      @DomainId        = null,
      @DataOwnerId     = @DataOwnerId,
      @ReferenceDate   = @ReferenceDate,
      @DomainUri       = @DomainUri,
      @DomainUriPrefix = @DomainUriPrefix,
      @Root            = @Root,
      @Domain          = 'asset',
      @DomainName      = @DomainName,
      @TypeNo          = @AssetTypeNo,
      @Description     = null,
      @OptionNo        = 1,  -- return with output vars if exists
      @OutDomainID     = @outDid OUTPUT,
      @OutDomainNo     = @outDno OUTPUT
			
   SET @domainNo = @outDno
   SET @OutAssetNo = @outDno

   IF @AliasId is null
      SET @AliasId = 'OBJ'
   IF @ReferenceDate is null
      SET @ReferenceDate = getutcdate()
   IF @referenceTypeNo is null
      SET @referenceTypeNo = 40  -- Element
   IF @StatusNo is null
      SET @StatusNo = 1          -- active
   IF @OutElementId = ''
      SET @OutElementId = null

   -- check that the record don't exists...
   DECLARE @eid VARCHAR(20),
           @eno INTEGER

   SELECT @eid = ElementId,
          @eno = ElementNo
     FROM Data.DataElement
    WHERE (OrganizationId = @OrganizationId
      AND  Root = @Root
      AND  Domain = @Domain
      AND  Type = @Type
      AND  Element = @Element
      AND  VersionId = @VersionID
      AND  ElementUri = @ElementUri)
       OR (ElementNo = @ElementNo
       OR  ElementId = @ElementId)
							
   SET @OutElementId = @eid
   SET @OutElementNo = @eno

   -- register object as needed
   IF @OutElementId is null
   BEGIN
      DECLARE @desc VARCHAR(1024) = 'Reference (' + @ElementName + ')'
      EXEC Data.DataReferenceObjectNew @SessionId = @SessionId, @ReferenceDate = @ReferenceDate,
         @ReferenceTypeNo = @ReferenceTypeNo, @AliasId = @aliasId, @AlternateId = @alternateId,
         @Description = @desc, @StatusNo = @StatusNo, @OutReferenceId = @OutElementId OUTPUT
   END
			
   -- insert or update data element record
   IF @OutElementNo is NULL
   BEGIN
      INSERT INTO Data.DataElement (
         ReferenceDate,    OrganizationId,    ExpiredDate,
         Root,             Domain,            Type,
         Element,          ElementId,         TypeNo,
         ElementUri,       ElementName,       ElementType,
         ElementDataType,  ElementPath,       Description,
         ElementTypeNo,    StatusNo,          ValueTypeNo,
         MinLength,        MaxLength,         MinOccurrence,
         MaxOccurrence,    Nillable,          DefaultValue,
         FixedValue,       SampleValue,       DataOwnerId,
         PropertiesBagText,SchemaText,        SequenceId,
         VersionId,        UpdateSessionId,   ElementConstraintNo,
         ElementGroupNo,   ElementKeyTypeNo,  AssetNo,
         ParentNo,         ElementSequenceID, AutoGeneratedTypeNo,
         OrdinalNo,        BatchID,           ProcessInstructionsBagText,
         KindNo,           ConstraintsText,   Tags,
         OriginalName,     OriginalDataType,  DomainNo)
      VALUES  (
         @ReferenceDate,   @OrganizationId,   @ExpiredDate,
         @Root,            @Domain,           @Type,
         @Element,         @OutElementId,     @TypeNo,
         @ElementUri,      @ElementName,      @ElementType,
         @ElementDataType, @ElementPath,      @Description,
         @ElementTypeNo,   @StatusNo,         @ValueTypeNo,
         @MinLength,       @MaxLength,        @MinOccurrence,
         @MaxOccurrence,   @Nillable,         @DefaultValue,
         @FixedValue,      @SampleValue,      @DataOwnerId,
         @PropertiesBagText,@SchemaText,       @SequenceId,
         @VersionId,       @SessionId,        @ElementConstraintNo,
         @ElementGroupNo,  @ElementKeyTypeNo, @domainNo,
         @ParentNo,        @ElementSequenceID,@AutoGeneratedTypeNo,
         @OrdinalNo,       @BatchID,          @ProcessInstructionsBagText,
         @KindNo,          @ConstraintsText,  @Tags,
         @OriginalName,    @OriginalDataType, @domainNo)
      SET @OutElementNo = @@IDENTITY
   END
   ELSE
   -- Update a record only, if something had changed
   IF NOT EXISTS(
      SELECT * 
        FROM Data.DataElement
       WHERE AssetNo = @domainNo
         AND ReferenceDate = @ReferenceDate
         AND ExpiredDate = @ExpiredDate
         AND ElementName = @ElementName
         AND ElementType = @ElementType
         AND ElementDataType = @ElementDataType
         AND ElementPath = @ElementPath
         AND Description = @Description
         AND ElementTypeNo = @ElementTypeNo
         AND ElementGroupNo = @ElementGroupNo
         AND ElementConstraintNo = @ElementConstraintNo
         AND ElementKeyTypeNo = @ElementDataType
         AND StatusNo = @StatusNo
         AND ValueTypeNo = @ValueTypeNo
         AND MinLength = @MinLength
         AND MaxLength = @MaxLength
         AND MinOccurrence = @MinOccurrence
         AND MaxOccurrence = @MaxOccurrence
         AND Nillable = @Nillable
         AND DefaultValue = @DefaultValue
         AND FixedValue = @FixedValue
         AND SampleValue = @SampleValue
         AND PropertiesBagText = @PropertiesBagText
         AND ProcessInstructionsBagText = @ProcessInstructionsBagText
         AND SchemaText = @SchemaText
         AND SequenceId = @SequenceId
         AND VersionId = @VersionId
         AND OrganizationId = @OrganizationId
         AND ElementNo = @ElementNo
         AND ElementId = @OutElementId
         AND KindNo = @KindNo
         AND Tags = @Tags
         AND ConstraintsText = @ConstraintsText
         AND OriginalName = @OriginalName
         AND OriginalDataType = @OriginalDataType)
   BEGIN
      UPDATE Data.DataElement
         SET ReferenceDate = @ReferenceDate,
             ExpiredDate = @ExpiredDate,
             ElementName = @ElementName,
             ElementType = @ElementType,
             ElementDataType = @ElementDataType,
             ElementPath = @ElementPath,
             Description = @Description,
             ElementTypeNo = @ElementTypeNo,
             ElementGroupNo = @ElementGroupNo,
             ElementConstraintNo = @ElementConstraintNo,
             ElementKeyTypeNo = @ElementKeyTypeNo,
             StatusNo = @StatusNo,
             ValueTypeNo = @ValueTypeNo,
             MinLength = @MinLength,
             MaxLength = @MaxLength,
             MinOccurrence = @MinOccurrence,
             MaxOccurrence = @MaxOccurrence,
             Nillable = @Nillable,
             DefaultValue = @DefaultValue,
             FixedValue = @FixedValue,
             SampleValue = @SampleValue,
             PropertiesBagText = @PropertiesBagText,
             ProcessInstructionsBagText = @ProcessInstructionsBagText,
             SchemaText = @SchemaText,
             SequenceId = @SequenceId,
             VersionId = @VersionId,
             UpdateSessionId = @SessionId,
             OrdinalNo = @OrdinalNo,
             ParentNo = @ParentNo,
             ElementSequenceID = @ElementSequenceID,
             AutoGeneratedTypeNo = @AutoGeneratedTypeNo,
             LastUpdateDate = getutcdate(),
             KindNo = @KindNo,
             Tags = @Tags,
             ConstraintsText = @ConstraintsText,
             OriginalName = @OriginalName,
             OriginalDataType = @OriginalDataType
       WHERE OrganizationId = @OrganizationId
         AND AssetNo = @AssetNo
         AND ElementNo = @ElementNo
         AND ElementId = @OutElementId
   END
END
