/*
Deployment script for Edam.Database

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Edam.Database"
:setvar DefaultFilePrefix "Edam.Database"
:setvar DefaultDataPath "C:\Users\esobr\AppData\Local\Microsoft\VisualStudio\SSDT\Edam.Database"
:setvar DefaultLogPath "C:\Users\esobr\AppData\Local\Microsoft\VisualStudio\SSDT\Edam.Database"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [Data].[DataElement]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [DF__DataEleme__LastU__607251E5];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [Data].[DataElement]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [DF__DataEleme__Creat__5F7E2DAC];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [Data].[DataElement]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [DF__DataEleme__Eleme__6442E2C9];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [Data].[DataElement]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [DF__DataEleme__Eleme__634EBE90];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [Data].[DataElement]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [DF__DataEleme__Eleme__625A9A57];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [Data].[DataElement]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [DF__DataEleme__Refer__6166761E];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [Data].[DataElement]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [DF__DataEleme__MaxOc__6BE40491];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [Data].[DataElement]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [DF__DataEleme__MinOc__6AEFE058];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [Data].[DataElement]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [DF__DataEleme__MaxLe__69FBBC1F];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [Data].[DataElement]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [DF__DataEleme__MinLe__690797E6];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [Data].[DataElement]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [DF__DataEleme__Value__681373AD];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [Data].[DataElement]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [DF__DataEleme__Statu__671F4F74];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [Data].[DataElement]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [DF__DataEleme__AutoG__662B2B3B];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [Data].[DataElement]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [DF__DataEleme__Eleme__65370702];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [Data].[DataElement]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [DF__DataEleme__KindN__6DCC4D03];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [Data].[DataElement]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [DF__DataEleme__Recor__6CD828CA];


GO
PRINT N'Dropping Foreign Key [Data].[fk_DataCodeElementNo]...';


GO
ALTER TABLE [Data].[DataCodeElement] DROP CONSTRAINT [fk_DataCodeElementNo];


GO
PRINT N'Dropping Foreign Key [Data].[fk_DataElementConstraintType]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [fk_DataElementConstraintType];


GO
PRINT N'Dropping Foreign Key [Data].[fk_DataElementDomain]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [fk_DataElementDomain];


GO
PRINT N'Dropping Foreign Key [Data].[fk_DataElementElementType]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [fk_DataElementElementType];


GO
PRINT N'Dropping Foreign Key [Data].[fk_DataElementGroupType]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [fk_DataElementGroupType];


GO
PRINT N'Dropping Foreign Key [Data].[fk_DataElementKeyType]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [fk_DataElementKeyType];


GO
PRINT N'Dropping Foreign Key [Data].[fk_DataElementKind]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [fk_DataElementKind];


GO
PRINT N'Dropping Foreign Key [Data].[fk_DataElementStatus]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [fk_DataElementStatus];


GO
PRINT N'Dropping Foreign Key [Data].[fk_DataElementValueType]...';


GO
ALTER TABLE [Data].[DataElement] DROP CONSTRAINT [fk_DataElementValueType];


GO
PRINT N'Starting rebuilding table [Data].[DataElement]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [Data].[tmp_ms_xx_DataElement] (
    [CreatedDate]                DATETIME       DEFAULT (getutcdate()) NOT NULL,
    [LastUpdateDate]             DATETIME       DEFAULT (getutcdate()) NOT NULL,
    [ReferenceDate]              DATETIME       DEFAULT (getutcdate()) NOT NULL,
    [OrganizationId]             VARCHAR (20)   NOT NULL,
    [DataOwnerId]                VARCHAR (20)   NOT NULL,
    [ExpiredDate]                DATETIME       NULL,
    [AssetNo]                    INT            NULL,
    [TypeNo]                     INT            NULL,
    [DomainNo]                   INT            NOT NULL,
    [Root]                       VARCHAR (1024) NOT NULL,
    [Domain]                     VARCHAR (2048) NOT NULL,
    [Type]                       VARCHAR (256)  NOT NULL,
    [Element]                    VARCHAR (256)  NULL,
    [ElementNo]                  INT            IDENTITY (1, 1) NOT NULL,
    [ParentNo]                   INT            NULL,
    [ElementId]                  VARCHAR (20)   NULL,
    [ElementURI]                 VARCHAR (2048) NOT NULL,
    [ElementName]                VARCHAR (80)   NOT NULL,
    [ElementType]                VARCHAR (20)   NULL,
    [ElementDataType]            VARCHAR (1024) NULL,
    [ElementPath]                VARCHAR (MAX)  NULL,
    [Description]                VARCHAR (MAX)  NOT NULL,
    [ElementSequenceID]          VARCHAR (128)  NULL,
    [ElementTypeNo]              INT            DEFAULT ((0)) NOT NULL,
    [ElementGroupNo]             INT            DEFAULT ((0)) NOT NULL,
    [ElementConstraintNo]        INT            DEFAULT ((0)) NOT NULL,
    [ElementKeyTypeNo]           INT            DEFAULT ((0)) NOT NULL,
    [AutoGeneratedTypeNo]        INT            DEFAULT ((0)) NOT NULL,
    [StatusNo]                   INT            DEFAULT ((0)) NOT NULL,
    [ValueTypeNo]                SMALLINT       DEFAULT ((0)) NOT NULL,
    [MinLength]                  INT            DEFAULT ((0)) NULL,
    [MaxLength]                  INT            DEFAULT ((0)) NULL,
    [MinOccurrence]              INT            DEFAULT ((0)) NULL,
    [MaxOccurrence]              INT            DEFAULT ((0)) NULL,
    [Nillable]                   BIT            NULL,
    [DefaultValue]               VARCHAR (128)  NULL,
    [FixedValue]                 VARCHAR (128)  NULL,
    [SampleValue]                VARCHAR (128)  NULL,
    [PropertiesBagText]          VARCHAR (MAX)  NULL,
    [ProcessInstructionsBagText] VARCHAR (MAX)  NULL,
    [SchemaText]                 VARCHAR (MAX)  NULL,
    [OrdinalNo]                  INT            NULL,
    [SequenceID]                 VARCHAR (20)   NULL,
    [VersionID]                  VARCHAR (20)   NULL,
    [BatchId]                    VARCHAR (40)   NULL,
    [UpdateSessionID]            VARCHAR (40)   NULL,
    [RecordStatusCode]           CHAR (1)       DEFAULT ('A') NOT NULL,
    [ConstraintsText]            VARCHAR (MAX)  NULL,
    [KindNo]                     SMALLINT       DEFAULT ((0)) NULL,
    [Tags]                       VARCHAR (128)  NULL,
    [Guid]                       VARCHAR (40)   NULL,
    [OriginalName]               VARCHAR (128)  NULL,
    [OriginalDataType]           VARCHAR (128)  NULL,
    PRIMARY KEY CLUSTERED ([ElementNo] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [Data].[DataElement])
    BEGIN
        SET IDENTITY_INSERT [Data].[tmp_ms_xx_DataElement] ON;
        INSERT INTO [Data].[tmp_ms_xx_DataElement] ([ElementNo], [CreatedDate], [LastUpdateDate], [ReferenceDate], [OrganizationId], [DataOwnerId], [ExpiredDate], [AssetNo], [TypeNo], [DomainNo], [Root], [Domain], [Type], [Element], [ParentNo], [ElementId], [ElementURI], [ElementName], [ElementType], [ElementDataType], [ElementPath], [Description], [ElementSequenceID], [ElementTypeNo], [ElementGroupNo], [ElementConstraintNo], [ElementKeyTypeNo], [AutoGeneratedTypeNo], [StatusNo], [ValueTypeNo], [MinLength], [MaxLength], [MinOccurrence], [MaxOccurrence], [Nillable], [DefaultValue], [FixedValue], [SampleValue], [PropertiesBagText], [ProcessInstructionsBagText], [SchemaText], [OrdinalNo], [SequenceID], [VersionID], [BatchId], [UpdateSessionID], [RecordStatusCode], [ConstraintsText], [KindNo], [Tags], [OriginalName], [OriginalDataType])
        SELECT   [ElementNo],
                 [CreatedDate],
                 [LastUpdateDate],
                 [ReferenceDate],
                 [OrganizationId],
                 [DataOwnerId],
                 [ExpiredDate],
                 [AssetNo],
                 [TypeNo],
                 [DomainNo],
                 [Root],
                 [Domain],
                 [Type],
                 [Element],
                 [ParentNo],
                 [ElementId],
                 [ElementURI],
                 [ElementName],
                 [ElementType],
                 [ElementDataType],
                 [ElementPath],
                 [Description],
                 [ElementSequenceID],
                 [ElementTypeNo],
                 [ElementGroupNo],
                 [ElementConstraintNo],
                 [ElementKeyTypeNo],
                 [AutoGeneratedTypeNo],
                 [StatusNo],
                 [ValueTypeNo],
                 [MinLength],
                 [MaxLength],
                 [MinOccurrence],
                 [MaxOccurrence],
                 [Nillable],
                 [DefaultValue],
                 [FixedValue],
                 [SampleValue],
                 [PropertiesBagText],
                 [ProcessInstructionsBagText],
                 [SchemaText],
                 [OrdinalNo],
                 [SequenceID],
                 [VersionID],
                 [BatchId],
                 [UpdateSessionID],
                 [RecordStatusCode],
                 [ConstraintsText],
                 [KindNo],
                 [Tags],
                 [OriginalName],
                 [OriginalDataType]
        FROM     [Data].[DataElement]
        ORDER BY [ElementNo] ASC;
        SET IDENTITY_INSERT [Data].[tmp_ms_xx_DataElement] OFF;
    END

DROP TABLE [Data].[DataElement];

EXECUTE sp_rename N'[Data].[tmp_ms_xx_DataElement]', N'DataElement';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Foreign Key [Data].[fk_DataCodeElementNo]...';


GO
ALTER TABLE [Data].[DataCodeElement] WITH NOCHECK
    ADD CONSTRAINT [fk_DataCodeElementNo] FOREIGN KEY ([ElementNo]) REFERENCES [Data].[DataElement] ([ElementNo]);


GO
PRINT N'Creating Foreign Key [Data].[fk_DataElementConstraintType]...';


GO
ALTER TABLE [Data].[DataElement] WITH NOCHECK
    ADD CONSTRAINT [fk_DataElementConstraintType] FOREIGN KEY ([ElementConstraintNo]) REFERENCES [Data].[DataConstraintType] ([IdNo]);


GO
PRINT N'Creating Foreign Key [Data].[fk_DataElementDomain]...';


GO
ALTER TABLE [Data].[DataElement] WITH NOCHECK
    ADD CONSTRAINT [fk_DataElementDomain] FOREIGN KEY ([DomainNo]) REFERENCES [Data].[DataDomain] ([DomainNo]);


GO
PRINT N'Creating Foreign Key [Data].[fk_DataElementElementType]...';


GO
ALTER TABLE [Data].[DataElement] WITH NOCHECK
    ADD CONSTRAINT [fk_DataElementElementType] FOREIGN KEY ([ElementTypeNo]) REFERENCES [Data].[DataElementType] ([IdNo]);


GO
PRINT N'Creating Foreign Key [Data].[fk_DataElementGroupType]...';


GO
ALTER TABLE [Data].[DataElement] WITH NOCHECK
    ADD CONSTRAINT [fk_DataElementGroupType] FOREIGN KEY ([ElementGroupNo]) REFERENCES [Data].[DataGroupType] ([IdNo]);


GO
PRINT N'Creating Foreign Key [Data].[fk_DataElementKeyType]...';


GO
ALTER TABLE [Data].[DataElement] WITH NOCHECK
    ADD CONSTRAINT [fk_DataElementKeyType] FOREIGN KEY ([ElementKeyTypeNo]) REFERENCES [Data].[DataKeyType] ([IdNo]);


GO
PRINT N'Creating Foreign Key [Data].[fk_DataElementKind]...';


GO
ALTER TABLE [Data].[DataElement] WITH NOCHECK
    ADD CONSTRAINT [fk_DataElementKind] FOREIGN KEY ([KindNo]) REFERENCES [Data].[DataKind] ([IdNo]);


GO
PRINT N'Creating Foreign Key [Data].[fk_DataElementStatus]...';


GO
ALTER TABLE [Data].[DataElement] WITH NOCHECK
    ADD CONSTRAINT [fk_DataElementStatus] FOREIGN KEY ([StatusNo]) REFERENCES [Data].[DataReferenceStatus] ([IdNo]);


GO
PRINT N'Creating Foreign Key [Data].[fk_DataElementValueType]...';


GO
ALTER TABLE [Data].[DataElement] WITH NOCHECK
    ADD CONSTRAINT [fk_DataElementValueType] FOREIGN KEY ([ValueTypeNo]) REFERENCES [Object].[ObjectValueTypes] ([IdNo]);


GO
PRINT N'Altering Procedure [Data].[DataElementUpsert]...';


GO

ALTER PROCEDURE Data.DataElementUpsert
   @SessionId        VARCHAR(40) = NULL,
   @OrganizationId   VARCHAR(20),
   @DataOwnerId      VARCHAR(20),
   @ReferenceDate    DATETIME = null,
   @DomainUri        VARCHAR(80),
   @DomainUriPrefix  VARCHAR(20),
   @DomainName       VARCHAR(20),
	 
   @ExpiredDate      DATETIME = null,
   @AssetNo          INTEGER = null,
   @AssetTypeNo      INTEGER = null,

   @Root             VARCHAR(1024) = null,
   @Domain           VARCHAR(2048) = null,
   @Type             VARCHAR(256) = null,
   @Element          VARCHAR(256) = null,
   @ElementNo        INTEGER,
   @ParentNo         INTEGER,
   @ElementId        VARCHAR(20) = null,
   @TypeNo           INTEGER = 0,
   @ElementURI       VARCHAR(2048) = null,
   @ElementName      VARCHAR(80) = null,
   @ElementType      VARCHAR(20),
   @ElementDataType  VARCHAR(1024),
   @ElementPath      VARCHAR(MAX),
   @Description      VARCHAR(MAX) = null,
   @ElementSequenceID   VARCHAR(128) = null,
   @ElementTypeNo       INTEGER = 0,
   @ElementGroupNo      INTEGER = 0,
   @ElementConstraintNo INTEGER = 0,
   @ElementKeyTypeNo    INTEGER = 0,
   @AutoGeneratedTypeNo INTEGER = 0,
   @StatusNo         INTEGER = 0,
   @ValueTypeNo      SMALLINT = 0,
   @MinLength        INTEGER = 0,
   @MaxLength        INTEGER = 0,
   @MinOccurrence    INTEGER = 0,
   @MaxOccurrence    INTEGER = 0,
   @Nillable         BIT = 0,
   @DefaultValue     VARCHAR(128) = null,
   @FixedValue       VARCHAR(128) = null,
   @SampleValue      VARCHAR(128) = null,
   @PropertiesBagText          VARCHAR(MAX) = null,
   @ProcessInstructionsBagText VARCHAR(MAX) = null,
   @SchemaText       VARCHAR(MAX) = null,
   @OrdinalNo        INTEGER = 0,
   @SequenceID       VARCHAR(20) = null,
   @VersionID        VARCHAR(20) = null,
   @BatchID          VARCHAR(40) = null,

   @ConstraintsText  VARCHAR(MAX) = null,
   @KindNo           SMALLINT = 0,
   @Tags             VARCHAR(128) = null,
   @Guid             VARCHAR(40) = null,

   @OriginalName     VARCHAR(128) = null,
   @OriginalDataType VARCHAR(128) = null,
	 
   @OutAssetNo       INTEGER OUTPUT,
   @OutElementNo     INTEGER OUTPUT,
   @OutElementId     VARCHAR(20) OUTPUT
WITH EXECUTE AS 'KifDbWriter'
AS
BEGIN
   SET NOCOUNT ON
			
   IF @OrganizationId = ''    or @Root = ''    or @Domain = ''	  	or @ElementUri = '' or
      @OrganizationId is null or @Root is null or @Domain is null	or @Type is null	or @ElementUri is null
   BEGIN
      RAISERROR (50001,18,1)
   END			
			
   SET @OutElementId = @ElementId
   SET @OutElementNo = @ElementNo
   
   DECLARE @referenceTypeNo SMALLINT,
           @aliasId         VARCHAR(20) = NULL,
           @alternateId     VARCHAR(40) = NULL,
           @domainNo        INTEGER,
           @outDid          VARCHAR(20),
           @outDno          VARCHAR(20)

   -- register domain if it does not exists, or just fetch ID's
   EXEC Data.DataDomainUpsert
      @SessionId       = @SessionId,
      @OrganizationId  = @OrganizationId,
      @DomainNo        = @AssetNo,
      @DomainId        = null,
      @DataOwnerId     = @DataOwnerId,
      @ReferenceDate   = @ReferenceDate,
      @DomainUri       = @DomainUri,
      @DomainUriPrefix = @DomainUriPrefix,
      @Root            = @Root,
      @Domain          = 'asset',
      @DomainName      = @DomainName,
      @TypeNo          = @AssetTypeNo,
      @Description     = null,
      @OptionNo        = 1,  -- return with output vars if exists
      @OutDomainID     = @outDid OUTPUT,
      @OutDomainNo     = @outDno OUTPUT
			
   SET @domainNo = @outDno
   SET @OutAssetNo = @outDno

   IF @AliasId is null
      SET @AliasId = 'OBJ'
   IF @ReferenceDate is null
      SET @ReferenceDate = getutcdate()
   IF @referenceTypeNo is null
      SET @referenceTypeNo = 40  -- Element
   IF @StatusNo is null
      SET @StatusNo = 1          -- active
   IF @OutElementId = ''
      SET @OutElementId = null

   -- check that the record don't exists...
   DECLARE @eid VARCHAR(20),
           @eno INTEGER

   SELECT @eid = ElementId,
          @eno = ElementNo
     FROM Data.DataElement
    WHERE (OrganizationId = @OrganizationId
      AND  Root = @Root
      AND  Domain = @Domain
      AND  Type = @Type
      AND  Element = @Element
      AND  VersionId = @VersionID
      AND  ElementUri = @ElementUri)
       OR (ElementNo = @ElementNo
       OR  ElementId = @ElementId)
							
   SET @OutElementId = @eid
   SET @OutElementNo = @eno

   -- register object as needed
   IF @OutElementId is null
   BEGIN
      DECLARE @desc VARCHAR(1024) = 'Reference (' + @ElementName + ')'
      EXEC Data.DataReferenceObjectNew @SessionId = @SessionId, @ReferenceDate = @ReferenceDate,
         @ReferenceTypeNo = @ReferenceTypeNo, @AliasId = @aliasId, @AlternateId = @alternateId,
         @Description = @desc, @StatusNo = @StatusNo, @OutReferenceId = @OutElementId OUTPUT
   END
			
   -- insert or update data element record
   IF @OutElementNo is NULL
   BEGIN
      IF @Guid is null or @Guid = ''
         SET @Guid = cast(newid() as VARCHAR(40))

      INSERT INTO Data.DataElement (
         ReferenceDate,    OrganizationId,    ExpiredDate,
         Root,             Domain,            Type,
         Element,          ElementId,         TypeNo,
         ElementUri,       ElementName,       ElementType,
         ElementDataType,  ElementPath,       Description,
         ElementTypeNo,    StatusNo,          ValueTypeNo,
         MinLength,        MaxLength,         MinOccurrence,
         MaxOccurrence,    Nillable,          DefaultValue,
         FixedValue,       SampleValue,       DataOwnerId,
         PropertiesBagText,SchemaText,        SequenceId,
         VersionId,        UpdateSessionId,   ElementConstraintNo,
         ElementGroupNo,   ElementKeyTypeNo,  AssetNo,
         ParentNo,         ElementSequenceID, AutoGeneratedTypeNo,
         OrdinalNo,        BatchID,           ProcessInstructionsBagText,
         KindNo,           ConstraintsText,   Tags,
         [Guid],
         OriginalName,     OriginalDataType,  DomainNo)
      VALUES  (
         @ReferenceDate,   @OrganizationId,   @ExpiredDate,
         @Root,            @Domain,           @Type,
         @Element,         @OutElementId,     @TypeNo,
         @ElementUri,      @ElementName,      @ElementType,
         @ElementDataType, @ElementPath,      @Description,
         @ElementTypeNo,   @StatusNo,         @ValueTypeNo,
         @MinLength,       @MaxLength,        @MinOccurrence,
         @MaxOccurrence,   @Nillable,         @DefaultValue,
         @FixedValue,      @SampleValue,      @DataOwnerId,
         @PropertiesBagText,@SchemaText,       @SequenceId,
         @VersionId,       @SessionId,        @ElementConstraintNo,
         @ElementGroupNo,  @ElementKeyTypeNo, @domainNo,
         @ParentNo,        @ElementSequenceID,@AutoGeneratedTypeNo,
         @OrdinalNo,       @BatchID,          @ProcessInstructionsBagText,
         @KindNo,          @ConstraintsText,  @Tags,
         @Guid,
         @OriginalName,    @OriginalDataType, @domainNo)
      SET @OutElementNo = @@IDENTITY
   END
   ELSE
   -- Update a record only, if something had changed
   IF NOT EXISTS(
      SELECT * 
        FROM Data.DataElement
       WHERE AssetNo = @domainNo
         AND ReferenceDate = @ReferenceDate
         AND ExpiredDate = @ExpiredDate
         AND ElementName = @ElementName
         AND ElementType = @ElementType
         AND ElementDataType = @ElementDataType
         AND ElementPath = @ElementPath
         AND Description = @Description
         AND ElementTypeNo = @ElementTypeNo
         AND ElementGroupNo = @ElementGroupNo
         AND ElementConstraintNo = @ElementConstraintNo
         AND ElementKeyTypeNo = @ElementDataType
         AND StatusNo = @StatusNo
         AND ValueTypeNo = @ValueTypeNo
         AND MinLength = @MinLength
         AND MaxLength = @MaxLength
         AND MinOccurrence = @MinOccurrence
         AND MaxOccurrence = @MaxOccurrence
         AND Nillable = @Nillable
         AND DefaultValue = @DefaultValue
         AND FixedValue = @FixedValue
         AND SampleValue = @SampleValue
         AND PropertiesBagText = @PropertiesBagText
         AND ProcessInstructionsBagText = @ProcessInstructionsBagText
         AND SchemaText = @SchemaText
         AND SequenceId = @SequenceId
         AND VersionId = @VersionId
         AND OrganizationId = @OrganizationId
         AND ElementNo = @ElementNo
         AND ElementId = @OutElementId
         AND KindNo = @KindNo
         AND Tags = @Tags
         AND ConstraintsText = @ConstraintsText
         AND OriginalName = @OriginalName
         AND OriginalDataType = @OriginalDataType)
   BEGIN
      UPDATE Data.DataElement
         SET ReferenceDate = @ReferenceDate,
             ExpiredDate = @ExpiredDate,
             ElementName = @ElementName,
             ElementType = @ElementType,
             ElementDataType = @ElementDataType,
             ElementPath = @ElementPath,
             Description = @Description,
             ElementTypeNo = @ElementTypeNo,
             ElementGroupNo = @ElementGroupNo,
             ElementConstraintNo = @ElementConstraintNo,
             ElementKeyTypeNo = @ElementKeyTypeNo,
             StatusNo = @StatusNo,
             ValueTypeNo = @ValueTypeNo,
             MinLength = @MinLength,
             MaxLength = @MaxLength,
             MinOccurrence = @MinOccurrence,
             MaxOccurrence = @MaxOccurrence,
             Nillable = @Nillable,
             DefaultValue = @DefaultValue,
             FixedValue = @FixedValue,
             SampleValue = @SampleValue,
             PropertiesBagText = @PropertiesBagText,
             ProcessInstructionsBagText = @ProcessInstructionsBagText,
             SchemaText = @SchemaText,
             SequenceId = @SequenceId,
             VersionId = @VersionId,
             UpdateSessionId = @SessionId,
             OrdinalNo = @OrdinalNo,
             ParentNo = @ParentNo,
             ElementSequenceID = @ElementSequenceID,
             AutoGeneratedTypeNo = @AutoGeneratedTypeNo,
             LastUpdateDate = getutcdate(),
             KindNo = @KindNo,
             Tags = @Tags,
             ConstraintsText = @ConstraintsText,
             OriginalName = @OriginalName,
             OriginalDataType = @OriginalDataType
       WHERE OrganizationId = @OrganizationId
         AND AssetNo = @AssetNo
         AND ElementNo = @ElementNo
         AND ElementId = @OutElementId
   END
END
GO
PRINT N'Altering Procedure [Data].[DataReferenceElementGet]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO

ALTER PROCEDURE Data.DataReferenceElementGet
   @SessionId       VARCHAR(40) = NULL,
   @OrganizationId  VARCHAR(20),
   @Root            VARCHAR(1024),
   @DomainUri       VARCHAR(2048)
AS
BEGIN
   SET NOCOUNT ON
   
   IF @Root is null
      SET @Root = ''
   IF @DomainUri is null
      SET @DomainUri = ''

   SELECT e.CreatedDate,
          e.LastUpdateDate,
          e.ReferenceDate,
          e.OrganizationId,
          e.DataOwnerId,
          e.ExpiredDate,
          e.AssetNo,
          e.Root,
          e.Domain,
          e.Type,
          e.Element,
          e.ElementNo,
          e.ParentNo,
          e.ElementId,
          e.TypeNo,
          e.ElementURI,
          e.ElementName,
          e.ElementType,
          e.ElementDataType,
          e.ElementPath,
          e.Description,
          e.ElementSequenceID,
          e.ElementTypeNo,
          e.ElementGroupNo,
          e.ElementConstraintNo,
          e.ElementKeyTypeNo,
          e.AutoGeneratedTypeNo,
          e.StatusNo,
          e.ValueTypeNo,
          e.MinLength,
          e.MaxLength,
          e.MinOccurrence,
          e.MaxOccurrence,
          e.Nillable,
          e.DefaultValue,
          e.FixedValue,
          e.SampleValue,
          e.PropertiesBagText,
          e.ProcessInstructionsBagText,
          e.SchemaText,
          e.OrdinalNo,
          e.SequenceId,
          e.VersionId,
          e.BatchId,
          e.UpdateSessionId,
          e.RecordStatusCode,
          e.ConstraintsText,
          e.KindNo,
          e.Tags,
          e.Guid
     FROM Data.DataElement e
     JOIN Data.DataDomain d
       ON e.DomainNo = d.DomainNo
    WHERE e.OrganizationId = @OrganizationId
      AND (@Root = ''
       OR  e.Root = @Root)
      AND (@DomainUri = ''
       OR  d.DomainUri like '%' + @DomainUri + '%')
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing Procedure [Data].[DataReferenceGet]...';


GO
SET ANSI_NULLS ON;

SET QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[Data].[DataReferenceGet]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [Data].[DataCodeElement] WITH CHECK CHECK CONSTRAINT [fk_DataCodeElementNo];

ALTER TABLE [Data].[DataElement] WITH CHECK CHECK CONSTRAINT [fk_DataElementConstraintType];

ALTER TABLE [Data].[DataElement] WITH CHECK CHECK CONSTRAINT [fk_DataElementDomain];

ALTER TABLE [Data].[DataElement] WITH CHECK CHECK CONSTRAINT [fk_DataElementElementType];

ALTER TABLE [Data].[DataElement] WITH CHECK CHECK CONSTRAINT [fk_DataElementGroupType];

ALTER TABLE [Data].[DataElement] WITH CHECK CHECK CONSTRAINT [fk_DataElementKeyType];

ALTER TABLE [Data].[DataElement] WITH CHECK CHECK CONSTRAINT [fk_DataElementKind];

ALTER TABLE [Data].[DataElement] WITH CHECK CHECK CONSTRAINT [fk_DataElementStatus];

ALTER TABLE [Data].[DataElement] WITH CHECK CHECK CONSTRAINT [fk_DataElementValueType];


GO
PRINT N'Update complete.';


GO
