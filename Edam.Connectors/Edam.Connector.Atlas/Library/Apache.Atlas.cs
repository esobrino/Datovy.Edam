//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.8.0.0 (Newtonsoft.Json v9.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


namespace Edam.Connector.Atlas.Library
{
#pragma warning disable // Disable all warnings

   /// <summary>
   /// Captures time-boundary details.
   /// </summary>
   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class TimeBoundary
   {
      [Newtonsoft.Json.JsonProperty("endTime")]
      public string EndTime { get; set; }

      [Newtonsoft.Json.JsonProperty("startTime")]
      public string StartTime { get; set; }

      [Newtonsoft.Json.JsonProperty("timeZone")]
      public string TimeZone { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   /// <summary>
   /// An instance of a classification; it doesn't have an identity, this object exists only when associated with an entity.
   /// </summary>
   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasClassification_
   {
      [Newtonsoft.Json.JsonProperty("entityGuid")]
      public string EntityGuid { get; set; }

      [Newtonsoft.Json.JsonProperty("entityStatus")]
      [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
      public Status EntityStatus { get; set; }

      [Newtonsoft.Json.JsonProperty("propagate")]
      public bool Propagate { get; set; }

      [Newtonsoft.Json.JsonProperty("removePropagationsOnEntityDelete")]
      public bool RemovePropagationsOnEntityDelete { get; set; }

      [Newtonsoft.Json.JsonProperty("validityPeriods")]
      public System.Collections.Generic.ICollection<TimeBoundary> ValidityPeriods { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasClassification : AtlasClassification_
   {

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasClassificationDef_
   {
      [Newtonsoft.Json.JsonProperty("entityTypes")]
      public System.Collections.Generic.ICollection<string> EntityTypes { get; set; }

      [Newtonsoft.Json.JsonProperty("subTypes")]
      public System.Collections.Generic.ICollection<string> SubTypes { get; set; }

      [Newtonsoft.Json.JsonProperty("superTypes")]
      public System.Collections.Generic.ICollection<string> SuperTypes { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasClassificationDef : AtlasClassificationDef_
   {
      [Newtonsoft.Json.JsonProperty("category")]
      [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
      public TypeCategory Category { get; set; }

      [Newtonsoft.Json.JsonProperty("createTime")]
      public long CreateTime { get; set; }

      [Newtonsoft.Json.JsonProperty("createdBy")]
      public string CreatedBy { get; set; }

      [Newtonsoft.Json.JsonProperty("dateFormatter")]
      public DateFormat DateFormatter { get; set; }

      [Newtonsoft.Json.JsonProperty("description")]
      public string Description { get; set; }

      [Newtonsoft.Json.JsonProperty("guid")]
      public string Guid { get; set; }

      [Newtonsoft.Json.JsonProperty("name")]
      public string Name { get; set; }

      [Newtonsoft.Json.JsonProperty("options")]
      public ReferredStringMap_ Options { get; set; }

      [Newtonsoft.Json.JsonProperty("serviceType")]
      public string ServiceType { get; set; }

      [Newtonsoft.Json.JsonProperty("typeVersion")]
      public string TypeVersion { get; set; }

      [Newtonsoft.Json.JsonProperty("updateTime")]
      public string UpdateTime { get; set; }

      [Newtonsoft.Json.JsonProperty("updatedBy")]
      public string UpdatedBy { get; set; }

      [Newtonsoft.Json.JsonProperty("version")]
      public double Version { get; set; }


   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public enum Cardinality
   {

      [System.Runtime.Serialization.EnumMember(Value = @"SINGLE")]
      SINGLE = 0,


      [System.Runtime.Serialization.EnumMember(Value = @"LIST")]
      LIST = 1,


      [System.Runtime.Serialization.EnumMember(Value = @"SET")]
      SET = 2,


   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasConstraintDef
   {
      [Newtonsoft.Json.JsonProperty("params")]
      public System.Collections.Generic.ICollection<string> Params { get; set; }

      [Newtonsoft.Json.JsonProperty("type")]
      public string Type { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public enum IndexType
   {

      [System.Runtime.Serialization.EnumMember(Value = @"DEFAULT")]
      DEFAULT = 0,


      [System.Runtime.Serialization.EnumMember(Value = @"STRING")]
      STRING = 1,


   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasAttributeDef
   {
      [Newtonsoft.Json.JsonProperty("cardinality")]
      [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
      public Cardinality Cardinality { get; set; }

      [Newtonsoft.Json.JsonProperty("constraints")]
      public System.Collections.Generic.ICollection<AtlasConstraintDef> Constraints { get; set; }

      [Newtonsoft.Json.JsonProperty("defaultValue")]
      public string DefaultValue { get; set; }

      [Newtonsoft.Json.JsonProperty("description")]
      public string Description { get; set; }

      [Newtonsoft.Json.JsonProperty("displayName")]
      public string DisplayName { get; set; }

      [Newtonsoft.Json.JsonProperty("includedInNotification")]
      public bool IncludedInNotification { get; set; }

      [Newtonsoft.Json.JsonProperty("indexType")]
      [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
      public IndexType IndexType { get; set; }

      [Newtonsoft.Json.JsonProperty("isIndexable")]
      public bool IsIndexable { get; set; }

      [Newtonsoft.Json.JsonProperty("isOptional")]
      public bool IsOptional { get; set; }

      [Newtonsoft.Json.JsonProperty("isUnique")]
      public bool IsUnique { get; set; }

      [Newtonsoft.Json.JsonProperty("name")]
      public string Name { get; set; }

      [Newtonsoft.Json.JsonProperty("options")]
      public ReferredStringMap_ Options { get; set; }

      [Newtonsoft.Json.JsonProperty("searchWeight")]
      public double SearchWeight { get; set; }

      [Newtonsoft.Json.JsonProperty("typeName")]
      public string TypeName { get; set; }

      [Newtonsoft.Json.JsonProperty("valuesMaxCount")]
      public double ValuesMaxCount { get; set; }

      [Newtonsoft.Json.JsonProperty("valuesMinCount")]
      public double ValuesMinCount { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public enum TypeCategory
   {

      [System.Runtime.Serialization.EnumMember(Value = @"PRIMITIVE")]
      PRIMITIVE = 0,


      [System.Runtime.Serialization.EnumMember(Value = @"OBJECT_ID_TYPE")]
      OBJECT_ID_TYPE = 1,


      [System.Runtime.Serialization.EnumMember(Value = @"ENUM")]
      ENUM = 2,


      [System.Runtime.Serialization.EnumMember(Value = @"STRUCT")]
      STRUCT = 3,


      [System.Runtime.Serialization.EnumMember(Value = @"CLASSIFICATION")]
      CLASSIFICATION = 4,


      [System.Runtime.Serialization.EnumMember(Value = @"ENTITY")]
      ENTITY = 5,


      [System.Runtime.Serialization.EnumMember(Value = @"ARRAY")]
      ARRAY = 6,


      [System.Runtime.Serialization.EnumMember(Value = @"MAP")]
      MAP = 7,


      [System.Runtime.Serialization.EnumMember(Value = @"RELATIONSHIP")]
      RELATIONSHIP = 8,


      [System.Runtime.Serialization.EnumMember(Value = @"BUSINESS_METADATA")]
      BUSINESS_METADATA = 9,


   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public enum RoundingMode
   {

      [System.Runtime.Serialization.EnumMember(Value = @"UP")]
      UP = 0,


      [System.Runtime.Serialization.EnumMember(Value = @"DOWN")]
      DOWN = 1,


      [System.Runtime.Serialization.EnumMember(Value = @"CEILING")]
      CEILING = 2,


      [System.Runtime.Serialization.EnumMember(Value = @"FLOOR")]
      FLOOR = 3,


      [System.Runtime.Serialization.EnumMember(Value = @"HALF_UP")]
      HALF_UP = 4,


      [System.Runtime.Serialization.EnumMember(Value = @"HALF_DOWN")]
      HALF_DOWN = 5,


      [System.Runtime.Serialization.EnumMember(Value = @"HALF_EVEN")]
      HALF_EVEN = 6,


      [System.Runtime.Serialization.EnumMember(Value = @"UNNECESSARY")]
      UNNECESSARY = 7,


   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class NumberFormat
   {
      [Newtonsoft.Json.JsonProperty("availableLocales")]
      public System.Collections.Generic.ICollection<string> AvailableLocales { get; set; }

      [Newtonsoft.Json.JsonProperty("currency")]
      public string Currency { get; set; }

      /// <summary>
      /// #/definitions/NumberFormat
      /// </summary>
      [Newtonsoft.Json.JsonProperty("currencyInstance")]
      public string CurrencyInstance { get; set; }

      [Newtonsoft.Json.JsonProperty("groupingUsed")]
      public bool GroupingUsed { get; set; }

      /// <summary>
      /// #/definitions/NumberFormat
      /// </summary>
      [Newtonsoft.Json.JsonProperty("instance")]
      public string Instance { get; set; }

      /// <summary>
      /// #/definitions/NumberFormat
      /// </summary>
      [Newtonsoft.Json.JsonProperty("integerInstance")]
      public string IntegerInstance { get; set; }

      [Newtonsoft.Json.JsonProperty("maximumFractionDigits")]
      public double MaximumFractionDigits { get; set; }

      [Newtonsoft.Json.JsonProperty("maximumIntegerDigits")]
      public double MaximumIntegerDigits { get; set; }

      [Newtonsoft.Json.JsonProperty("minimumFractionDigits")]
      public double MinimumFractionDigits { get; set; }

      [Newtonsoft.Json.JsonProperty("miximumIntegerDigits")]
      public double MiximumIntegerDigits { get; set; }

      [Newtonsoft.Json.JsonProperty("parseIntegerOnly")]
      public bool ParseIntegerOnly { get; set; }

      /// <summary>
      /// #/definitions/NumberFormat
      /// </summary>
      [Newtonsoft.Json.JsonProperty("percentInstance")]
      public string PercentInstance { get; set; }

      [Newtonsoft.Json.JsonProperty("roundingMode")]
      [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
      public RoundingMode RoundingMode { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class TimeZone
   {
      [Newtonsoft.Json.JsonProperty("DSTSavings")]
      public double DSTSavings { get; set; }

      [Newtonsoft.Json.JsonProperty("ID")]
      public string ID { get; set; }

      [Newtonsoft.Json.JsonProperty("availableIDs")]
      public System.Collections.Generic.ICollection<string> AvailableIDs { get; set; }

      [Newtonsoft.Json.JsonProperty("default")]
      public TimeZone Default { get; set; }

      [Newtonsoft.Json.JsonProperty("displayName")]
      public string DisplayName { get; set; }

      [Newtonsoft.Json.JsonProperty("rawOffset")]
      public double RawOffset { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class DateFormat
   {
      [Newtonsoft.Json.JsonProperty("availableLocales")]
      public System.Collections.Generic.ICollection<string> AvailableLocales { get; set; }

      [Newtonsoft.Json.JsonProperty("calendar")]
      public double Calendar { get; set; }

      /// <summary>
      /// #/definitions/DateFormat
      /// </summary>
      [Newtonsoft.Json.JsonProperty("dateInstance")]
      public string DateInstance { get; set; }

      /// <summary>
      /// #/definitions/DateFormat
      /// </summary>
      [Newtonsoft.Json.JsonProperty("dateTimeInstance")]
      public string DateTimeInstance { get; set; }

      [Newtonsoft.Json.JsonProperty("instance")]
      public DateFormat Instance { get; set; }

      [Newtonsoft.Json.JsonProperty("lenient")]
      public bool Lenient { get; set; }

      [Newtonsoft.Json.JsonProperty("numberFormat")]
      public NumberFormat NumberFormat { get; set; }

      /// <summary>
      /// #/definitions/DateFormat
      /// </summary>
      [Newtonsoft.Json.JsonProperty("timeInstance")]
      public string TimeInstance { get; set; }

      [Newtonsoft.Json.JsonProperty("timeZone")]
      public TimeZone TimeZone { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasBaseTypeDef
   {
      [Newtonsoft.Json.JsonProperty("category")]
      [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
      public TypeCategory Category { get; set; }

      [Newtonsoft.Json.JsonProperty("createTime")]
      public long CreateTime { get; set; }

      [Newtonsoft.Json.JsonProperty("createdBy")]
      public string CreatedBy { get; set; }

      [Newtonsoft.Json.JsonProperty("dateFormatter")]
      public DateFormat DateFormatter { get; set; }

      [Newtonsoft.Json.JsonProperty("description")]
      public string Description { get; set; }

      [Newtonsoft.Json.JsonProperty("guid")]
      public string Guid { get; set; }

      [Newtonsoft.Json.JsonProperty("name")]
      public string Name { get; set; }

      [Newtonsoft.Json.JsonProperty("options")]
      public ReferredStringMap_ Options { get; set; }

      [Newtonsoft.Json.JsonProperty("serviceType")]
      public string ServiceType { get; set; }

      [Newtonsoft.Json.JsonProperty("typeVersion")]
      public string TypeVersion { get; set; }

      [Newtonsoft.Json.JsonProperty("updateTime")]
      public string UpdateTime { get; set; }

      [Newtonsoft.Json.JsonProperty("updatedBy")]
      public string UpdatedBy { get; set; }

      [Newtonsoft.Json.JsonProperty("version")]
      public double Version { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasRelationshipAttributeDef_
   {
      [Newtonsoft.Json.JsonProperty("isLegacyAttribute")]
      public bool IsLegacyAttribute { get; set; }

      [Newtonsoft.Json.JsonProperty("relationshipTypeName")]
      public string RelationshipTypeName { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasRelationshipAttributeDef : AtlasRelationshipAttributeDef_
   {
      [Newtonsoft.Json.JsonProperty("cardinality")]
      [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
      public Cardinality Cardinality { get; set; }

      [Newtonsoft.Json.JsonProperty("constraints")]
      public System.Collections.Generic.ICollection<AtlasConstraintDef> Constraints { get; set; }

      [Newtonsoft.Json.JsonProperty("defaultValue")]
      public string DefaultValue { get; set; }

      [Newtonsoft.Json.JsonProperty("description")]
      public string Description { get; set; }

      [Newtonsoft.Json.JsonProperty("displayName")]
      public string DisplayName { get; set; }

      [Newtonsoft.Json.JsonProperty("includedInNotification")]
      public bool IncludedInNotification { get; set; }

      [Newtonsoft.Json.JsonProperty("indexType")]
      [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
      public IndexType IndexType { get; set; }

      [Newtonsoft.Json.JsonProperty("isIndexable")]
      public bool IsIndexable { get; set; }

      [Newtonsoft.Json.JsonProperty("isOptional")]
      public bool IsOptional { get; set; }

      [Newtonsoft.Json.JsonProperty("isUnique")]
      public bool IsUnique { get; set; }

      [Newtonsoft.Json.JsonProperty("name")]
      public string Name { get; set; }

      [Newtonsoft.Json.JsonProperty("options")]
      public ReferredStringMap_ Options { get; set; }

      [Newtonsoft.Json.JsonProperty("searchWeight")]
      public double SearchWeight { get; set; }

      [Newtonsoft.Json.JsonProperty("typeName")]
      public string TypeName { get; set; }

      [Newtonsoft.Json.JsonProperty("valuesMaxCount")]
      public double ValuesMaxCount { get; set; }

      [Newtonsoft.Json.JsonProperty("valuesMinCount")]
      public double ValuesMinCount { get; set; }


   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public enum AtlasTermAssignmentStatus
   {

      [System.Runtime.Serialization.EnumMember(Value = @"DISCOVERED")]
      DISCOVERED = 0,


      [System.Runtime.Serialization.EnumMember(Value = @"PROPOSED")]
      PROPOSED = 1,


      [System.Runtime.Serialization.EnumMember(Value = @"IMPORTED")]
      IMPORTED = 2,


      [System.Runtime.Serialization.EnumMember(Value = @"VALIDATED")]
      VALIDATED = 3,


      [System.Runtime.Serialization.EnumMember(Value = @"DEPRECATED")]
      DEPRECATED = 4,


      [System.Runtime.Serialization.EnumMember(Value = @"OBSOLETE")]
      OBSOLETE = 5,


      [System.Runtime.Serialization.EnumMember(Value = @"OTHER")]
      OTHER = 6,


   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasTermAssignmentHeader
   {
      [Newtonsoft.Json.JsonProperty("confidence")]
      public double Confidence { get; set; }

      [Newtonsoft.Json.JsonProperty("createdBy")]
      public string CreatedBy { get; set; }

      [Newtonsoft.Json.JsonProperty("description")]
      public string Description { get; set; }

      [Newtonsoft.Json.JsonProperty("displayText")]
      public string DisplayText { get; set; }

      [Newtonsoft.Json.JsonProperty("expression")]
      public string Expression { get; set; }

      [Newtonsoft.Json.JsonProperty("qualifiedName")]
      public string QualifiedName { get; set; }

      [Newtonsoft.Json.JsonProperty("relationGuid")]
      public string RelationGuid { get; set; }

      [Newtonsoft.Json.JsonProperty("source")]
      public string Source { get; set; }

      [Newtonsoft.Json.JsonProperty("status")]
      [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
      public AtlasTermAssignmentStatus Status { get; set; }

      [Newtonsoft.Json.JsonProperty("steward")]
      public string Steward { get; set; }

      [Newtonsoft.Json.JsonProperty("termGuid")]
      public string TermGuid { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AttributeDefs_
   {
      [Newtonsoft.Json.JsonProperty("attributeDefs")]
      public System.Collections.Generic.ICollection<AtlasAttributeDef> AttributeDefs { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasStructDef : AttributeDefs_
   {
      [Newtonsoft.Json.JsonProperty("category")]
      [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
      public TypeCategory Category { get; set; }

      [Newtonsoft.Json.JsonProperty("createTime")]
      public long CreateTime { get; set; }

      [Newtonsoft.Json.JsonProperty("createdBy")]
      public string CreatedBy { get; set; }

      [Newtonsoft.Json.JsonProperty("dateFormatter")]
      public DateFormat DateFormatter { get; set; }

      [Newtonsoft.Json.JsonProperty("description")]
      public string Description { get; set; }

      [Newtonsoft.Json.JsonProperty("guid")]
      public string Guid { get; set; }

      [Newtonsoft.Json.JsonProperty("name")]
      public string Name { get; set; }

      [Newtonsoft.Json.JsonProperty("options")]
      public ReferredStringMap_ Options { get; set; }

      [Newtonsoft.Json.JsonProperty("serviceType")]
      public string ServiceType { get; set; }

      [Newtonsoft.Json.JsonProperty("typeVersion")]
      public string TypeVersion { get; set; }

      [Newtonsoft.Json.JsonProperty("updateTime")]
      public string UpdateTime { get; set; }

      [Newtonsoft.Json.JsonProperty("updatedBy")]
      public string UpdatedBy { get; set; }

      [Newtonsoft.Json.JsonProperty("version")]
      public double Version { get; set; }


   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasStruct
   {
      [Newtonsoft.Json.JsonProperty("attributes")]
      public ReferredObjectMap_ Attributes { get; set; }

      [Newtonsoft.Json.JsonProperty("typeName")]
      public string TypeName { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasEntityDef_
   {
      [Newtonsoft.Json.JsonProperty("businessAttributeDefs")]
      public System.Collections.Generic.ICollection<AtlasAttributeDef> BusinessAttributeDefs { get; set; }

      [Newtonsoft.Json.JsonProperty("relationshipAttributeDefs")]
      public System.Collections.Generic.ICollection<AtlasRelationshipAttributeDef> RelationshipAttributeDefs { get; set; }

      [Newtonsoft.Json.JsonProperty("subTypes")]
      public System.Collections.Generic.ICollection<string> SubTypes { get; set; }

      [Newtonsoft.Json.JsonProperty("superTypes")]
      public System.Collections.Generic.ICollection<string> SuperTypes { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasEntityDef : AtlasEntityDef_
   {
      [Newtonsoft.Json.JsonProperty("attributeDefs")]
      public System.Collections.Generic.ICollection<AtlasAttributeDef> AttributeDefs { get; set; }

      [Newtonsoft.Json.JsonProperty("category")]
      [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
      public TypeCategory Category { get; set; }

      [Newtonsoft.Json.JsonProperty("createTime")]
      public long CreateTime { get; set; }

      [Newtonsoft.Json.JsonProperty("createdBy")]
      public string CreatedBy { get; set; }

      [Newtonsoft.Json.JsonProperty("dateFormatter")]
      public DateFormat DateFormatter { get; set; }

      [Newtonsoft.Json.JsonProperty("description")]
      public string Description { get; set; }

      [Newtonsoft.Json.JsonProperty("guid")]
      public string Guid { get; set; }

      [Newtonsoft.Json.JsonProperty("name")]
      public string Name { get; set; }

      [Newtonsoft.Json.JsonProperty("options")]
      public ReferredStringMap_ Options { get; set; }

      [Newtonsoft.Json.JsonProperty("serviceType")]
      public string ServiceType { get; set; }

      [Newtonsoft.Json.JsonProperty("typeVersion")]
      public string TypeVersion { get; set; }

      [Newtonsoft.Json.JsonProperty("updateTime")]
      public string UpdateTime { get; set; }

      [Newtonsoft.Json.JsonProperty("updatedBy")]
      public string UpdatedBy { get; set; }

      [Newtonsoft.Json.JsonProperty("version")]
      public double Version { get; set; }


   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasBusinessMetadataDef : AttributeDefs_
   {
      [Newtonsoft.Json.JsonProperty("category")]
      [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
      public TypeCategory Category { get; set; }

      [Newtonsoft.Json.JsonProperty("createTime")]
      public long CreateTime { get; set; }

      [Newtonsoft.Json.JsonProperty("createdBy")]
      public string CreatedBy { get; set; }

      [Newtonsoft.Json.JsonProperty("dateFormatter")]
      public DateFormat DateFormatter { get; set; }

      [Newtonsoft.Json.JsonProperty("description")]
      public string Description { get; set; }

      [Newtonsoft.Json.JsonProperty("guid")]
      public string Guid { get; set; }

      [Newtonsoft.Json.JsonProperty("name")]
      public string Name { get; set; }

      [Newtonsoft.Json.JsonProperty("options")]
      public ReferredStringMap_ Options { get; set; }

      [Newtonsoft.Json.JsonProperty("serviceType")]
      public string ServiceType { get; set; }

      [Newtonsoft.Json.JsonProperty("typeVersion")]
      public string TypeVersion { get; set; }

      [Newtonsoft.Json.JsonProperty("updateTime")]
      public string UpdateTime { get; set; }

      [Newtonsoft.Json.JsonProperty("updatedBy")]
      public string UpdatedBy { get; set; }

      [Newtonsoft.Json.JsonProperty("version")]
      public double Version { get; set; }


   }

   /// <summary>
   /// An instance of an entity - like hive_table, hive_database.
   /// </summary>
   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasEntity_
   {
      [Newtonsoft.Json.JsonProperty("businessAttributes")]
      public System.Collections.Generic.ICollection<string> BusinessAttributes { get; set; }

      [Newtonsoft.Json.JsonProperty("classifications")]
      public System.Collections.Generic.ICollection<object> Classifications { get; set; }

      [Newtonsoft.Json.JsonProperty("createTime")]
      public long CreateTime { get; set; }

      [Newtonsoft.Json.JsonProperty("createdBy")]
      public string CreatedBy { get; set; }

      [Newtonsoft.Json.JsonProperty("customAttributes")]
      public System.Collections.Generic.ICollection<string> CustomAttributes { get; set; }

      [Newtonsoft.Json.JsonProperty("guid")]
      public string Guid { get; set; }

      [Newtonsoft.Json.JsonProperty("isIncomplete")]
      public bool IsIncomplete { get; set; }

      [Newtonsoft.Json.JsonProperty("labels")]
      public System.Collections.Generic.ICollection<string> Labels { get; set; }

      [Newtonsoft.Json.JsonProperty("meanings")]
      public System.Collections.Generic.ICollection<AtlasTermAssignmentHeader> Meanings { get; set; }

      [Newtonsoft.Json.JsonProperty("pendingTasks")]
      public System.Collections.Generic.ICollection<string> PendingTasks { get; set; }

      [Newtonsoft.Json.JsonProperty("provenanceType")]
      public double ProvenanceType { get; set; }

      [Newtonsoft.Json.JsonProperty("proxy")]
      public bool Proxy { get; set; }

      [Newtonsoft.Json.JsonProperty("relationshipAttributes")]
      public System.Collections.Generic.ICollection<string> RelationshipAttributes { get; set; }

      [Newtonsoft.Json.JsonProperty("status")]
      [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
      public Status Status { get; set; }

      [Newtonsoft.Json.JsonProperty("updateTime")]
      public double UpdateTime { get; set; }

      [Newtonsoft.Json.JsonProperty("updateBy")]
      public string UpdateBy { get; set; }

      [Newtonsoft.Json.JsonProperty("version")]
      public double Version { get; set; }

      [Newtonsoft.Json.JsonProperty("attributes")]
      public ReferredObjectMap_ Attributes { get; set; }

      [Newtonsoft.Json.JsonProperty("typeName")]
      public string TypeName { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasEntity : AtlasEntity_
   {
      [Newtonsoft.Json.JsonProperty("attributes")]
      public ReferredObjectMap_ Attributes { get; set; }

      [Newtonsoft.Json.JsonProperty("typeName")]
      public string TypeName { get; set; }


   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class ReferredStringMap_ : System.Collections.Generic.Dictionary<string, string>
   {

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class ReferredObjectMap_ : System.Collections.Generic.Dictionary<string, object>
   {

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class ReferredEntityMap_ : System.Collections.Generic.Dictionary<string, AtlasEntity>
   {

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasEntityExtInfo
   {
      [Newtonsoft.Json.JsonProperty("referredEntities")]
      public ReferredEntityMap_ ReferredEntities { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasEntityWithExtInfo
   {
      [Newtonsoft.Json.JsonProperty("entity")]
      public AtlasEntity Entity { get; set; }

      [Newtonsoft.Json.JsonProperty("referredEntities")]
      public ReferredEntityMap_ ReferredEntities { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasEntitiesWithExtInfo : System.Collections.Generic.Dictionary<string, AtlasEntity>
   {
      [Newtonsoft.Json.JsonProperty("entities")]
      public System.Collections.Generic.ICollection<AtlasEntity> Entities { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasRelationshipEndDef
   {
      [Newtonsoft.Json.JsonProperty("cardinality")]
      [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
      public Cardinality Cardinality { get; set; }

      [Newtonsoft.Json.JsonProperty("description")]
      public string Description { get; set; }

      [Newtonsoft.Json.JsonProperty("isContainer")]
      public bool IsContainer { get; set; }

      [Newtonsoft.Json.JsonProperty("isLegacyAttribute")]
      public bool IsLegacyAttribute { get; set; }

      [Newtonsoft.Json.JsonProperty("name")]
      public string Name { get; set; }

      [Newtonsoft.Json.JsonProperty("type")]
      public string Type { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public enum PropagateTags
   {

      [System.Runtime.Serialization.EnumMember(Value = @"NONE")]
      NONE = 0,


      [System.Runtime.Serialization.EnumMember(Value = @"ONE_TO_TWO")]
      ONE_TO_TWO = 1,


      [System.Runtime.Serialization.EnumMember(Value = @"TWO_TO_ONE")]
      TWO_TO_ONE = 2,


      [System.Runtime.Serialization.EnumMember(Value = @"BOTH")]
      BOTH = 3,


   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public enum RelationshipCategory
   {

      [System.Runtime.Serialization.EnumMember(Value = @"ASSOCIATION")]
      ASSOCIATION = 0,


      [System.Runtime.Serialization.EnumMember(Value = @"AGGREGATION")]
      AGGREGATION = 1,


      [System.Runtime.Serialization.EnumMember(Value = @"COMPOSITION")]
      COMPOSITION = 2,


   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasRelationshipDef_
   {
      [Newtonsoft.Json.JsonProperty("endDef1")]
      public AtlasRelationshipEndDef EndDef1 { get; set; }

      [Newtonsoft.Json.JsonProperty("endDef2")]
      public AtlasRelationshipEndDef EndDef2 { get; set; }

      [Newtonsoft.Json.JsonProperty("propagatedTags")]
      [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
      public PropagateTags PropagatedTags { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasRelationshipDef : AtlasRelationshipDef_
   {
      [Newtonsoft.Json.JsonProperty("category")]
      [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
      public TypeCategory Category { get; set; }

      [Newtonsoft.Json.JsonProperty("createTime")]
      public long CreateTime { get; set; }

      [Newtonsoft.Json.JsonProperty("createdBy")]
      public string CreatedBy { get; set; }

      [Newtonsoft.Json.JsonProperty("dateFormatter")]
      public DateFormat DateFormatter { get; set; }

      [Newtonsoft.Json.JsonProperty("description")]
      public string Description { get; set; }

      [Newtonsoft.Json.JsonProperty("guid")]
      public string Guid { get; set; }

      [Newtonsoft.Json.JsonProperty("name")]
      public string Name { get; set; }

      [Newtonsoft.Json.JsonProperty("options")]
      public ReferredStringMap_ Options { get; set; }

      [Newtonsoft.Json.JsonProperty("serviceType")]
      public string ServiceType { get; set; }

      [Newtonsoft.Json.JsonProperty("typeVersion")]
      public string TypeVersion { get; set; }

      [Newtonsoft.Json.JsonProperty("updateTime")]
      public string UpdateTime { get; set; }

      [Newtonsoft.Json.JsonProperty("updatedBy")]
      public string UpdatedBy { get; set; }

      [Newtonsoft.Json.JsonProperty("version")]
      public double Version { get; set; }


   }

   /// <summary>
   /// Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
   /// </summary>
   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public enum Status
   {

      [System.Runtime.Serialization.EnumMember(Value = @"ACTIVE")]
      ACTIVE = 0,


      [System.Runtime.Serialization.EnumMember(Value = @"DELETED")]
      DELETED = 1,


      [System.Runtime.Serialization.EnumMember(Value = @"PURGE")]
      PURGE = 2,


   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasEnumElementDef
   {
      [Newtonsoft.Json.JsonProperty("description")]
      public string Description { get; set; }

      [Newtonsoft.Json.JsonProperty("ordinal")]
      public object Ordinal { get; set; }

      [Newtonsoft.Json.JsonProperty("value")]
      public object Value { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasEnumDef_
   {
      [Newtonsoft.Json.JsonProperty("defaultValue")]
      public string DefaultValue { get; set; }

      [Newtonsoft.Json.JsonProperty("elementDefs")]
      public System.Collections.Generic.ICollection<AtlasEnumElementDef> ElementDefs { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasEnumDef : AtlasEnumDef_
   {
      [Newtonsoft.Json.JsonProperty("category")]
      [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
      public TypeCategory Category { get; set; }

      [Newtonsoft.Json.JsonProperty("createTime")]
      public long CreateTime { get; set; }

      [Newtonsoft.Json.JsonProperty("createdBy")]
      public string CreatedBy { get; set; }

      [Newtonsoft.Json.JsonProperty("dateFormatter")]
      public DateFormat DateFormatter { get; set; }

      [Newtonsoft.Json.JsonProperty("description")]
      public string Description { get; set; }

      [Newtonsoft.Json.JsonProperty("guid")]
      public string Guid { get; set; }

      [Newtonsoft.Json.JsonProperty("name")]
      public string Name { get; set; }

      [Newtonsoft.Json.JsonProperty("options")]
      public ReferredStringMap_ Options { get; set; }

      [Newtonsoft.Json.JsonProperty("serviceType")]
      public string ServiceType { get; set; }

      [Newtonsoft.Json.JsonProperty("typeVersion")]
      public string TypeVersion { get; set; }

      [Newtonsoft.Json.JsonProperty("updateTime")]
      public string UpdateTime { get; set; }

      [Newtonsoft.Json.JsonProperty("updatedBy")]
      public string UpdatedBy { get; set; }

      [Newtonsoft.Json.JsonProperty("version")]
      public double Version { get; set; }


   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class AtlasTypesDef
   {
      [Newtonsoft.Json.JsonProperty("businessMetadataDefs")]
      public System.Collections.Generic.ICollection<AtlasBusinessMetadataDef> BusinessMetadataDefs { get; set; }

      [Newtonsoft.Json.JsonProperty("classificationDefs")]
      public System.Collections.Generic.ICollection<AtlasClassificationDef> ClassificationDefs { get; set; }

      [Newtonsoft.Json.JsonProperty("entityDefs")]
      public System.Collections.Generic.ICollection<AtlasEntityDef> EntityDefs { get; set; }

      [Newtonsoft.Json.JsonProperty("enumDefs")]
      public System.Collections.Generic.ICollection<AtlasEnumDef> EnumDefs { get; set; }

      [Newtonsoft.Json.JsonProperty("relationshipDefs")]
      public System.Collections.Generic.ICollection<AtlasRelationshipDef> RelationshipDefs { get; set; }

      [Newtonsoft.Json.JsonProperty("structDefs")]
      public System.Collections.Generic.ICollection<AtlasStructDef> StructDefs { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class Apache_Atlas_Document_
   {
      [Newtonsoft.Json.JsonProperty("entities")]
      public System.Collections.Generic.ICollection<AtlasEntity> Entities { get; set; }

      [Newtonsoft.Json.JsonProperty("entityDefs")]
      public System.Collections.Generic.ICollection<AtlasEntityDef> EntityDefs { get; set; }

      [Newtonsoft.Json.JsonProperty("businessMetadataDefs")]
      public System.Collections.Generic.ICollection<AtlasBusinessMetadataDef> BusinessMetadataDefs { get; set; }

      [Newtonsoft.Json.JsonProperty("relationshipDefs")]
      public System.Collections.Generic.ICollection<AtlasRelationshipDef> RelationshipDefs { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }

   [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
   public partial class Json
   {
      /// <summary>
      /// root element
      /// </summary>
      [Newtonsoft.Json.JsonProperty("Apache_Atlas_Document")]
      public object Apache_Atlas_Document { get; set; }

      [Newtonsoft.Json.JsonProperty("entities")]
      public System.Collections.Generic.ICollection<AtlasEntity> Entities { get; set; }

      [Newtonsoft.Json.JsonProperty("entityDefs")]
      public System.Collections.Generic.ICollection<AtlasEntityDef> EntityDefs { get; set; }

      [Newtonsoft.Json.JsonProperty("businessMetadataDefs")]
      public System.Collections.Generic.ICollection<AtlasBusinessMetadataDef> BusinessMetadataDefs { get; set; }

      [Newtonsoft.Json.JsonProperty("relationshipDefs")]
      public System.Collections.Generic.ICollection<AtlasRelationshipDef> RelationshipDefs { get; set; }



      private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

      [Newtonsoft.Json.JsonExtensionData]
      public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
      {
         get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
         set { _additionalProperties = value; }
      }

   }
}