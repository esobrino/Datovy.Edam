#pragma checksum "C:\prjs\InXone.WinUI\InXone.WinUI\InXone.Xaml\InXone.WinUI.Controls\Controls\Accounts\AccountLoginControl.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "25A6E8D8B063A7F876AFAFFABA69962A4810FD170FACF87F52A04BED26108BF4"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InXone.WinUI.Controls.Accounts
{
    partial class AccountLoginControl : 
        global::Microsoft.UI.Xaml.Controls.UserControl, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_FrameworkElement_MaxWidth(global::Microsoft.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.MaxWidth = value;
            }
            public static void Set_Microsoft_UI_Xaml_UIElement_Visibility(global::Microsoft.UI.Xaml.UIElement obj, global::Microsoft.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Control_IsEnabled(global::Microsoft.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBox_Text(global::Microsoft.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_PasswordBox_Password(global::Microsoft.UI.Xaml.Controls.PasswordBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Password = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ContentControl_Content(global::Microsoft.UI.Xaml.Controls.ContentControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Content = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton obj, global::System.Nullable<global::System.Boolean> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Boolean) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Boolean), targetNullValue);
                }
                obj.IsChecked = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AccountLoginControl_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IAccountLoginControl_Bindings
        {
            private global::InXone.WinUI.Controls.Accounts.AccountLoginControl dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.Border obj4;
            private global::Microsoft.UI.Xaml.Controls.ProgressBar obj5;
            private global::Microsoft.UI.Xaml.Controls.StackPanel obj6;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj7;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj8;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj9;
            private global::Microsoft.UI.Xaml.Controls.StackPanel obj10;
            private global::Microsoft.UI.Xaml.Controls.PasswordBox obj11;
            private global::Microsoft.UI.Xaml.Controls.PasswordBox obj12;
            private global::Microsoft.UI.Xaml.Controls.Button obj13;
            private global::Microsoft.UI.Xaml.Controls.Button obj14;
            private global::Microsoft.UI.Xaml.Controls.Button obj15;
            private global::Microsoft.UI.Xaml.Controls.CheckBox obj16;
            private global::Microsoft.UI.Xaml.Controls.CheckBox obj17;
            private global::Microsoft.UI.Xaml.Controls.CheckBox obj18;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj19;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj20;

            private AccountLoginControl_obj1_BindingsTracking bindingsTracking;

            public AccountLoginControl_obj1_Bindings()
            {
                this.bindingsTracking = new AccountLoginControl_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 4: // Controls\Accounts\AccountLoginControl.xaml line 20
                        this.obj4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Border>(target);
                        break;
                    case 5: // Controls\Accounts\AccountLoginControl.xaml line 31
                        this.obj5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ProgressBar>(target);
                        this.bindingsTracking.RegisterTwoWayListener_5(this.obj5);
                        break;
                    case 6: // Controls\Accounts\AccountLoginControl.xaml line 41
                        this.obj6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                        this.bindingsTracking.RegisterTwoWayListener_6(this.obj6);
                        break;
                    case 7: // Controls\Accounts\AccountLoginControl.xaml line 42
                        this.obj7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        this.bindingsTracking.RegisterTwoWayListener_7(this.obj7);
                        break;
                    case 8: // Controls\Accounts\AccountLoginControl.xaml line 48
                        this.obj8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_8(this.obj8);
                        break;
                    case 9: // Controls\Accounts\AccountLoginControl.xaml line 56
                        this.obj9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_9(this.obj9);
                        break;
                    case 10: // Controls\Accounts\AccountLoginControl.xaml line 66
                        this.obj10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                        break;
                    case 11: // Controls\Accounts\AccountLoginControl.xaml line 78
                        this.obj11 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.PasswordBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_11(this.obj11);
                        break;
                    case 12: // Controls\Accounts\AccountLoginControl.xaml line 85
                        this.obj12 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.PasswordBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_12(this.obj12);
                        break;
                    case 13: // Controls\Accounts\AccountLoginControl.xaml line 113
                        this.obj13 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        this.bindingsTracking.RegisterTwoWayListener_13(this.obj13);
                        break;
                    case 14: // Controls\Accounts\AccountLoginControl.xaml line 122
                        this.obj14 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        this.bindingsTracking.RegisterTwoWayListener_14(this.obj14);
                        break;
                    case 15: // Controls\Accounts\AccountLoginControl.xaml line 134
                        this.obj15 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        break;
                    case 16: // Controls\Accounts\AccountLoginControl.xaml line 94
                        this.obj16 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_16(this.obj16);
                        break;
                    case 17: // Controls\Accounts\AccountLoginControl.xaml line 100
                        this.obj17 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_17(this.obj17);
                        break;
                    case 18: // Controls\Accounts\AccountLoginControl.xaml line 106
                        this.obj18 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_18(this.obj18);
                        break;
                    case 19: // Controls\Accounts\AccountLoginControl.xaml line 67
                        this.obj19 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 20: // Controls\Accounts\AccountLoginControl.xaml line 71
                        this.obj20 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_20(this.obj20);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IAccountLoginControl_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::InXone.WinUI.Controls.Accounts.AccountLoginControl>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::InXone.WinUI.Controls.Accounts.AccountLoginControl obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::InXone.WinUI.Controls.ViewModels.LoginViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_MaxWidth(obj.MaxWidth, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_BusyVisible(obj.BusyVisible, phase);
                        this.Update_ViewModel_EditorAreaVisible(obj.EditorAreaVisible, phase);
                        this.Update_ViewModel_TitleText(obj.TitleText, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_IsEmailEnabled(obj.IsEmailEnabled, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_OrganizationId(obj.OrganizationId, phase);
                        this.Update_ViewModel_UserEmail(obj.UserEmail, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SetCodeVisible(obj.SetCodeVisible, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_UserPassword(obj.UserPassword, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Password1Visible(obj.Password1Visible, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Password2(obj.Password2, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Password2Visible(obj.Password2Visible, phase);
                        this.Update_ViewModel_OnSubmitCommand(obj.OnSubmitCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SubmitText(obj.SubmitText, phase);
                        this.Update_ViewModel_AcceptAll(obj.AcceptAll, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_OnForgotCommand(obj.OnForgotCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_AcceptEssential(obj.AcceptEssential, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_ForgotVisible(obj.ForgotVisible, phase);
                        this.Update_ViewModel_OnCancelCommand(obj.OnCancelCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_AcceptPrivacy(obj.AcceptPrivacy, phase);
                        this.Update_ViewModel_AcceptTerms(obj.AcceptTerms, phase);
                        this.Update_ViewModel_KeepMeLogged(obj.KeepMeLogged, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_CheckForEmailedCode(obj.CheckForEmailedCode, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_RequestId(obj.RequestId, phase);
                    }
                }
            }
            private void Update_ViewModel_MaxWidth(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 20
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_FrameworkElement_MaxWidth(this.obj4, obj);
                }
            }
            private void Update_ViewModel_BusyVisible(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 31
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj5, obj);
                }
            }
            private void Update_ViewModel_EditorAreaVisible(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 41
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj6, obj);
                }
            }
            private void Update_ViewModel_TitleText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 42
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj7, obj, null);
                }
            }
            private void Update_ViewModel_IsEmailEnabled(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 48
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Control_IsEnabled(this.obj8, obj);
                    // Controls\Accounts\AccountLoginControl.xaml line 56
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Control_IsEnabled(this.obj9, obj);
                }
            }
            private void Update_ViewModel_OrganizationId(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 48
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj8, obj, null);
                }
            }
            private void Update_ViewModel_UserEmail(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 56
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj9, obj, null);
                }
            }
            private void Update_ViewModel_SetCodeVisible(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 66
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj10, obj);
                }
            }
            private void Update_ViewModel_UserPassword(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 78
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_PasswordBox_Password(this.obj11, obj, null);
                }
            }
            private void Update_ViewModel_Password1Visible(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 78
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj11, obj);
                }
            }
            private void Update_ViewModel_Password2(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 85
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_PasswordBox_Password(this.obj12, obj, null);
                }
            }
            private void Update_ViewModel_Password2Visible(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 85
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj12, obj);
                }
            }
            private void Update_ViewModel_OnSubmitCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 113
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj13, obj, null);
                }
            }
            private void Update_ViewModel_SubmitText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 113
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ContentControl_Content(this.obj13, obj, null);
                }
            }
            private void Update_ViewModel_AcceptAll(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 113
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Control_IsEnabled(this.obj13, obj);
                }
            }
            private void Update_ViewModel_OnForgotCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 122
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj14, obj, null);
                }
            }
            private void Update_ViewModel_AcceptEssential(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 122
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Control_IsEnabled(this.obj14, obj);
                }
            }
            private void Update_ViewModel_ForgotVisible(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 122
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj14, obj);
                }
            }
            private void Update_ViewModel_OnCancelCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 134
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj15, obj, null);
                }
            }
            private void Update_ViewModel_AcceptPrivacy(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 94
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj16, obj, null);
                }
            }
            private void Update_ViewModel_AcceptTerms(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 100
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj17, obj, null);
                }
            }
            private void Update_ViewModel_KeepMeLogged(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 106
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj18, obj, null);
                }
            }
            private void Update_ViewModel_CheckForEmailedCode(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 67
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj19, obj, null);
                }
            }
            private void Update_ViewModel_RequestId(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Accounts\AccountLoginControl.xaml line 71
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj20, obj, null);
                }
            }
            private void UpdateTwoWay_5_Visibility()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.BusyVisible = this.obj5.Visibility;
                        }
                    }
                }
            }
            private void UpdateTwoWay_6_Visibility()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.EditorAreaVisible = this.obj6.Visibility;
                        }
                    }
                }
            }
            private void UpdateTwoWay_7_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.TitleText = this.obj7.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_8_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.OrganizationId = this.obj8.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_9_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.UserEmail = this.obj9.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_11_Password()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.UserPassword = this.obj11.Password;
                        }
                    }
                }
            }
            private void UpdateTwoWay_12_Password()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.Password2 = this.obj12.Password;
                        }
                    }
                }
            }
            private void UpdateTwoWay_13_Content()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SubmitText = (global::System.String)this.obj13.Content;
                        }
                    }
                }
            }
            private void UpdateTwoWay_13_IsEnabled()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.AcceptAll = this.obj13.IsEnabled;
                        }
                    }
                }
            }
            private void UpdateTwoWay_14_IsEnabled()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.AcceptEssential = this.obj14.IsEnabled;
                        }
                    }
                }
            }
            private void UpdateTwoWay_16_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.AcceptPrivacy = (global::System.Boolean)this.obj16.IsChecked;
                        }
                    }
                }
            }
            private void UpdateTwoWay_17_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.AcceptTerms = (global::System.Boolean)this.obj17.IsChecked;
                        }
                    }
                }
            }
            private void UpdateTwoWay_18_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.KeepMeLogged = (global::System.Boolean)this.obj18.IsChecked;
                        }
                    }
                }
            }
            private void UpdateTwoWay_20_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.RequestId = this.obj20.Text;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AccountLoginControl_obj1_BindingsTracking
            {
                private global::System.WeakReference<AccountLoginControl_obj1_Bindings> weakRefToBindingObj; 

                public AccountLoginControl_obj1_BindingsTracking(AccountLoginControl_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AccountLoginControl_obj1_Bindings>(obj);
                }

                public AccountLoginControl_obj1_Bindings TryGetBindingObject()
                {
                    AccountLoginControl_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AccountLoginControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::InXone.WinUI.Controls.ViewModels.LoginViewModel obj = sender as global::InXone.WinUI.Controls.ViewModels.LoginViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_BusyVisible(obj.BusyVisible, DATA_CHANGED);
                                bindings.Update_ViewModel_EditorAreaVisible(obj.EditorAreaVisible, DATA_CHANGED);
                                bindings.Update_ViewModel_TitleText(obj.TitleText, DATA_CHANGED);
                                bindings.Update_ViewModel_OrganizationId(obj.OrganizationId, DATA_CHANGED);
                                bindings.Update_ViewModel_UserEmail(obj.UserEmail, DATA_CHANGED);
                                bindings.Update_ViewModel_UserPassword(obj.UserPassword, DATA_CHANGED);
                                bindings.Update_ViewModel_Password2(obj.Password2, DATA_CHANGED);
                                bindings.Update_ViewModel_SubmitText(obj.SubmitText, DATA_CHANGED);
                                bindings.Update_ViewModel_AcceptAll(obj.AcceptAll, DATA_CHANGED);
                                bindings.Update_ViewModel_AcceptEssential(obj.AcceptEssential, DATA_CHANGED);
                                bindings.Update_ViewModel_AcceptPrivacy(obj.AcceptPrivacy, DATA_CHANGED);
                                bindings.Update_ViewModel_AcceptTerms(obj.AcceptTerms, DATA_CHANGED);
                                bindings.Update_ViewModel_KeepMeLogged(obj.KeepMeLogged, DATA_CHANGED);
                                bindings.Update_ViewModel_RequestId(obj.RequestId, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "BusyVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_BusyVisible(obj.BusyVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EditorAreaVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_EditorAreaVisible(obj.EditorAreaVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TitleText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_TitleText(obj.TitleText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "OrganizationId":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_OrganizationId(obj.OrganizationId, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "UserEmail":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_UserEmail(obj.UserEmail, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "UserPassword":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_UserPassword(obj.UserPassword, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Password2":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Password2(obj.Password2, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SubmitText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SubmitText(obj.SubmitText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "AcceptAll":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_AcceptAll(obj.AcceptAll, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "AcceptEssential":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_AcceptEssential(obj.AcceptEssential, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "AcceptPrivacy":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_AcceptPrivacy(obj.AcceptPrivacy, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "AcceptTerms":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_AcceptTerms(obj.AcceptTerms, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "KeepMeLogged":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_KeepMeLogged(obj.KeepMeLogged, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "RequestId":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_RequestId(obj.RequestId, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::InXone.WinUI.Controls.ViewModels.LoginViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::InXone.WinUI.Controls.ViewModels.LoginViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void RegisterTwoWayListener_5(global::Microsoft.UI.Xaml.Controls.ProgressBar sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.UIElement.VisibilityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_Visibility();
                        }
                    });
                }
                public void RegisterTwoWayListener_6(global::Microsoft.UI.Xaml.Controls.StackPanel sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.UIElement.VisibilityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_6_Visibility();
                        }
                    });
                }
                public void RegisterTwoWayListener_7(global::Microsoft.UI.Xaml.Controls.TextBlock sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TextBlock.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_7_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_8(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_8_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_9(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_9_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_11(global::Microsoft.UI.Xaml.Controls.PasswordBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.PasswordBox.PasswordProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_11_Password();
                        }
                    });
                }
                public void RegisterTwoWayListener_12(global::Microsoft.UI.Xaml.Controls.PasswordBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.PasswordBox.PasswordProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_12_Password();
                        }
                    });
                }
                public void RegisterTwoWayListener_13(global::Microsoft.UI.Xaml.Controls.Button sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ContentControl.ContentProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_13_Content();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Control.IsEnabledProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_13_IsEnabled();
                        }
                    });
                }
                public void RegisterTwoWayListener_14(global::Microsoft.UI.Xaml.Controls.Button sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Control.IsEnabledProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_14_IsEnabled();
                        }
                    });
                }
                public void RegisterTwoWayListener_16(global::Microsoft.UI.Xaml.Controls.CheckBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_16_IsChecked();
                        }
                    });
                }
                public void RegisterTwoWayListener_17(global::Microsoft.UI.Xaml.Controls.CheckBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_17_IsChecked();
                        }
                    });
                }
                public void RegisterTwoWayListener_18(global::Microsoft.UI.Xaml.Controls.CheckBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_18_IsChecked();
                        }
                    });
                }
                public void RegisterTwoWayListener_20(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_20_Text();
                        }
                    };
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1: // Controls\Accounts\AccountLoginControl.xaml line 1
                {
                    global::Microsoft.UI.Xaml.Controls.UserControl element1 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.UserControl>(target);
                    ((global::Microsoft.UI.Xaml.Controls.UserControl)element1).Loaded += this.UserControl_Loaded;
                }
                break;
            case 2: // Controls\Accounts\AccountLoginControl.xaml line 15
                {
                    this.BackgroundControlShadow = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Media.ThemeShadow>(target);
                }
                break;
            case 3: // Controls\Accounts\AccountLoginControl.xaml line 18
                {
                    this.BackgroundGrid = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 4: // Controls\Accounts\AccountLoginControl.xaml line 20
                {
                    this.PanelBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Border>(target);
                }
                break;
            case 5: // Controls\Accounts\AccountLoginControl.xaml line 31
                {
                    this.ProgressBar = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ProgressBar>(target);
                }
                break;
            case 8: // Controls\Accounts\AccountLoginControl.xaml line 48
                {
                    this.OrganizationId = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.OrganizationId).LostFocus += this.TextBox_LostFocus;
                }
                break;
            case 9: // Controls\Accounts\AccountLoginControl.xaml line 56
                {
                    this.UserEmailText = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.UserEmailText).LostFocus += this.TextBox_LostFocus;
                }
                break;
            case 10: // Controls\Accounts\AccountLoginControl.xaml line 66
                {
                    this.RequestIdBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                }
                break;
            case 11: // Controls\Accounts\AccountLoginControl.xaml line 78
                {
                    this.Password1Entry = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.PasswordBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.PasswordBox)this.Password1Entry).LostFocus += this.TextBox_LostFocus;
                }
                break;
            case 12: // Controls\Accounts\AccountLoginControl.xaml line 85
                {
                    this.Password2Entry = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.PasswordBox>(target);
                }
                break;
            case 13: // Controls\Accounts\AccountLoginControl.xaml line 113
                {
                    this.SubmitButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 14: // Controls\Accounts\AccountLoginControl.xaml line 122
                {
                    this.ForgotButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 16: // Controls\Accounts\AccountLoginControl.xaml line 94
                {
                    this.AcceptPrivacyIndicator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.AcceptPrivacyIndicator).LostFocus += this.TextBox_LostFocus;
                }
                break;
            case 17: // Controls\Accounts\AccountLoginControl.xaml line 100
                {
                    this.AcceptTermsIndicator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.AcceptTermsIndicator).LostFocus += this.TextBox_LostFocus;
                }
                break;
            case 18: // Controls\Accounts\AccountLoginControl.xaml line 106
                {
                    this.KeepMeLoggedIndicator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                }
                break;
            case 20: // Controls\Accounts\AccountLoginControl.xaml line 71
                {
                    this.RequestIdEntry = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Controls\Accounts\AccountLoginControl.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.UserControl element1 = (global::Microsoft.UI.Xaml.Controls.UserControl)target;
                    AccountLoginControl_obj1_Bindings bindings = new AccountLoginControl_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

