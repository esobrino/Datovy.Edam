//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::Windows.Foundation.Metadata.DefaultOverload]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType) 
            { 
                if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByType(type);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType)
            {
                if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByName(typeName);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlMember xamlMember;
            lock (_xamlMembers)
            {
                if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
                {
                    return xamlMember;
                }
                xamlMember = CreateXamlMember(longMemberName);
                if (xamlMember != null)
                {
                    _xamlMembers.Add(longMemberName, xamlMember);
                }
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[245];
            _typeNameTable[0] = "InXone.WinUI.Controls.AboutControl";
            _typeNameTable[1] = "Microsoft.UI.Xaml.Controls.UserControl";
            _typeNameTable[2] = "InXone.DataObjects.ViewModels.IMenuItemParent";
            _typeNameTable[3] = "String";
            _typeNameTable[4] = "Microsoft.UI.Xaml.Controls.ProgressBar";
            _typeNameTable[5] = "Microsoft.UI.Xaml.Controls.Primitives.RangeBase";
            _typeNameTable[6] = "Boolean";
            _typeNameTable[7] = "Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings";
            _typeNameTable[8] = "Microsoft.UI.Xaml.DependencyObject";
            _typeNameTable[9] = "InXone.WinUI.Controls.Accounts.AccountLoginControl";
            _typeNameTable[10] = "InXone.WinUI.Controls.ViewModels.LoginViewModel";
            _typeNameTable[11] = "InXone.UI.DataModel.Devices.DeviceUserViewModel";
            _typeNameTable[12] = "InXone.UI.DataModel.Devices.DeviceUserData";
            _typeNameTable[13] = "InXone.Helpers.ObservableObject";
            _typeNameTable[14] = "Microsoft.Toolkit.Mvvm.ComponentModel.ObservableObject";
            _typeNameTable[15] = "Object";
            _typeNameTable[16] = "InXone.WinUI.Controls.Utilities.KeyPadControl";
            _typeNameTable[17] = "InXone.Uwp.ViewModels.KeyPadViewModel";
            _typeNameTable[18] = "InXone.WinUI.Controls.Accounts.AccountPinLoginControl";
            _typeNameTable[19] = "InXone.WinUI.Controls.Assets.CustomRowStyleSelector";
            _typeNameTable[20] = "Microsoft.UI.Xaml.Controls.StyleSelector";
            _typeNameTable[21] = "Syncfusion.UI.Xaml.DataGrid.DataGridRowControl";
            _typeNameTable[22] = "Microsoft.UI.Xaml.Controls.ContentControl";
            _typeNameTable[23] = "Microsoft.UI.Xaml.Visibility";
            _typeNameTable[24] = "Microsoft.UI.Xaml.Media.Brush";
            _typeNameTable[25] = "CommunityToolkit.WinUI.UI.Controls.DockPanel";
            _typeNameTable[26] = "Microsoft.UI.Xaml.Controls.Panel";
            _typeNameTable[27] = "Microsoft.UI.Xaml.Thickness";
            _typeNameTable[28] = "System.ValueType";
            _typeNameTable[29] = "CommunityToolkit.WinUI.UI.Controls.Dock";
            _typeNameTable[30] = "System.Enum";
            _typeNameTable[31] = "Microsoft.UI.Xaml.FrameworkElement";
            _typeNameTable[32] = "Syncfusion.UI.Xaml.DataGrid.SfDataGrid";
            _typeNameTable[33] = "Syncfusion.UI.Xaml.Grids.SfGridBase";
            _typeNameTable[34] = "Microsoft.UI.Xaml.Controls.Control";
            _typeNameTable[35] = "Syncfusion.UI.Xaml.Grids.ColumnWidthMode";
            _typeNameTable[36] = "Syncfusion.UI.Xaml.DataGrid.Columns";
            _typeNameTable[37] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.DataGrid.GridColumn>";
            _typeNameTable[38] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.DataGrid.GridColumn>";
            _typeNameTable[39] = "Syncfusion.UI.Xaml.DataGrid.GridColumn";
            _typeNameTable[40] = "Syncfusion.UI.Xaml.Grids.GridColumnBase";
            _typeNameTable[41] = "Syncfusion.UI.Xaml.Grids.ColumnBase`1<Syncfusion.UI.Xaml.Grids.SfGridBase>";
            _typeNameTable[42] = "System.Type";
            _typeNameTable[43] = "System.Reflection.MemberInfo";
            _typeNameTable[44] = "Microsoft.UI.Xaml.Style";
            _typeNameTable[45] = "Syncfusion.UI.Xaml.DataGrid.FilterRowCondition";
            _typeNameTable[46] = "Microsoft.UI.Xaml.DataTemplate";
            _typeNameTable[47] = "Syncfusion.UI.Xaml.Data.DataReflectionMode";
            _typeNameTable[48] = "Syncfusion.UI.Xaml.Grids.FilteredFrom";
            _typeNameTable[49] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Data.FilterPredicate>";
            _typeNameTable[50] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Data.FilterPredicate>";
            _typeNameTable[51] = "Syncfusion.UI.Xaml.Data.FilterPredicate";
            _typeNameTable[52] = "Syncfusion.UI.Xaml.Data.FilterType";
            _typeNameTable[53] = "Syncfusion.UI.Xaml.Data.PredicateType";
            _typeNameTable[54] = "Syncfusion.UI.Xaml.Data.FilterBehavior";
            _typeNameTable[55] = "Syncfusion.UI.Xaml.Data.ColumnFilter";
            _typeNameTable[56] = "Double";
            _typeNameTable[57] = "Syncfusion.UI.Xaml.Grids.GridValidationMode";
            _typeNameTable[58] = "Microsoft.UI.Xaml.Data.UpdateSourceTrigger";
            _typeNameTable[59] = "Microsoft.UI.Xaml.Controls.DataTemplateSelector";
            _typeNameTable[60] = "Microsoft.UI.Xaml.VerticalAlignment";
            _typeNameTable[61] = "Microsoft.UI.Xaml.TextAlignment";
            _typeNameTable[62] = "Microsoft.UI.Xaml.HorizontalAlignment";
            _typeNameTable[63] = "Microsoft.UI.Xaml.Data.BindingBase";
            _typeNameTable[64] = "Syncfusion.UI.Xaml.DataGrid.RowGenerator";
            _typeNameTable[65] = "Syncfusion.UI.Xaml.DataGrid.GridColumnResizingController";
            _typeNameTable[66] = "Syncfusion.UI.Xaml.DataGrid.DataGridColumnSizer";
            _typeNameTable[67] = "Syncfusion.UI.Xaml.Grids.DataGridRowColumnSizer`1<Syncfusion.UI.Xaml.DataGrid.SfDataGrid>";
            _typeNameTable[68] = "Syncfusion.UI.Xaml.Data.ICollectionViewAdv";
            _typeNameTable[69] = "Syncfusion.UI.Xaml.DataGrid.DataGridColumnDragDropController";
            _typeNameTable[70] = "Syncfusion.UI.Xaml.Grids.LostFocusBehavior";
            _typeNameTable[71] = "Syncfusion.UI.Xaml.DataGrid.Renderers.GridCellRendererCollection";
            _typeNameTable[72] = "Syncfusion.UI.Xaml.Grids.Collections.Disposable";
            _typeNameTable[73] = "Syncfusion.UI.Xaml.Grids.Collections.NonFinalizeDisposable";
            _typeNameTable[74] = "Syncfusion.UI.Xaml.DataGrid.CoveredCellInfoCollection";
            _typeNameTable[75] = "System.Collections.Generic.List`1<Syncfusion.UI.Xaml.Grids.CoveredCellInfo>";
            _typeNameTable[76] = "Syncfusion.UI.Xaml.Grids.CoveredCellInfo";
            _typeNameTable[77] = "Syncfusion.UI.Xaml.Grids.ScrollAxis.RowColumnIndex";
            _typeNameTable[78] = "Int32";
            _typeNameTable[79] = "Syncfusion.UI.Xaml.DataGrid.IGridSelectionController";
            _typeNameTable[80] = "Syncfusion.UI.Xaml.Data.NotificationSubscriptionMode";
            _typeNameTable[81] = "Syncfusion.UI.Xaml.DataGrid.Serialization.SerializationController";
            _typeNameTable[82] = "Syncfusion.UI.Xaml.DataGrid.AutoScroller";
            _typeNameTable[83] = "Syncfusion.UI.Xaml.Data.SortComparers";
            _typeNameTable[84] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Data.SortComparer>";
            _typeNameTable[85] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Data.SortComparer>";
            _typeNameTable[86] = "Syncfusion.UI.Xaml.Data.SortComparer";
            _typeNameTable[87] = "System.Collections.Generic.IComparer`1<Object>";
            _typeNameTable[88] = "Syncfusion.UI.Xaml.DataGrid.GroupColumnDescriptions";
            _typeNameTable[89] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription>";
            _typeNameTable[90] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription>";
            _typeNameTable[91] = "Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription";
            _typeNameTable[92] = "System.Func`3<String, Object, Object>";
            _typeNameTable[93] = "System.MulticastDelegate";
            _typeNameTable[94] = "System.Delegate";
            _typeNameTable[95] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.DataGrid.GridSummaryRow>";
            _typeNameTable[96] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.DataGrid.GridSummaryRow>";
            _typeNameTable[97] = "Syncfusion.UI.Xaml.DataGrid.GridSummaryRow";
            _typeNameTable[98] = "Syncfusion.UI.Xaml.Data.SummaryCalculationUnit";
            _typeNameTable[99] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Data.ISummaryColumn>";
            _typeNameTable[100] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Data.ISummaryColumn>";
            _typeNameTable[101] = "Syncfusion.UI.Xaml.Data.ISummaryColumn";
            _typeNameTable[102] = "Syncfusion.UI.Xaml.Data.ISummaryAggregate";
            _typeNameTable[103] = "Syncfusion.UI.Xaml.Data.SummaryType";
            _typeNameTable[104] = "Syncfusion.UI.Xaml.DataGrid.UnboundRows";
            _typeNameTable[105] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.DataGrid.GridUnboundRow>";
            _typeNameTable[106] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.DataGrid.GridUnboundRow>";
            _typeNameTable[107] = "Syncfusion.UI.Xaml.DataGrid.GridUnboundRow";
            _typeNameTable[108] = "Syncfusion.UI.Xaml.Grids.UnboundRowsPosition";
            _typeNameTable[109] = "Syncfusion.UI.Xaml.DataGrid.IDataGridClipboardController";
            _typeNameTable[110] = "Syncfusion.UI.Xaml.Data.NewItemPlaceholderPosition";
            _typeNameTable[111] = "Syncfusion.UI.Xaml.Data.LiveDataUpdateMode";
            _typeNameTable[112] = "Syncfusion.UI.Xaml.Data.SummaryCalculationModes";
            _typeNameTable[113] = "Syncfusion.UI.Xaml.DataGrid.FilterRowPosition";
            _typeNameTable[114] = "Syncfusion.UI.Xaml.DataGrid.DetailsViewDefinition";
            _typeNameTable[115] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.DataGrid.ViewDefinition>";
            _typeNameTable[116] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.DataGrid.ViewDefinition>";
            _typeNameTable[117] = "Syncfusion.UI.Xaml.DataGrid.ViewDefinition";
            _typeNameTable[118] = "Microsoft.UI.Xaml.Controls.MenuFlyout";
            _typeNameTable[119] = "Syncfusion.UI.Xaml.DataGrid.AddNewRowPosition";
            _typeNameTable[120] = "Syncfusion.UI.Xaml.DataGrid.Print.DataGridPrintSettings";
            _typeNameTable[121] = "Syncfusion.UI.Xaml.Core.NotificationObject";
            _typeNameTable[122] = "Syncfusion.UI.Xaml.Grids.GridSelectionUnit";
            _typeNameTable[123] = "Syncfusion.UI.Xaml.DataGrid.GridCellInfo";
            _typeNameTable[124] = "Syncfusion.UI.Xaml.DataGrid.IDetailsViewNotifyListener";
            _typeNameTable[125] = "Syncfusion.UI.Xaml.Grids.StackedHeaderRows";
            _typeNameTable[126] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Grids.StackedHeaderRow>";
            _typeNameTable[127] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Grids.StackedHeaderRow>";
            _typeNameTable[128] = "Syncfusion.UI.Xaml.Grids.StackedHeaderRow";
            _typeNameTable[129] = "Syncfusion.UI.Xaml.Grids.StackedColumns";
            _typeNameTable[130] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Grids.StackedColumn>";
            _typeNameTable[131] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Grids.StackedColumn>";
            _typeNameTable[132] = "Syncfusion.UI.Xaml.Grids.StackedColumn";
            _typeNameTable[133] = "Syncfusion.UI.Xaml.Grids.GridSelectionMode";
            _typeNameTable[134] = "Syncfusion.UI.Xaml.Grids.NavigationMode";
            _typeNameTable[135] = "Syncfusion.UI.Xaml.Grids.EditorSelectionBehavior";
            _typeNameTable[136] = "Syncfusion.UI.Xaml.Grids.EditTrigger";
            _typeNameTable[137] = "Syncfusion.UI.Xaml.Grids.GridLinesVisibility";
            _typeNameTable[138] = "Syncfusion.UI.Xaml.Grids.AutoGenerateColumnsModeForCustomType";
            _typeNameTable[139] = "Syncfusion.UI.Xaml.Grids.AutoGenerateColumnsMode";
            _typeNameTable[140] = "Syncfusion.UI.Xaml.Grids.SortClickAction";
            _typeNameTable[141] = "System.Collections.ObjectModel.ObservableCollection`1<Object>";
            _typeNameTable[142] = "System.Collections.ObjectModel.Collection`1<Object>";
            _typeNameTable[143] = "Syncfusion.UI.Xaml.Grids.SortColumnDescriptions";
            _typeNameTable[144] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Grids.SortColumnDescription>";
            _typeNameTable[145] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Grids.SortColumnDescription>";
            _typeNameTable[146] = "Syncfusion.UI.Xaml.Grids.SortColumnDescription";
            _typeNameTable[147] = "Syncfusion.UI.Xaml.Data.SortDirection";
            _typeNameTable[148] = "Syncfusion.UI.Xaml.Grids.GridPasteOptions";
            _typeNameTable[149] = "Syncfusion.UI.Xaml.Grids.GridCopyOptions";
            _typeNameTable[150] = "Syncfusion.UI.Xaml.DataGrid.GridTextColumn";
            _typeNameTable[151] = "Syncfusion.UI.Xaml.DataGrid.GridTextColumnBase";
            _typeNameTable[152] = "Microsoft.UI.Xaml.TextTrimming";
            _typeNameTable[153] = "Microsoft.UI.Xaml.TextWrapping";
            _typeNameTable[154] = "InXone.WinUI.Controls.Assets.AssetDataElementGridControl";
            _typeNameTable[155] = "InXone.WinUI.Controls.ViewModels.AssetViewerViewModel";
            _typeNameTable[156] = "Microsoft.UI.Xaml.Controls.ItemsRepeater";
            _typeNameTable[157] = "Microsoft.UI.Xaml.Controls.ItemsSourceView";
            _typeNameTable[158] = "Microsoft.UI.Xaml.Controls.Layout";
            _typeNameTable[159] = "InXone.WinUI.Controls.Assets.AssetSidePanelControl";
            _typeNameTable[160] = "InXone.WinUI.Controls.ViewModels.AssetSidePanelViewModel";
            _typeNameTable[161] = "InXone.WinUI.Controls.Assets.AssetUseCaseGridControl";
            _typeNameTable[162] = "Microsoft.UI.Xaml.Controls.TabView";
            _typeNameTable[163] = "System.Collections.Generic.IList`1<Object>";
            _typeNameTable[164] = "System.Windows.Input.ICommand";
            _typeNameTable[165] = "Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode";
            _typeNameTable[166] = "Microsoft.UI.Xaml.Controls.TabViewWidthMode";
            _typeNameTable[167] = "Microsoft.UI.Xaml.Controls.TabViewItem";
            _typeNameTable[168] = "Microsoft.UI.Xaml.Controls.ListViewItem";
            _typeNameTable[169] = "Microsoft.UI.Xaml.Controls.IconSource";
            _typeNameTable[170] = "Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings";
            _typeNameTable[171] = "InXone.WinUI.Controls.Projects.ProjectFileEditorControl";
            _typeNameTable[172] = "InXone.WinUI.Controls.ViewModels.ProjectViewerViewModel";
            _typeNameTable[173] = "Microsoft.UI.Xaml.Controls.TextBlock";
            _typeNameTable[174] = "InXone.WinUI.Controls.Common.NotificationEvent";
            _typeNameTable[175] = "InXone.WinUI.Controls.Assets.AssetViewerControl";
            _typeNameTable[176] = "InXone.WinUI.Controls.Entities.EntityFollowUpGridControl";
            _typeNameTable[177] = "InXone.Uwp.ViewModels.EntityFollowUpViewModel";
            _typeNameTable[178] = "InXone.UI.DataModel.Entities.EntityFollowUpViewModel";
            _typeNameTable[179] = "Microsoft.UI.Xaml.Controls.NavigationView";
            _typeNameTable[180] = "Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible";
            _typeNameTable[181] = "Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode";
            _typeNameTable[182] = "Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus";
            _typeNameTable[183] = "Microsoft.UI.Xaml.Controls.AutoSuggestBox";
            _typeNameTable[184] = "Microsoft.UI.Xaml.UIElement";
            _typeNameTable[185] = "Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode";
            _typeNameTable[186] = "Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode";
            _typeNameTable[187] = "Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled";
            _typeNameTable[188] = "Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings";
            _typeNameTable[189] = "InXone.WinUI.Controls.Notes.NotesViewEditControl";
            _typeNameTable[190] = "InXone.UI.DataModel.Notes.NoteViewModel";
            _typeNameTable[191] = "InXone.WinUI.Controls.Entities.PersonBaseEditorControl";
            _typeNameTable[192] = "InXone.UI.DataModel.Entities.PersonViewModel";
            _typeNameTable[193] = "InXone.WinUI.Controls.ReferenceLists.ReferenceListGroupEditControl";
            _typeNameTable[194] = "InXone.UI.DataModel.References.ReferenceListGroupViewModel";
            _typeNameTable[195] = "Microsoft.UI.Xaml.Controls.NavigationViewItem";
            _typeNameTable[196] = "Microsoft.UI.Xaml.Controls.NavigationViewItemBase";
            _typeNameTable[197] = "Microsoft.UI.Xaml.Controls.IconElement";
            _typeNameTable[198] = "InXone.WinUI.Controls.Entities.EntityFollowUpViewControl";
            _typeNameTable[199] = "InXone.WinUI.Controls.Home.DashboardControl";
            _typeNameTable[200] = "InXone.WinUI.Common.MenuItemTemplateSelector";
            _typeNameTable[201] = "InXone.WinUI.Controls.Navigation.NavigationControl";
            _typeNameTable[202] = "InXone.Uwp.ViewModels.NavigationViewModel";
            _typeNameTable[203] = "InXone.WinUI.Controls.Common.FolderFileIconConverter";
            _typeNameTable[204] = "Microsoft.UI.Xaml.Controls.TreeView";
            _typeNameTable[205] = "Microsoft.UI.Xaml.Controls.TreeViewSelectionMode";
            _typeNameTable[206] = "Microsoft.UI.Xaml.Media.Animation.TransitionCollection";
            _typeNameTable[207] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>";
            _typeNameTable[208] = "Microsoft.UI.Xaml.Controls.TreeViewNode";
            _typeNameTable[209] = "Microsoft.UI.Xaml.Controls.TreeViewItem";
            _typeNameTable[210] = "Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings";
            _typeNameTable[211] = "InXone.WinUI.Controls.Projects.ProjectSidePanelControl";
            _typeNameTable[212] = "CommunityToolkit.WinUI.UI.Controls.GridSplitter";
            _typeNameTable[213] = "CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperCursorType";
            _typeNameTable[214] = "CommunityToolkit.WinUI.UI.Controls.GridSplitter.GridResizeBehavior";
            _typeNameTable[215] = "CommunityToolkit.WinUI.UI.Controls.GridSplitter.GridResizeDirection";
            _typeNameTable[216] = "CommunityToolkit.WinUI.UI.Controls.GridSplitter.SplitterCursorBehavior";
            _typeNameTable[217] = "InXone.WinUI.Controls.Projects.ProjectViewerControl";
            _typeNameTable[218] = "Microsoft.UI.Xaml.Controls.NavigationViewItemSeparator";
            _typeNameTable[219] = "InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataFormControl";
            _typeNameTable[220] = "InXone.WinUI.Controls.ViewModels.ReferenceDataFormViewModel";
            _typeNameTable[221] = "InXone.UI.DataModel.Models.ElementComponentViewModel";
            _typeNameTable[222] = "InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataFormStackControl";
            _typeNameTable[223] = "InXone.WinUI.Controls.ViewModels.ReferenceDataFormStackViewModel";
            _typeNameTable[224] = "InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataGridControl";
            _typeNameTable[225] = "InXone.WinUI.Controls.ViewModels.ReferenceDataGridViewModel";
            _typeNameTable[226] = "InXone.WinUI.Controls.ReferenceData.ReferenceDataEditorControl";
            _typeNameTable[227] = "InXone.Uwp.ViewModels.ReferenceDataEditorViewModel";
            _typeNameTable[228] = "InXone.WinUI.Controls.ReferenceData.ReferenceDataValidationContentDialog";
            _typeNameTable[229] = "Microsoft.UI.Xaml.Controls.ContentDialog";
            _typeNameTable[230] = "InXone.WinUI.Controls.ViewModels.ReferenceDataValidationViewModel";
            _typeNameTable[231] = "InXone.WinUI.Controls.ReferenceLists.ReferenceListViewControl";
            _typeNameTable[232] = "InXone.Uwp.ViewModels.ReferenceListViewModel";
            _typeNameTable[233] = "InXone.WinUI.Controls.Utilities.TextButtonControl";
            _typeNameTable[234] = "InXone.Uwp.ViewModels.TextButtonViewModel";
            _typeNameTable[235] = "InXone.WinUI.Controls.Utilities.TextEditorControl";
            _typeNameTable[236] = "InXone.WinUI.Controls.ViewModels.TextEditorViewModel";
            _typeNameTable[237] = "Microsoft.UI.Xaml.Controls.WebView2";
            _typeNameTable[238] = "System.Uri";
            _typeNameTable[239] = "Microsoft.Web.WebView2.Core.CoreWebView2";
            _typeNameTable[240] = "Windows.UI.Color";
            _typeNameTable[241] = "InXone.WinUI.Controls.Web.WebBrowserControl";
            _typeNameTable[242] = "InXone.Uwp.ViewModels.WebBrowserViewModel";
            _typeNameTable[243] = "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter";
            _typeNameTable[244] = "Syncfusion.UI.Xaml.Core.DoubleToVisibilityConverter";

            _typeTable = new global::System.Type[245];
            _typeTable[0] = typeof(global::InXone.WinUI.Controls.AboutControl);
            _typeTable[1] = typeof(global::Microsoft.UI.Xaml.Controls.UserControl);
            _typeTable[2] = typeof(global::InXone.DataObjects.ViewModels.IMenuItemParent);
            _typeTable[3] = typeof(global::System.String);
            _typeTable[4] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressBar);
            _typeTable[5] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase);
            _typeTable[6] = typeof(global::System.Boolean);
            _typeTable[7] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings);
            _typeTable[8] = typeof(global::Microsoft.UI.Xaml.DependencyObject);
            _typeTable[9] = typeof(global::InXone.WinUI.Controls.Accounts.AccountLoginControl);
            _typeTable[10] = typeof(global::InXone.WinUI.Controls.ViewModels.LoginViewModel);
            _typeTable[11] = typeof(global::InXone.UI.DataModel.Devices.DeviceUserViewModel);
            _typeTable[12] = typeof(global::InXone.UI.DataModel.Devices.DeviceUserData);
            _typeTable[13] = typeof(global::InXone.Helpers.ObservableObject);
            _typeTable[14] = typeof(global::Microsoft.Toolkit.Mvvm.ComponentModel.ObservableObject);
            _typeTable[15] = typeof(global::System.Object);
            _typeTable[16] = typeof(global::InXone.WinUI.Controls.Utilities.KeyPadControl);
            _typeTable[17] = typeof(global::InXone.Uwp.ViewModels.KeyPadViewModel);
            _typeTable[18] = typeof(global::InXone.WinUI.Controls.Accounts.AccountPinLoginControl);
            _typeTable[19] = typeof(global::InXone.WinUI.Controls.Assets.CustomRowStyleSelector);
            _typeTable[20] = typeof(global::Microsoft.UI.Xaml.Controls.StyleSelector);
            _typeTable[21] = typeof(global::Syncfusion.UI.Xaml.DataGrid.DataGridRowControl);
            _typeTable[22] = typeof(global::Microsoft.UI.Xaml.Controls.ContentControl);
            _typeTable[23] = typeof(global::Microsoft.UI.Xaml.Visibility);
            _typeTable[24] = typeof(global::Microsoft.UI.Xaml.Media.Brush);
            _typeTable[25] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DockPanel);
            _typeTable[26] = typeof(global::Microsoft.UI.Xaml.Controls.Panel);
            _typeTable[27] = typeof(global::Microsoft.UI.Xaml.Thickness);
            _typeTable[28] = typeof(global::System.ValueType);
            _typeTable[29] = typeof(global::CommunityToolkit.WinUI.UI.Controls.Dock);
            _typeTable[30] = typeof(global::System.Enum);
            _typeTable[31] = typeof(global::Microsoft.UI.Xaml.FrameworkElement);
            _typeTable[32] = typeof(global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid);
            _typeTable[33] = typeof(global::Syncfusion.UI.Xaml.Grids.SfGridBase);
            _typeTable[34] = typeof(global::Microsoft.UI.Xaml.Controls.Control);
            _typeTable[35] = typeof(global::Syncfusion.UI.Xaml.Grids.ColumnWidthMode);
            _typeTable[36] = typeof(global::Syncfusion.UI.Xaml.DataGrid.Columns);
            _typeTable[37] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.DataGrid.GridColumn>);
            _typeTable[38] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.DataGrid.GridColumn>);
            _typeTable[39] = typeof(global::Syncfusion.UI.Xaml.DataGrid.GridColumn);
            _typeTable[40] = typeof(global::Syncfusion.UI.Xaml.Grids.GridColumnBase);
            _typeTable[41] = typeof(global::Syncfusion.UI.Xaml.Grids.ColumnBase<global::Syncfusion.UI.Xaml.Grids.SfGridBase>);
            _typeTable[42] = typeof(global::System.Type);
            _typeTable[43] = typeof(global::System.Reflection.MemberInfo);
            _typeTable[44] = typeof(global::Microsoft.UI.Xaml.Style);
            _typeTable[45] = typeof(global::Syncfusion.UI.Xaml.DataGrid.FilterRowCondition);
            _typeTable[46] = typeof(global::Microsoft.UI.Xaml.DataTemplate);
            _typeTable[47] = typeof(global::Syncfusion.UI.Xaml.Data.DataReflectionMode);
            _typeTable[48] = typeof(global::Syncfusion.UI.Xaml.Grids.FilteredFrom);
            _typeTable[49] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Data.FilterPredicate>);
            _typeTable[50] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Data.FilterPredicate>);
            _typeTable[51] = typeof(global::Syncfusion.UI.Xaml.Data.FilterPredicate);
            _typeTable[52] = typeof(global::Syncfusion.UI.Xaml.Data.FilterType);
            _typeTable[53] = typeof(global::Syncfusion.UI.Xaml.Data.PredicateType);
            _typeTable[54] = typeof(global::Syncfusion.UI.Xaml.Data.FilterBehavior);
            _typeTable[55] = typeof(global::Syncfusion.UI.Xaml.Data.ColumnFilter);
            _typeTable[56] = typeof(global::System.Double);
            _typeTable[57] = typeof(global::Syncfusion.UI.Xaml.Grids.GridValidationMode);
            _typeTable[58] = typeof(global::Microsoft.UI.Xaml.Data.UpdateSourceTrigger);
            _typeTable[59] = typeof(global::Microsoft.UI.Xaml.Controls.DataTemplateSelector);
            _typeTable[60] = typeof(global::Microsoft.UI.Xaml.VerticalAlignment);
            _typeTable[61] = typeof(global::Microsoft.UI.Xaml.TextAlignment);
            _typeTable[62] = typeof(global::Microsoft.UI.Xaml.HorizontalAlignment);
            _typeTable[63] = typeof(global::Microsoft.UI.Xaml.Data.BindingBase);
            _typeTable[64] = typeof(global::Syncfusion.UI.Xaml.DataGrid.RowGenerator);
            _typeTable[65] = typeof(global::Syncfusion.UI.Xaml.DataGrid.GridColumnResizingController);
            _typeTable[66] = typeof(global::Syncfusion.UI.Xaml.DataGrid.DataGridColumnSizer);
            _typeTable[67] = typeof(global::Syncfusion.UI.Xaml.Grids.DataGridRowColumnSizer<global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid>);
            _typeTable[68] = typeof(global::Syncfusion.UI.Xaml.Data.ICollectionViewAdv);
            _typeTable[69] = typeof(global::Syncfusion.UI.Xaml.DataGrid.DataGridColumnDragDropController);
            _typeTable[70] = typeof(global::Syncfusion.UI.Xaml.Grids.LostFocusBehavior);
            _typeTable[71] = typeof(global::Syncfusion.UI.Xaml.DataGrid.Renderers.GridCellRendererCollection);
            _typeTable[72] = typeof(global::Syncfusion.UI.Xaml.Grids.Collections.Disposable);
            _typeTable[73] = typeof(global::Syncfusion.UI.Xaml.Grids.Collections.NonFinalizeDisposable);
            _typeTable[74] = typeof(global::Syncfusion.UI.Xaml.DataGrid.CoveredCellInfoCollection);
            _typeTable[75] = typeof(global::System.Collections.Generic.List<global::Syncfusion.UI.Xaml.Grids.CoveredCellInfo>);
            _typeTable[76] = typeof(global::Syncfusion.UI.Xaml.Grids.CoveredCellInfo);
            _typeTable[77] = typeof(global::Syncfusion.UI.Xaml.Grids.ScrollAxis.RowColumnIndex);
            _typeTable[78] = typeof(global::System.Int32);
            _typeTable[79] = typeof(global::Syncfusion.UI.Xaml.DataGrid.IGridSelectionController);
            _typeTable[80] = typeof(global::Syncfusion.UI.Xaml.Data.NotificationSubscriptionMode);
            _typeTable[81] = typeof(global::Syncfusion.UI.Xaml.DataGrid.Serialization.SerializationController);
            _typeTable[82] = typeof(global::Syncfusion.UI.Xaml.DataGrid.AutoScroller);
            _typeTable[83] = typeof(global::Syncfusion.UI.Xaml.Data.SortComparers);
            _typeTable[84] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Data.SortComparer>);
            _typeTable[85] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Data.SortComparer>);
            _typeTable[86] = typeof(global::Syncfusion.UI.Xaml.Data.SortComparer);
            _typeTable[87] = typeof(global::System.Collections.Generic.IComparer<global::System.Object>);
            _typeTable[88] = typeof(global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescriptions);
            _typeTable[89] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription>);
            _typeTable[90] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription>);
            _typeTable[91] = typeof(global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription);
            _typeTable[92] = typeof(global::System.Func<global::System.String, global::System.Object, global::System.Object>);
            _typeTable[93] = typeof(global::System.MulticastDelegate);
            _typeTable[94] = typeof(global::System.Delegate);
            _typeTable[95] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow>);
            _typeTable[96] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow>);
            _typeTable[97] = typeof(global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow);
            _typeTable[98] = typeof(global::Syncfusion.UI.Xaml.Data.SummaryCalculationUnit);
            _typeTable[99] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Data.ISummaryColumn>);
            _typeTable[100] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Data.ISummaryColumn>);
            _typeTable[101] = typeof(global::Syncfusion.UI.Xaml.Data.ISummaryColumn);
            _typeTable[102] = typeof(global::Syncfusion.UI.Xaml.Data.ISummaryAggregate);
            _typeTable[103] = typeof(global::Syncfusion.UI.Xaml.Data.SummaryType);
            _typeTable[104] = typeof(global::Syncfusion.UI.Xaml.DataGrid.UnboundRows);
            _typeTable[105] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.DataGrid.GridUnboundRow>);
            _typeTable[106] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.DataGrid.GridUnboundRow>);
            _typeTable[107] = typeof(global::Syncfusion.UI.Xaml.DataGrid.GridUnboundRow);
            _typeTable[108] = typeof(global::Syncfusion.UI.Xaml.Grids.UnboundRowsPosition);
            _typeTable[109] = typeof(global::Syncfusion.UI.Xaml.DataGrid.IDataGridClipboardController);
            _typeTable[110] = typeof(global::Syncfusion.UI.Xaml.Data.NewItemPlaceholderPosition);
            _typeTable[111] = typeof(global::Syncfusion.UI.Xaml.Data.LiveDataUpdateMode);
            _typeTable[112] = typeof(global::Syncfusion.UI.Xaml.Data.SummaryCalculationModes);
            _typeTable[113] = typeof(global::Syncfusion.UI.Xaml.DataGrid.FilterRowPosition);
            _typeTable[114] = typeof(global::Syncfusion.UI.Xaml.DataGrid.DetailsViewDefinition);
            _typeTable[115] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.DataGrid.ViewDefinition>);
            _typeTable[116] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.DataGrid.ViewDefinition>);
            _typeTable[117] = typeof(global::Syncfusion.UI.Xaml.DataGrid.ViewDefinition);
            _typeTable[118] = typeof(global::Microsoft.UI.Xaml.Controls.MenuFlyout);
            _typeTable[119] = typeof(global::Syncfusion.UI.Xaml.DataGrid.AddNewRowPosition);
            _typeTable[120] = typeof(global::Syncfusion.UI.Xaml.DataGrid.Print.DataGridPrintSettings);
            _typeTable[121] = typeof(global::Syncfusion.UI.Xaml.Core.NotificationObject);
            _typeTable[122] = typeof(global::Syncfusion.UI.Xaml.Grids.GridSelectionUnit);
            _typeTable[123] = typeof(global::Syncfusion.UI.Xaml.DataGrid.GridCellInfo);
            _typeTable[124] = typeof(global::Syncfusion.UI.Xaml.DataGrid.IDetailsViewNotifyListener);
            _typeTable[125] = typeof(global::Syncfusion.UI.Xaml.Grids.StackedHeaderRows);
            _typeTable[126] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Grids.StackedHeaderRow>);
            _typeTable[127] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Grids.StackedHeaderRow>);
            _typeTable[128] = typeof(global::Syncfusion.UI.Xaml.Grids.StackedHeaderRow);
            _typeTable[129] = typeof(global::Syncfusion.UI.Xaml.Grids.StackedColumns);
            _typeTable[130] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Grids.StackedColumn>);
            _typeTable[131] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Grids.StackedColumn>);
            _typeTable[132] = typeof(global::Syncfusion.UI.Xaml.Grids.StackedColumn);
            _typeTable[133] = typeof(global::Syncfusion.UI.Xaml.Grids.GridSelectionMode);
            _typeTable[134] = typeof(global::Syncfusion.UI.Xaml.Grids.NavigationMode);
            _typeTable[135] = typeof(global::Syncfusion.UI.Xaml.Grids.EditorSelectionBehavior);
            _typeTable[136] = typeof(global::Syncfusion.UI.Xaml.Grids.EditTrigger);
            _typeTable[137] = typeof(global::Syncfusion.UI.Xaml.Grids.GridLinesVisibility);
            _typeTable[138] = typeof(global::Syncfusion.UI.Xaml.Grids.AutoGenerateColumnsModeForCustomType);
            _typeTable[139] = typeof(global::Syncfusion.UI.Xaml.Grids.AutoGenerateColumnsMode);
            _typeTable[140] = typeof(global::Syncfusion.UI.Xaml.Grids.SortClickAction);
            _typeTable[141] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::System.Object>);
            _typeTable[142] = typeof(global::System.Collections.ObjectModel.Collection<global::System.Object>);
            _typeTable[143] = typeof(global::Syncfusion.UI.Xaml.Grids.SortColumnDescriptions);
            _typeTable[144] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Grids.SortColumnDescription>);
            _typeTable[145] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Grids.SortColumnDescription>);
            _typeTable[146] = typeof(global::Syncfusion.UI.Xaml.Grids.SortColumnDescription);
            _typeTable[147] = typeof(global::Syncfusion.UI.Xaml.Data.SortDirection);
            _typeTable[148] = typeof(global::Syncfusion.UI.Xaml.Grids.GridPasteOptions);
            _typeTable[149] = typeof(global::Syncfusion.UI.Xaml.Grids.GridCopyOptions);
            _typeTable[150] = typeof(global::Syncfusion.UI.Xaml.DataGrid.GridTextColumn);
            _typeTable[151] = typeof(global::Syncfusion.UI.Xaml.DataGrid.GridTextColumnBase);
            _typeTable[152] = typeof(global::Microsoft.UI.Xaml.TextTrimming);
            _typeTable[153] = typeof(global::Microsoft.UI.Xaml.TextWrapping);
            _typeTable[154] = typeof(global::InXone.WinUI.Controls.Assets.AssetDataElementGridControl);
            _typeTable[155] = typeof(global::InXone.WinUI.Controls.ViewModels.AssetViewerViewModel);
            _typeTable[156] = typeof(global::Microsoft.UI.Xaml.Controls.ItemsRepeater);
            _typeTable[157] = typeof(global::Microsoft.UI.Xaml.Controls.ItemsSourceView);
            _typeTable[158] = typeof(global::Microsoft.UI.Xaml.Controls.Layout);
            _typeTable[159] = typeof(global::InXone.WinUI.Controls.Assets.AssetSidePanelControl);
            _typeTable[160] = typeof(global::InXone.WinUI.Controls.ViewModels.AssetSidePanelViewModel);
            _typeTable[161] = typeof(global::InXone.WinUI.Controls.Assets.AssetUseCaseGridControl);
            _typeTable[162] = typeof(global::Microsoft.UI.Xaml.Controls.TabView);
            _typeTable[163] = typeof(global::System.Collections.Generic.IList<global::System.Object>);
            _typeTable[164] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[165] = typeof(global::Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode);
            _typeTable[166] = typeof(global::Microsoft.UI.Xaml.Controls.TabViewWidthMode);
            _typeTable[167] = typeof(global::Microsoft.UI.Xaml.Controls.TabViewItem);
            _typeTable[168] = typeof(global::Microsoft.UI.Xaml.Controls.ListViewItem);
            _typeTable[169] = typeof(global::Microsoft.UI.Xaml.Controls.IconSource);
            _typeTable[170] = typeof(global::Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings);
            _typeTable[171] = typeof(global::InXone.WinUI.Controls.Projects.ProjectFileEditorControl);
            _typeTable[172] = typeof(global::InXone.WinUI.Controls.ViewModels.ProjectViewerViewModel);
            _typeTable[173] = typeof(global::Microsoft.UI.Xaml.Controls.TextBlock);
            _typeTable[174] = typeof(global::InXone.WinUI.Controls.Common.NotificationEvent);
            _typeTable[175] = typeof(global::InXone.WinUI.Controls.Assets.AssetViewerControl);
            _typeTable[176] = typeof(global::InXone.WinUI.Controls.Entities.EntityFollowUpGridControl);
            _typeTable[177] = typeof(global::InXone.Uwp.ViewModels.EntityFollowUpViewModel);
            _typeTable[178] = typeof(global::InXone.UI.DataModel.Entities.EntityFollowUpViewModel);
            _typeTable[179] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationView);
            _typeTable[180] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible);
            _typeTable[181] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode);
            _typeTable[182] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus);
            _typeTable[183] = typeof(global::Microsoft.UI.Xaml.Controls.AutoSuggestBox);
            _typeTable[184] = typeof(global::Microsoft.UI.Xaml.UIElement);
            _typeTable[185] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode);
            _typeTable[186] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode);
            _typeTable[187] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled);
            _typeTable[188] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings);
            _typeTable[189] = typeof(global::InXone.WinUI.Controls.Notes.NotesViewEditControl);
            _typeTable[190] = typeof(global::InXone.UI.DataModel.Notes.NoteViewModel);
            _typeTable[191] = typeof(global::InXone.WinUI.Controls.Entities.PersonBaseEditorControl);
            _typeTable[192] = typeof(global::InXone.UI.DataModel.Entities.PersonViewModel);
            _typeTable[193] = typeof(global::InXone.WinUI.Controls.ReferenceLists.ReferenceListGroupEditControl);
            _typeTable[194] = typeof(global::InXone.UI.DataModel.References.ReferenceListGroupViewModel);
            _typeTable[195] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItem);
            _typeTable[196] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase);
            _typeTable[197] = typeof(global::Microsoft.UI.Xaml.Controls.IconElement);
            _typeTable[198] = typeof(global::InXone.WinUI.Controls.Entities.EntityFollowUpViewControl);
            _typeTable[199] = typeof(global::InXone.WinUI.Controls.Home.DashboardControl);
            _typeTable[200] = typeof(global::InXone.WinUI.Common.MenuItemTemplateSelector);
            _typeTable[201] = typeof(global::InXone.WinUI.Controls.Navigation.NavigationControl);
            _typeTable[202] = typeof(global::InXone.Uwp.ViewModels.NavigationViewModel);
            _typeTable[203] = typeof(global::InXone.WinUI.Controls.Common.FolderFileIconConverter);
            _typeTable[204] = typeof(global::Microsoft.UI.Xaml.Controls.TreeView);
            _typeTable[205] = typeof(global::Microsoft.UI.Xaml.Controls.TreeViewSelectionMode);
            _typeTable[206] = typeof(global::Microsoft.UI.Xaml.Media.Animation.TransitionCollection);
            _typeTable[207] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>);
            _typeTable[208] = typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode);
            _typeTable[209] = typeof(global::Microsoft.UI.Xaml.Controls.TreeViewItem);
            _typeTable[210] = typeof(global::Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings);
            _typeTable[211] = typeof(global::InXone.WinUI.Controls.Projects.ProjectSidePanelControl);
            _typeTable[212] = typeof(global::CommunityToolkit.WinUI.UI.Controls.GridSplitter);
            _typeTable[213] = typeof(global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperCursorType);
            _typeTable[214] = typeof(global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GridResizeBehavior);
            _typeTable[215] = typeof(global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GridResizeDirection);
            _typeTable[216] = typeof(global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.SplitterCursorBehavior);
            _typeTable[217] = typeof(global::InXone.WinUI.Controls.Projects.ProjectViewerControl);
            _typeTable[218] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemSeparator);
            _typeTable[219] = typeof(global::InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataFormControl);
            _typeTable[220] = typeof(global::InXone.WinUI.Controls.ViewModels.ReferenceDataFormViewModel);
            _typeTable[221] = typeof(global::InXone.UI.DataModel.Models.ElementComponentViewModel);
            _typeTable[222] = typeof(global::InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataFormStackControl);
            _typeTable[223] = typeof(global::InXone.WinUI.Controls.ViewModels.ReferenceDataFormStackViewModel);
            _typeTable[224] = typeof(global::InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataGridControl);
            _typeTable[225] = typeof(global::InXone.WinUI.Controls.ViewModels.ReferenceDataGridViewModel);
            _typeTable[226] = typeof(global::InXone.WinUI.Controls.ReferenceData.ReferenceDataEditorControl);
            _typeTable[227] = typeof(global::InXone.Uwp.ViewModels.ReferenceDataEditorViewModel);
            _typeTable[228] = typeof(global::InXone.WinUI.Controls.ReferenceData.ReferenceDataValidationContentDialog);
            _typeTable[229] = typeof(global::Microsoft.UI.Xaml.Controls.ContentDialog);
            _typeTable[230] = typeof(global::InXone.WinUI.Controls.ViewModels.ReferenceDataValidationViewModel);
            _typeTable[231] = typeof(global::InXone.WinUI.Controls.ReferenceLists.ReferenceListViewControl);
            _typeTable[232] = typeof(global::InXone.Uwp.ViewModels.ReferenceListViewModel);
            _typeTable[233] = typeof(global::InXone.WinUI.Controls.Utilities.TextButtonControl);
            _typeTable[234] = typeof(global::InXone.Uwp.ViewModels.TextButtonViewModel);
            _typeTable[235] = typeof(global::InXone.WinUI.Controls.Utilities.TextEditorControl);
            _typeTable[236] = typeof(global::InXone.WinUI.Controls.ViewModels.TextEditorViewModel);
            _typeTable[237] = typeof(global::Microsoft.UI.Xaml.Controls.WebView2);
            _typeTable[238] = typeof(global::System.Uri);
            _typeTable[239] = typeof(global::Microsoft.Web.WebView2.Core.CoreWebView2);
            _typeTable[240] = typeof(global::Windows.UI.Color);
            _typeTable[241] = typeof(global::InXone.WinUI.Controls.Web.WebBrowserControl);
            _typeTable[242] = typeof(global::InXone.Uwp.ViewModels.WebBrowserViewModel);
            _typeTable[243] = typeof(global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter);
            _typeTable[244] = typeof(global::Syncfusion.UI.Xaml.Core.DoubleToVisibilityConverter);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_AboutControl() { return new global::InXone.WinUI.Controls.AboutControl(); }
        private object Activate_4_ProgressBar() { return new global::Microsoft.UI.Xaml.Controls.ProgressBar(); }
        private object Activate_9_AccountLoginControl() { return new global::InXone.WinUI.Controls.Accounts.AccountLoginControl(); }
        private object Activate_10_LoginViewModel() { return new global::InXone.WinUI.Controls.ViewModels.LoginViewModel(); }
        private object Activate_11_DeviceUserViewModel() { return new global::InXone.UI.DataModel.Devices.DeviceUserViewModel(); }
        private object Activate_12_DeviceUserData() { return new global::InXone.UI.DataModel.Devices.DeviceUserData(); }
        private object Activate_13_ObservableObject() { return new global::InXone.Helpers.ObservableObject(); }
        private object Activate_16_KeyPadControl() { return new global::InXone.WinUI.Controls.Utilities.KeyPadControl(); }
        private object Activate_17_KeyPadViewModel() { return new global::InXone.Uwp.ViewModels.KeyPadViewModel(); }
        private object Activate_18_AccountPinLoginControl() { return new global::InXone.WinUI.Controls.Accounts.AccountPinLoginControl(); }
        private object Activate_19_CustomRowStyleSelector() { return new global::InXone.WinUI.Controls.Assets.CustomRowStyleSelector(); }
        private object Activate_21_DataGridRowControl() { return new global::Syncfusion.UI.Xaml.DataGrid.DataGridRowControl(); }
        private object Activate_25_DockPanel() { return new global::CommunityToolkit.WinUI.UI.Controls.DockPanel(); }
        private object Activate_32_SfDataGrid() { return new global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid(); }
        private object Activate_33_SfGridBase() { return new global::Syncfusion.UI.Xaml.Grids.SfGridBase(); }
        private object Activate_36_Columns() { return new global::Syncfusion.UI.Xaml.DataGrid.Columns(); }
        private object Activate_37_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.DataGrid.GridColumn>(); }
        private object Activate_38_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.DataGrid.GridColumn>(); }
        private object Activate_41_ColumnBase() { return new global::Syncfusion.UI.Xaml.Grids.ColumnBase<global::Syncfusion.UI.Xaml.Grids.SfGridBase>(); }
        private object Activate_49_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Data.FilterPredicate>(); }
        private object Activate_50_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Data.FilterPredicate>(); }
        private object Activate_51_FilterPredicate() { return new global::Syncfusion.UI.Xaml.Data.FilterPredicate(); }
        private object Activate_65_GridColumnResizingController() { return new global::Syncfusion.UI.Xaml.DataGrid.GridColumnResizingController(); }
        private object Activate_66_DataGridColumnSizer() { return new global::Syncfusion.UI.Xaml.DataGrid.DataGridColumnSizer(); }
        private object Activate_67_DataGridRowColumnSizer() { return new global::Syncfusion.UI.Xaml.Grids.DataGridRowColumnSizer<global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid>(); }
        private object Activate_72_Disposable() { return new global::Syncfusion.UI.Xaml.Grids.Collections.Disposable(); }
        private object Activate_73_NonFinalizeDisposable() { return new global::Syncfusion.UI.Xaml.Grids.Collections.NonFinalizeDisposable(); }
        private object Activate_75_List() { return new global::System.Collections.Generic.List<global::Syncfusion.UI.Xaml.Grids.CoveredCellInfo>(); }
        private object Activate_82_AutoScroller() { return new global::Syncfusion.UI.Xaml.DataGrid.AutoScroller(); }
        private object Activate_83_SortComparers() { return new global::Syncfusion.UI.Xaml.Data.SortComparers(); }
        private object Activate_84_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Data.SortComparer>(); }
        private object Activate_85_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Data.SortComparer>(); }
        private object Activate_86_SortComparer() { return new global::Syncfusion.UI.Xaml.Data.SortComparer(); }
        private object Activate_88_GroupColumnDescriptions() { return new global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescriptions(); }
        private object Activate_89_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription>(); }
        private object Activate_90_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription>(); }
        private object Activate_91_GroupColumnDescription() { return new global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription(); }
        private object Activate_95_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow>(); }
        private object Activate_96_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow>(); }
        private object Activate_97_GridSummaryRow() { return new global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow(); }
        private object Activate_99_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Data.ISummaryColumn>(); }
        private object Activate_100_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Data.ISummaryColumn>(); }
        private object Activate_104_UnboundRows() { return new global::Syncfusion.UI.Xaml.DataGrid.UnboundRows(); }
        private object Activate_105_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.DataGrid.GridUnboundRow>(); }
        private object Activate_106_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.DataGrid.GridUnboundRow>(); }
        private object Activate_107_GridUnboundRow() { return new global::Syncfusion.UI.Xaml.DataGrid.GridUnboundRow(); }
        private object Activate_114_DetailsViewDefinition() { return new global::Syncfusion.UI.Xaml.DataGrid.DetailsViewDefinition(); }
        private object Activate_115_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.DataGrid.ViewDefinition>(); }
        private object Activate_116_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.DataGrid.ViewDefinition>(); }
        private object Activate_120_DataGridPrintSettings() { return new global::Syncfusion.UI.Xaml.DataGrid.Print.DataGridPrintSettings(); }
        private object Activate_123_GridCellInfo() { return new global::Syncfusion.UI.Xaml.DataGrid.GridCellInfo(); }
        private object Activate_125_StackedHeaderRows() { return new global::Syncfusion.UI.Xaml.Grids.StackedHeaderRows(); }
        private object Activate_126_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Grids.StackedHeaderRow>(); }
        private object Activate_127_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Grids.StackedHeaderRow>(); }
        private object Activate_128_StackedHeaderRow() { return new global::Syncfusion.UI.Xaml.Grids.StackedHeaderRow(); }
        private object Activate_129_StackedColumns() { return new global::Syncfusion.UI.Xaml.Grids.StackedColumns(); }
        private object Activate_130_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Grids.StackedColumn>(); }
        private object Activate_131_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Grids.StackedColumn>(); }
        private object Activate_132_StackedColumn() { return new global::Syncfusion.UI.Xaml.Grids.StackedColumn(); }
        private object Activate_141_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::System.Object>(); }
        private object Activate_142_Collection() { return new global::System.Collections.ObjectModel.Collection<global::System.Object>(); }
        private object Activate_143_SortColumnDescriptions() { return new global::Syncfusion.UI.Xaml.Grids.SortColumnDescriptions(); }
        private object Activate_144_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Grids.SortColumnDescription>(); }
        private object Activate_145_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Grids.SortColumnDescription>(); }
        private object Activate_146_SortColumnDescription() { return new global::Syncfusion.UI.Xaml.Grids.SortColumnDescription(); }
        private object Activate_150_GridTextColumn() { return new global::Syncfusion.UI.Xaml.DataGrid.GridTextColumn(); }
        private object Activate_154_AssetDataElementGridControl() { return new global::InXone.WinUI.Controls.Assets.AssetDataElementGridControl(); }
        private object Activate_155_AssetViewerViewModel() { return new global::InXone.WinUI.Controls.ViewModels.AssetViewerViewModel(); }
        private object Activate_156_ItemsRepeater() { return new global::Microsoft.UI.Xaml.Controls.ItemsRepeater(); }
        private object Activate_159_AssetSidePanelControl() { return new global::InXone.WinUI.Controls.Assets.AssetSidePanelControl(); }
        private object Activate_160_AssetSidePanelViewModel() { return new global::InXone.WinUI.Controls.ViewModels.AssetSidePanelViewModel(); }
        private object Activate_161_AssetUseCaseGridControl() { return new global::InXone.WinUI.Controls.Assets.AssetUseCaseGridControl(); }
        private object Activate_162_TabView() { return new global::Microsoft.UI.Xaml.Controls.TabView(); }
        private object Activate_167_TabViewItem() { return new global::Microsoft.UI.Xaml.Controls.TabViewItem(); }
        private object Activate_170_TabViewItemTemplateSettings() { return new global::Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings(); }
        private object Activate_171_ProjectFileEditorControl() { return new global::InXone.WinUI.Controls.Projects.ProjectFileEditorControl(); }
        private object Activate_172_ProjectViewerViewModel() { return new global::InXone.WinUI.Controls.ViewModels.ProjectViewerViewModel(); }
        private object Activate_175_AssetViewerControl() { return new global::InXone.WinUI.Controls.Assets.AssetViewerControl(); }
        private object Activate_176_EntityFollowUpGridControl() { return new global::InXone.WinUI.Controls.Entities.EntityFollowUpGridControl(); }
        private object Activate_177_EntityFollowUpViewModel() { return new global::InXone.Uwp.ViewModels.EntityFollowUpViewModel(); }
        private object Activate_178_EntityFollowUpViewModel() { return new global::InXone.UI.DataModel.Entities.EntityFollowUpViewModel(); }
        private object Activate_179_NavigationView() { return new global::Microsoft.UI.Xaml.Controls.NavigationView(); }
        private object Activate_188_NavigationViewTemplateSettings() { return new global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings(); }
        private object Activate_189_NotesViewEditControl() { return new global::InXone.WinUI.Controls.Notes.NotesViewEditControl(); }
        private object Activate_190_NoteViewModel() { return new global::InXone.UI.DataModel.Notes.NoteViewModel(); }
        private object Activate_191_PersonBaseEditorControl() { return new global::InXone.WinUI.Controls.Entities.PersonBaseEditorControl(); }
        private object Activate_192_PersonViewModel() { return new global::InXone.UI.DataModel.Entities.PersonViewModel(); }
        private object Activate_193_ReferenceListGroupEditControl() { return new global::InXone.WinUI.Controls.ReferenceLists.ReferenceListGroupEditControl(); }
        private object Activate_195_NavigationViewItem() { return new global::Microsoft.UI.Xaml.Controls.NavigationViewItem(); }
        private object Activate_198_EntityFollowUpViewControl() { return new global::InXone.WinUI.Controls.Entities.EntityFollowUpViewControl(); }
        private object Activate_199_DashboardControl() { return new global::InXone.WinUI.Controls.Home.DashboardControl(); }
        private object Activate_200_MenuItemTemplateSelector() { return new global::InXone.WinUI.Common.MenuItemTemplateSelector(); }
        private object Activate_201_NavigationControl() { return new global::InXone.WinUI.Controls.Navigation.NavigationControl(); }
        private object Activate_202_NavigationViewModel() { return new global::InXone.Uwp.ViewModels.NavigationViewModel(); }
        private object Activate_203_FolderFileIconConverter() { return new global::InXone.WinUI.Controls.Common.FolderFileIconConverter(); }
        private object Activate_204_TreeView() { return new global::Microsoft.UI.Xaml.Controls.TreeView(); }
        private object Activate_208_TreeViewNode() { return new global::Microsoft.UI.Xaml.Controls.TreeViewNode(); }
        private object Activate_209_TreeViewItem() { return new global::Microsoft.UI.Xaml.Controls.TreeViewItem(); }
        private object Activate_210_TreeViewItemTemplateSettings() { return new global::Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings(); }
        private object Activate_211_ProjectSidePanelControl() { return new global::InXone.WinUI.Controls.Projects.ProjectSidePanelControl(); }
        private object Activate_212_GridSplitter() { return new global::CommunityToolkit.WinUI.UI.Controls.GridSplitter(); }
        private object Activate_217_ProjectViewerControl() { return new global::InXone.WinUI.Controls.Projects.ProjectViewerControl(); }
        private object Activate_218_NavigationViewItemSeparator() { return new global::Microsoft.UI.Xaml.Controls.NavigationViewItemSeparator(); }
        private object Activate_219_ReferenceDataFormControl() { return new global::InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataFormControl(); }
        private object Activate_220_ReferenceDataFormViewModel() { return new global::InXone.WinUI.Controls.ViewModels.ReferenceDataFormViewModel(); }
        private object Activate_222_ReferenceDataFormStackControl() { return new global::InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataFormStackControl(); }
        private object Activate_223_ReferenceDataFormStackViewModel() { return new global::InXone.WinUI.Controls.ViewModels.ReferenceDataFormStackViewModel(); }
        private object Activate_224_ReferenceDataGridControl() { return new global::InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataGridControl(); }
        private object Activate_225_ReferenceDataGridViewModel() { return new global::InXone.WinUI.Controls.ViewModels.ReferenceDataGridViewModel(); }
        private object Activate_226_ReferenceDataEditorControl() { return new global::InXone.WinUI.Controls.ReferenceData.ReferenceDataEditorControl(); }
        private object Activate_227_ReferenceDataEditorViewModel() { return new global::InXone.Uwp.ViewModels.ReferenceDataEditorViewModel(); }
        private object Activate_228_ReferenceDataValidationContentDialog() { return new global::InXone.WinUI.Controls.ReferenceData.ReferenceDataValidationContentDialog(); }
        private object Activate_230_ReferenceDataValidationViewModel() { return new global::InXone.WinUI.Controls.ViewModels.ReferenceDataValidationViewModel(); }
        private object Activate_231_ReferenceListViewControl() { return new global::InXone.WinUI.Controls.ReferenceLists.ReferenceListViewControl(); }
        private object Activate_232_ReferenceListViewModel() { return new global::InXone.Uwp.ViewModels.ReferenceListViewModel(); }
        private object Activate_233_TextButtonControl() { return new global::InXone.WinUI.Controls.Utilities.TextButtonControl(); }
        private object Activate_234_TextButtonViewModel() { return new global::InXone.Uwp.ViewModels.TextButtonViewModel(); }
        private object Activate_235_TextEditorControl() { return new global::InXone.WinUI.Controls.Utilities.TextEditorControl(); }
        private object Activate_236_TextEditorViewModel() { return new global::InXone.WinUI.Controls.ViewModels.TextEditorViewModel(); }
        private object Activate_237_WebView2() { return new global::Microsoft.UI.Xaml.Controls.WebView2(); }
        private object Activate_241_WebBrowserControl() { return new global::InXone.WinUI.Controls.Web.WebBrowserControl(); }
        private object Activate_242_WebBrowserViewModel() { return new global::InXone.Uwp.ViewModels.WebBrowserViewModel(); }
        private object Activate_243_DoubleToObjectConverter() { return new global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter(); }
        private object Activate_244_DoubleToVisibilityConverter() { return new global::Syncfusion.UI.Xaml.Core.DoubleToVisibilityConverter(); }
        private void VectorAdd_36_Columns(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.DataGrid.GridColumn>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)item;
            collection.Add(newItem);
        }
        private void VectorAdd_37_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.DataGrid.GridColumn>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)item;
            collection.Add(newItem);
        }
        private void VectorAdd_38_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.DataGrid.GridColumn>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)item;
            collection.Add(newItem);
        }
        private void VectorAdd_49_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Data.FilterPredicate>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Data.FilterPredicate)item;
            collection.Add(newItem);
        }
        private void VectorAdd_50_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Data.FilterPredicate>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Data.FilterPredicate)item;
            collection.Add(newItem);
        }
        private void VectorAdd_68_ICollectionViewAdv(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_74_CoveredCellInfoCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Grids.CoveredCellInfo>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Grids.CoveredCellInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_75_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Grids.CoveredCellInfo>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Grids.CoveredCellInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_83_SortComparers(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Data.SortComparer>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Data.SortComparer)item;
            collection.Add(newItem);
        }
        private void VectorAdd_84_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Data.SortComparer>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Data.SortComparer)item;
            collection.Add(newItem);
        }
        private void VectorAdd_85_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Data.SortComparer>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Data.SortComparer)item;
            collection.Add(newItem);
        }
        private void VectorAdd_88_GroupColumnDescriptions(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription)item;
            collection.Add(newItem);
        }
        private void VectorAdd_89_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription)item;
            collection.Add(newItem);
        }
        private void VectorAdd_90_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription)item;
            collection.Add(newItem);
        }
        private void VectorAdd_95_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow)item;
            collection.Add(newItem);
        }
        private void VectorAdd_96_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow)item;
            collection.Add(newItem);
        }
        private void VectorAdd_99_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Data.ISummaryColumn>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Data.ISummaryColumn)item;
            collection.Add(newItem);
        }
        private void VectorAdd_100_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Data.ISummaryColumn>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Data.ISummaryColumn)item;
            collection.Add(newItem);
        }
        private void VectorAdd_104_UnboundRows(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.DataGrid.GridUnboundRow>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.DataGrid.GridUnboundRow)item;
            collection.Add(newItem);
        }
        private void VectorAdd_105_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.DataGrid.GridUnboundRow>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.DataGrid.GridUnboundRow)item;
            collection.Add(newItem);
        }
        private void VectorAdd_106_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.DataGrid.GridUnboundRow>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.DataGrid.GridUnboundRow)item;
            collection.Add(newItem);
        }
        private void VectorAdd_114_DetailsViewDefinition(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.DataGrid.ViewDefinition>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.DataGrid.ViewDefinition)item;
            collection.Add(newItem);
        }
        private void VectorAdd_115_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.DataGrid.ViewDefinition>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.DataGrid.ViewDefinition)item;
            collection.Add(newItem);
        }
        private void VectorAdd_116_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.DataGrid.ViewDefinition>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.DataGrid.ViewDefinition)item;
            collection.Add(newItem);
        }
        private void VectorAdd_125_StackedHeaderRows(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Grids.StackedHeaderRow>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Grids.StackedHeaderRow)item;
            collection.Add(newItem);
        }
        private void VectorAdd_126_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Grids.StackedHeaderRow>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Grids.StackedHeaderRow)item;
            collection.Add(newItem);
        }
        private void VectorAdd_127_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Grids.StackedHeaderRow>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Grids.StackedHeaderRow)item;
            collection.Add(newItem);
        }
        private void VectorAdd_129_StackedColumns(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Grids.StackedColumn>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Grids.StackedColumn)item;
            collection.Add(newItem);
        }
        private void VectorAdd_130_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Grids.StackedColumn>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Grids.StackedColumn)item;
            collection.Add(newItem);
        }
        private void VectorAdd_131_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Grids.StackedColumn>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Grids.StackedColumn)item;
            collection.Add(newItem);
        }
        private void VectorAdd_141_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_142_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_143_SortColumnDescriptions(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Grids.SortColumnDescription>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Grids.SortColumnDescription)item;
            collection.Add(newItem);
        }
        private void VectorAdd_144_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Grids.SortColumnDescription>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Grids.SortColumnDescription)item;
            collection.Add(newItem);
        }
        private void VectorAdd_145_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Grids.SortColumnDescription>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Grids.SortColumnDescription)item;
            collection.Add(newItem);
        }
        private void VectorAdd_163_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_207_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.TreeViewNode>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)item;
            collection.Add(newItem);
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  InXone.WinUI.Controls.AboutControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_0_AboutControl;
                userType.AddMemberName("ParentMenu");
                userType.AddMemberName("Title");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Microsoft.UI.Xaml.Controls.UserControl
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  InXone.DataObjects.ViewModels.IMenuItemParent
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 3:   //  String
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  Microsoft.UI.Xaml.Controls.ProgressBar
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.RangeBase"));
                userType.Activator = Activate_4_ProgressBar;
                userType.AddMemberName("IsIndeterminate");
                userType.AddMemberName("ShowError");
                userType.AddMemberName("ShowPaused");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 5:   //  Microsoft.UI.Xaml.Controls.Primitives.RangeBase
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  Boolean
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 8:   //  Microsoft.UI.Xaml.DependencyObject
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  InXone.WinUI.Controls.Accounts.AccountLoginControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_9_AccountLoginControl;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 10:   //  InXone.WinUI.Controls.ViewModels.LoginViewModel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("InXone.UI.DataModel.Devices.DeviceUserViewModel"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 11:   //  InXone.UI.DataModel.Devices.DeviceUserViewModel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("InXone.UI.DataModel.Devices.DeviceUserData"));
                userType.Activator = Activate_11_DeviceUserViewModel;
                xamlType = userType;
                break;

            case 12:   //  InXone.UI.DataModel.Devices.DeviceUserData
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("InXone.Helpers.ObservableObject"));
                userType.Activator = Activate_12_DeviceUserData;
                xamlType = userType;
                break;

            case 13:   //  InXone.Helpers.ObservableObject
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Toolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.Activator = Activate_13_ObservableObject;
                xamlType = userType;
                break;

            case 14:   //  Microsoft.Toolkit.Mvvm.ComponentModel.ObservableObject
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 15:   //  Object
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  InXone.WinUI.Controls.Utilities.KeyPadControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_16_KeyPadControl;
                userType.AddMemberName("ViewModel");
                userType.AddMemberName("ParentMenu");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 17:   //  InXone.Uwp.ViewModels.KeyPadViewModel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("InXone.Helpers.ObservableObject"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 18:   //  InXone.WinUI.Controls.Accounts.AccountPinLoginControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_18_AccountPinLoginControl;
                userType.AddMemberName("ViewModel");
                userType.AddMemberName("ParentMenu");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 19:   //  InXone.WinUI.Controls.Assets.CustomRowStyleSelector
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.StyleSelector"));
                userType.Activator = Activate_19_CustomRowStyleSelector;
                userType.AddMemberName("Parent");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 20:   //  Microsoft.UI.Xaml.Controls.StyleSelector
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 21:   //  Syncfusion.UI.Xaml.DataGrid.DataGridRowControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_21_DataGridRowControl;
                userType.AddMemberName("SelectionBorderVisibility");
                userType.AddMemberName("HighlightSelectionBorderVisibility");
                userType.AddMemberName("SelectionForeground");
                userType.AddMemberName("RowHoverForeground");
                userType.AddMemberName("RowBorderState");
                xamlType = userType;
                break;

            case 22:   //  Microsoft.UI.Xaml.Controls.ContentControl
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 23:   //  Microsoft.UI.Xaml.Visibility
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 24:   //  Microsoft.UI.Xaml.Media.Brush
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 25:   //  CommunityToolkit.WinUI.UI.Controls.DockPanel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Panel"));
                userType.Activator = Activate_25_DockPanel;
                userType.AddMemberName("LastChildFill");
                userType.AddMemberName("Padding");
                userType.AddMemberName("Dock");
                xamlType = userType;
                break;

            case 26:   //  Microsoft.UI.Xaml.Controls.Panel
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 27:   //  Microsoft.UI.Xaml.Thickness
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 28:   //  System.ValueType
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 29:   //  CommunityToolkit.WinUI.UI.Controls.Dock
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Left", global::CommunityToolkit.WinUI.UI.Controls.Dock.Left);
                userType.AddEnumValue("Top", global::CommunityToolkit.WinUI.UI.Controls.Dock.Top);
                userType.AddEnumValue("Right", global::CommunityToolkit.WinUI.UI.Controls.Dock.Right);
                userType.AddEnumValue("Bottom", global::CommunityToolkit.WinUI.UI.Controls.Dock.Bottom);
                xamlType = userType;
                break;

            case 30:   //  System.Enum
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 31:   //  Microsoft.UI.Xaml.FrameworkElement
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 32:   //  Syncfusion.UI.Xaml.DataGrid.SfDataGrid
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase"));
                userType.Activator = Activate_32_SfDataGrid;
                userType.AddMemberName("ColumnWidthMode");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("RowStyleSelector");
                userType.AddMemberName("AllowFiltering");
                userType.AddMemberName("EnableDataVirtualization");
                userType.AddMemberName("Columns");
                userType.AddMemberName("RowGenerator");
                userType.AddMemberName("ColumnResizingController");
                userType.AddMemberName("ColumnSizer");
                userType.AddMemberName("BindableView");
                userType.AddMemberName("View");
                userType.AddMemberName("ColumnDragDropController");
                userType.AddMemberName("ShowBusyIndicator");
                userType.AddMemberName("LostFocusBehavior");
                userType.AddMemberName("CellRenderers");
                userType.AddMemberName("UnboundRowCellRenderers");
                userType.AddMemberName("FilterRowCellRenderers");
                userType.AddMemberName("CoveredCells");
                userType.AddMemberName("SelectionController");
                userType.AddMemberName("NotificationSubscriptionMode");
                userType.AddMemberName("SerializationController");
                userType.AddMemberName("AutoScroller");
                userType.AddMemberName("FrozenFooterRowsCount");
                userType.AddMemberName("FrozenRowsCount");
                userType.AddMemberName("SourceType");
                userType.AddMemberName("UsePLINQ");
                userType.AddMemberName("AddNewRowText");
                userType.AddMemberName("SortComparers");
                userType.AddMemberName("SelectionBackground");
                userType.AddMemberName("SelectionForeground");
                userType.AddMemberName("RowStyle");
                userType.AddMemberName("UnboundRowStyle");
                userType.AddMemberName("AlternationCount");
                userType.AddMemberName("AlternatingRowStyle");
                userType.AddMemberName("AlternatingRowStyleSelector");
                userType.AddMemberName("CellStyle");
                userType.AddMemberName("UnboundRowCellStyle");
                userType.AddMemberName("CellStyleSelector");
                userType.AddMemberName("HeaderStyle");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("GroupColumnDescriptions");
                userType.AddMemberName("GroupSummaryRows");
                userType.AddMemberName("CaptionSummaryRow");
                userType.AddMemberName("TableSummaryRows");
                userType.AddMemberName("UnboundRows");
                userType.AddMemberName("ShowColumnWhenGrouped");
                userType.AddMemberName("AllowFrozenGroupHeaders");
                userType.AddMemberName("CaptionSummaryRowStyle");
                userType.AddMemberName("GroupSummaryRowStyle");
                userType.AddMemberName("TableSummaryRowStyle");
                userType.AddMemberName("CaptionSummaryRowStyleSelector");
                userType.AddMemberName("GroupSummaryRowStyleSelector");
                userType.AddMemberName("TableSummaryRowStyleSelector");
                userType.AddMemberName("GroupSummaryCellStyleSelector");
                userType.AddMemberName("CaptionSummaryCellStyleSelector");
                userType.AddMemberName("TableSummaryCellStyleSelector");
                userType.AddMemberName("IsDynamicItemsSource");
                userType.AddMemberName("DataFetchSize");
                userType.AddMemberName("GroupSummaryCellStyle");
                userType.AddMemberName("CaptionSummaryCellStyle");
                userType.AddMemberName("TableSummaryCellStyle");
                userType.AddMemberName("ShowGroupDropArea");
                userType.AddMemberName("ClipboardController");
                userType.AddMemberName("GroupCaptionTextFormat");
                userType.AddMemberName("IsGroupDropAreaExpanded");
                userType.AddMemberName("AllowGrouping");
                userType.AddMemberName("NewItemPlaceholderPosition");
                userType.AddMemberName("NotifyEventsToParentDataGrid");
                userType.AddMemberName("GroupDropAreaStyle");
                userType.AddMemberName("GroupDropAreaText");
                userType.AddMemberName("LiveDataUpdateMode");
                userType.AddMemberName("SummaryCalculationMode");
                userType.AddMemberName("SummaryCalculationUnit");
                userType.AddMemberName("AutoExpandGroups");
                userType.AddMemberName("AllowDeleting");
                userType.AddMemberName("DetailsViewDataGridStyle");
                userType.AddMemberName("CanUseViewFilter");
                userType.AddMemberName("FilterPopupStyle");
                userType.AddMemberName("FilterPopupTemplate");
                userType.AddMemberName("FilterRowPosition");
                userType.AddMemberName("DetailsViewDefinition");
                userType.AddMemberName("ShowDetailsViewIndentCell");
                userType.AddMemberName("ReuseRowsOnItemsSourceChange");
                userType.AddMemberName("CanMaintainScrollPosition");
                userType.AddMemberName("GroupDropItemContextFlyout");
                userType.AddMemberName("GroupDropAreaContextFlyout");
                userType.AddMemberName("GroupSummaryContextFlyout");
                userType.AddMemberName("TableSummaryContextFlyout");
                userType.AddMemberName("GroupCaptionContextFlyout");
                userType.AddMemberName("AllowRowHoverHighlighting");
                userType.AddMemberName("AddNewRowPosition");
                userType.AddMemberName("ExpanderColumnWidth");
                userType.AddMemberName("IndentColumnWidth");
                userType.AddMemberName("PrintSettings");
                userType.AddMemberName("CurrentItem");
                userType.AddMemberName("SelectionUnit");
                userType.AddMemberName("CurrentCellInfo");
                userType.AddMemberName("CurrentColumn");
                userType.AddMemberName("AutoGenerateRelations");
                userType.AddMemberName("SelectedDetailsViewGrid");
                userType.AddMemberName("HideEmptyGridViewDefinition");
                userType.AddMemberName("DetailsViewPadding");
                userType.AddMemberName("NotifyListener");
                userType.AddMemberName("IsListenerSuspended");
                xamlType = userType;
                break;

            case 33:   //  Syncfusion.UI.Xaml.Grids.SfGridBase
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_33_SfGridBase;
                userType.AddMemberName("AllowResizingColumns");
                userType.AddMemberName("AutoGenerateColumns");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("AllowResizingHiddenColumns");
                userType.AddMemberName("AllowSorting");
                userType.AddMemberName("StackedHeaderRows");
                userType.AddMemberName("FrozenFooterColumnCount");
                userType.AddMemberName("AllowEditing");
                userType.AddMemberName("IsReadOnly");
                userType.AddMemberName("AllowSelectionOnPointerPressed");
                userType.AddMemberName("SelectionMode");
                userType.AddMemberName("NavigationMode");
                userType.AddMemberName("EditorSelectionBehavior");
                userType.AddMemberName("EditTrigger");
                userType.AddMemberName("CurrentCellBorderThickness");
                userType.AddMemberName("CurrentCellBorderBrush");
                userType.AddMemberName("FrozenColumnCount");
                userType.AddMemberName("GridLinesVisibility");
                userType.AddMemberName("HeaderLinesVisibility");
                userType.AddMemberName("ShowRowHeader");
                userType.AddMemberName("RowHeaderWidth");
                userType.AddMemberName("HeaderRowHeight");
                userType.AddMemberName("RowHeight");
                userType.AddMemberName("AllowDraggingColumns");
                userType.AddMemberName("AutoGenerateColumnsForCustomType");
                userType.AddMemberName("AutoGenerateColumnsModeForCustomType");
                userType.AddMemberName("CellTemplateSelector");
                userType.AddMemberName("AutoGenerateColumnsMode");
                userType.AddMemberName("SortClickAction");
                userType.AddMemberName("AllowTriStateSorting");
                userType.AddMemberName("HeaderContextFlyout");
                userType.AddMemberName("RecordContextFlyout");
                userType.AddMemberName("ShowSortNumbers");
                userType.AddMemberName("DataValidationMode");
                userType.AddMemberName("SelectedIndex");
                userType.AddMemberName("SelectedItems");
                userType.AddMemberName("SortColumnDescriptions");
                userType.AddMemberName("PasteOption");
                userType.AddMemberName("CopyOption");
                userType.AddMemberName("ShowToolTip");
                xamlType = userType;
                break;

            case 34:   //  Microsoft.UI.Xaml.Controls.Control
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 35:   //  Syncfusion.UI.Xaml.Grids.ColumnWidthMode
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Grids.ColumnWidthMode.None);
                userType.AddEnumValue("Auto", global::Syncfusion.UI.Xaml.Grids.ColumnWidthMode.Auto);
                userType.AddEnumValue("AutoWithLastColumnFill", global::Syncfusion.UI.Xaml.Grids.ColumnWidthMode.AutoWithLastColumnFill);
                userType.AddEnumValue("AutoLastColumnFill", global::Syncfusion.UI.Xaml.Grids.ColumnWidthMode.AutoLastColumnFill);
                userType.AddEnumValue("SizeToCells", global::Syncfusion.UI.Xaml.Grids.ColumnWidthMode.SizeToCells);
                userType.AddEnumValue("SizeToHeader", global::Syncfusion.UI.Xaml.Grids.ColumnWidthMode.SizeToHeader);
                userType.AddEnumValue("Star", global::Syncfusion.UI.Xaml.Grids.ColumnWidthMode.Star);
                xamlType = userType;
                break;

            case 36:   //  Syncfusion.UI.Xaml.DataGrid.Columns
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.DataGrid.GridColumn>"));
                userType.CollectionAdd = VectorAdd_36_Columns;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 37:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.DataGrid.GridColumn>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.DataGrid.GridColumn>"));
                userType.Activator = Activate_37_ObservableCollection;
                userType.CollectionAdd = VectorAdd_37_ObservableCollection;
                xamlType = userType;
                break;

            case 38:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.DataGrid.GridColumn>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_38_Collection;
                userType.CollectionAdd = VectorAdd_38_Collection;
                xamlType = userType;
                break;

            case 39:   //  Syncfusion.UI.Xaml.DataGrid.GridColumn
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase"));
                userType.AddMemberName("ColumnMemberType");
                userType.AddMemberName("FilterRowCellStyle");
                userType.AddMemberName("UseBindingValue");
                userType.AddMemberName("ColumnWidthMode");
                userType.AddMemberName("AllowDragging");
                userType.AddMemberName("AllowGrouping");
                userType.AddMemberName("AllowResizing");
                userType.AddMemberName("AllowFiltering");
                userType.AddMemberName("ImmediateUpdateColumnFilter");
                userType.AddMemberName("FilterRowOptionsVisibility");
                userType.AddMemberName("FilterRowCondition");
                userType.AddMemberName("FilterPopupStyle");
                userType.AddMemberName("FilterPopupTemplate");
                userType.AddMemberName("AllowBlankFilters");
                userType.AddMemberName("FilterRowText");
                userType.AddMemberName("IsCaseSensitiveFilterRow");
                userType.AddMemberName("GroupMode");
                userType.AddMemberName("SortMode");
                userType.AddMemberName("CellType");
                userType.AddMemberName("FilteredFrom");
                userType.AddMemberName("FilterPredicates");
                userType.AddMemberName("FilterBehavior");
                userType.AddMemberName("ColumnFilter");
                userType.AddMemberName("FilterRowEditorType");
                xamlType = userType;
                break;

            case 40:   //  Syncfusion.UI.Xaml.Grids.GridColumnBase
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.ColumnBase`1<Syncfusion.UI.Xaml.Grids.SfGridBase>"));
                userType.AddMemberName("IsAutoGenerated");
                userType.AddMemberName("ActualWidth");
                userType.AddMemberName("MappingName");
                userType.AddMemberName("HeaderText");
                userType.AddMemberName("AllowEditing");
                userType.AddMemberName("IsReadOnly");
                userType.AddMemberName("DataValidationMode");
                userType.AddMemberName("UpdateTrigger");
                userType.AddMemberName("Padding");
                userType.AddMemberName("AllowFocus");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("CellTemplate");
                userType.AddMemberName("SetCellBoundValue");
                userType.AddMemberName("CellTemplateSelector");
                userType.AddMemberName("CellStyle");
                userType.AddMemberName("CellStyleSelector");
                userType.AddMemberName("HeaderStyle");
                userType.AddMemberName("AllowSorting");
                userType.AddMemberName("VerticalAlignment");
                userType.AddMemberName("TextAlignment");
                userType.AddMemberName("HorizontalHeaderContentAlignment");
                userType.AddMemberName("Width");
                userType.AddMemberName("IsHidden");
                userType.AddMemberName("MaximumWidth");
                userType.AddMemberName("MinimumWidth");
                userType.AddMemberName("ValueBinding");
                userType.AddMemberName("DisplayBinding");
                userType.AddMemberName("ShowHeaderToolTip");
                userType.AddMemberName("ToolTipTemplate");
                userType.AddMemberName("HeaderToolTipTemplate");
                userType.AddMemberName("ToolTipTemplateSelector");
                userType.AddMemberName("ShowToolTip");
                userType.AddMemberName("SetCellBoundToolTip");
                xamlType = userType;
                break;

            case 41:   //  Syncfusion.UI.Xaml.Grids.ColumnBase`1<Syncfusion.UI.Xaml.Grids.SfGridBase>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_41_ColumnBase;
                xamlType = userType;
                break;

            case 42:   //  System.Type
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Reflection.MemberInfo"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 43:   //  System.Reflection.MemberInfo
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 44:   //  Microsoft.UI.Xaml.Style
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 45:   //  Syncfusion.UI.Xaml.DataGrid.FilterRowCondition
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("LessThan", global::Syncfusion.UI.Xaml.DataGrid.FilterRowCondition.LessThan);
                userType.AddEnumValue("LessThanOrEqual", global::Syncfusion.UI.Xaml.DataGrid.FilterRowCondition.LessThanOrEqual);
                userType.AddEnumValue("GreaterThanOrEqual", global::Syncfusion.UI.Xaml.DataGrid.FilterRowCondition.GreaterThanOrEqual);
                userType.AddEnumValue("GreaterThan", global::Syncfusion.UI.Xaml.DataGrid.FilterRowCondition.GreaterThan);
                userType.AddEnumValue("Equals", global::Syncfusion.UI.Xaml.DataGrid.FilterRowCondition.Equals);
                userType.AddEnumValue("NotEquals", global::Syncfusion.UI.Xaml.DataGrid.FilterRowCondition.NotEquals);
                userType.AddEnumValue("BeginsWith", global::Syncfusion.UI.Xaml.DataGrid.FilterRowCondition.BeginsWith);
                userType.AddEnumValue("NotBeginsWith", global::Syncfusion.UI.Xaml.DataGrid.FilterRowCondition.NotBeginsWith);
                userType.AddEnumValue("EndsWith", global::Syncfusion.UI.Xaml.DataGrid.FilterRowCondition.EndsWith);
                userType.AddEnumValue("NotEndsWith", global::Syncfusion.UI.Xaml.DataGrid.FilterRowCondition.NotEndsWith);
                userType.AddEnumValue("Contains", global::Syncfusion.UI.Xaml.DataGrid.FilterRowCondition.Contains);
                userType.AddEnumValue("NotContains", global::Syncfusion.UI.Xaml.DataGrid.FilterRowCondition.NotContains);
                userType.AddEnumValue("Before", global::Syncfusion.UI.Xaml.DataGrid.FilterRowCondition.Before);
                userType.AddEnumValue("BeforeOrEqual", global::Syncfusion.UI.Xaml.DataGrid.FilterRowCondition.BeforeOrEqual);
                userType.AddEnumValue("After", global::Syncfusion.UI.Xaml.DataGrid.FilterRowCondition.After);
                userType.AddEnumValue("AfterOrEqual", global::Syncfusion.UI.Xaml.DataGrid.FilterRowCondition.AfterOrEqual);
                userType.AddEnumValue("Null", global::Syncfusion.UI.Xaml.DataGrid.FilterRowCondition.Null);
                userType.AddEnumValue("NotNull", global::Syncfusion.UI.Xaml.DataGrid.FilterRowCondition.NotNull);
                userType.AddEnumValue("Empty", global::Syncfusion.UI.Xaml.DataGrid.FilterRowCondition.Empty);
                userType.AddEnumValue("NotEmpty", global::Syncfusion.UI.Xaml.DataGrid.FilterRowCondition.NotEmpty);
                xamlType = userType;
                break;

            case 46:   //  Microsoft.UI.Xaml.DataTemplate
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 47:   //  Syncfusion.UI.Xaml.Data.DataReflectionMode
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::Syncfusion.UI.Xaml.Data.DataReflectionMode.Default);
                userType.AddEnumValue("Display", global::Syncfusion.UI.Xaml.Data.DataReflectionMode.Display);
                userType.AddEnumValue("Value", global::Syncfusion.UI.Xaml.Data.DataReflectionMode.Value);
                xamlType = userType;
                break;

            case 48:   //  Syncfusion.UI.Xaml.Grids.FilteredFrom
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("CheckboxFilter", global::Syncfusion.UI.Xaml.Grids.FilteredFrom.CheckboxFilter);
                userType.AddEnumValue("AdvancedFilter", global::Syncfusion.UI.Xaml.Grids.FilteredFrom.AdvancedFilter);
                userType.AddEnumValue("FilterRow", global::Syncfusion.UI.Xaml.Grids.FilteredFrom.FilterRow);
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Grids.FilteredFrom.None);
                xamlType = userType;
                break;

            case 49:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Data.FilterPredicate>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Data.FilterPredicate>"));
                userType.CollectionAdd = VectorAdd_49_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 50:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Data.FilterPredicate>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_50_Collection;
                userType.CollectionAdd = VectorAdd_50_Collection;
                xamlType = userType;
                break;

            case 51:   //  Syncfusion.UI.Xaml.Data.FilterPredicate
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_51_FilterPredicate;
                userType.AddMemberName("FilterType");
                userType.AddMemberName("FilterValue");
                userType.AddMemberName("PredicateType");
                userType.AddMemberName("FilterBehavior");
                userType.AddMemberName("IsCaseSensitive");
                userType.AddMemberName("FilterMode");
                xamlType = userType;
                break;

            case 52:   //  Syncfusion.UI.Xaml.Data.FilterType
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("LessThan", global::Syncfusion.UI.Xaml.Data.FilterType.LessThan);
                userType.AddEnumValue("LessThanOrEqual", global::Syncfusion.UI.Xaml.Data.FilterType.LessThanOrEqual);
                userType.AddEnumValue("Equals", global::Syncfusion.UI.Xaml.Data.FilterType.Equals);
                userType.AddEnumValue("NotEquals", global::Syncfusion.UI.Xaml.Data.FilterType.NotEquals);
                userType.AddEnumValue("GreaterThanOrEqual", global::Syncfusion.UI.Xaml.Data.FilterType.GreaterThanOrEqual);
                userType.AddEnumValue("GreaterThan", global::Syncfusion.UI.Xaml.Data.FilterType.GreaterThan);
                userType.AddEnumValue("StartsWith", global::Syncfusion.UI.Xaml.Data.FilterType.StartsWith);
                userType.AddEnumValue("NotStartsWith", global::Syncfusion.UI.Xaml.Data.FilterType.NotStartsWith);
                userType.AddEnumValue("EndsWith", global::Syncfusion.UI.Xaml.Data.FilterType.EndsWith);
                userType.AddEnumValue("NotEndsWith", global::Syncfusion.UI.Xaml.Data.FilterType.NotEndsWith);
                userType.AddEnumValue("Contains", global::Syncfusion.UI.Xaml.Data.FilterType.Contains);
                userType.AddEnumValue("NotContains", global::Syncfusion.UI.Xaml.Data.FilterType.NotContains);
                userType.AddEnumValue("Undefined", global::Syncfusion.UI.Xaml.Data.FilterType.Undefined);
                userType.AddEnumValue("Between", global::Syncfusion.UI.Xaml.Data.FilterType.Between);
                xamlType = userType;
                break;

            case 53:   //  Syncfusion.UI.Xaml.Data.PredicateType
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("And", global::Syncfusion.UI.Xaml.Data.PredicateType.And);
                userType.AddEnumValue("Or", global::Syncfusion.UI.Xaml.Data.PredicateType.Or);
                userType.AddEnumValue("AndAlso", global::Syncfusion.UI.Xaml.Data.PredicateType.AndAlso);
                userType.AddEnumValue("OrElse", global::Syncfusion.UI.Xaml.Data.PredicateType.OrElse);
                xamlType = userType;
                break;

            case 54:   //  Syncfusion.UI.Xaml.Data.FilterBehavior
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("StronglyTyped", global::Syncfusion.UI.Xaml.Data.FilterBehavior.StronglyTyped);
                userType.AddEnumValue("StringTyped", global::Syncfusion.UI.Xaml.Data.FilterBehavior.StringTyped);
                xamlType = userType;
                break;

            case 55:   //  Syncfusion.UI.Xaml.Data.ColumnFilter
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Value", global::Syncfusion.UI.Xaml.Data.ColumnFilter.Value);
                userType.AddEnumValue("DisplayText", global::Syncfusion.UI.Xaml.Data.ColumnFilter.DisplayText);
                xamlType = userType;
                break;

            case 56:   //  Double
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 57:   //  Syncfusion.UI.Xaml.Grids.GridValidationMode
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("InView", global::Syncfusion.UI.Xaml.Grids.GridValidationMode.InView);
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Grids.GridValidationMode.None);
                xamlType = userType;
                break;

            case 58:   //  Microsoft.UI.Xaml.Data.UpdateSourceTrigger
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 59:   //  Microsoft.UI.Xaml.Controls.DataTemplateSelector
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 60:   //  Microsoft.UI.Xaml.VerticalAlignment
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 61:   //  Microsoft.UI.Xaml.TextAlignment
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 62:   //  Microsoft.UI.Xaml.HorizontalAlignment
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 63:   //  Microsoft.UI.Xaml.Data.BindingBase
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 64:   //  Syncfusion.UI.Xaml.DataGrid.RowGenerator
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 65:   //  Syncfusion.UI.Xaml.DataGrid.GridColumnResizingController
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 66:   //  Syncfusion.UI.Xaml.DataGrid.DataGridColumnSizer
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.DataGridRowColumnSizer`1<Syncfusion.UI.Xaml.DataGrid.SfDataGrid>"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 67:   //  Syncfusion.UI.Xaml.Grids.DataGridRowColumnSizer`1<Syncfusion.UI.Xaml.DataGrid.SfDataGrid>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_67_DataGridRowColumnSizer;
                xamlType = userType;
                break;

            case 68:   //  Syncfusion.UI.Xaml.Data.ICollectionViewAdv
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_68_ICollectionViewAdv;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 69:   //  Syncfusion.UI.Xaml.DataGrid.DataGridColumnDragDropController
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 70:   //  Syncfusion.UI.Xaml.Grids.LostFocusBehavior
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("EndEditCurrentCell", global::Syncfusion.UI.Xaml.Grids.LostFocusBehavior.EndEditCurrentCell);
                userType.AddEnumValue("Default", global::Syncfusion.UI.Xaml.Grids.LostFocusBehavior.Default);
                xamlType = userType;
                break;

            case 71:   //  Syncfusion.UI.Xaml.DataGrid.Renderers.GridCellRendererCollection
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.Collections.Disposable"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 72:   //  Syncfusion.UI.Xaml.Grids.Collections.Disposable
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.Collections.NonFinalizeDisposable"));
                userType.Activator = Activate_72_Disposable;
                xamlType = userType;
                break;

            case 73:   //  Syncfusion.UI.Xaml.Grids.Collections.NonFinalizeDisposable
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_73_NonFinalizeDisposable;
                xamlType = userType;
                break;

            case 74:   //  Syncfusion.UI.Xaml.DataGrid.CoveredCellInfoCollection
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.Generic.List`1<Syncfusion.UI.Xaml.Grids.CoveredCellInfo>"));
                userType.CollectionAdd = VectorAdd_74_CoveredCellInfoCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 75:   //  System.Collections.Generic.List`1<Syncfusion.UI.Xaml.Grids.CoveredCellInfo>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_75_List;
                userType.CollectionAdd = VectorAdd_75_List;
                xamlType = userType;
                break;

            case 76:   //  Syncfusion.UI.Xaml.Grids.CoveredCellInfo
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("MappedRowColumnIndex");
                userType.AddMemberName("Row");
                userType.AddMemberName("Left");
                userType.AddMemberName("Right");
                userType.AddMemberName("Top");
                userType.AddMemberName("Bottom");
                userType.AddMemberName("Width");
                userType.AddMemberName("Height");
                userType.AddMemberName("Name");
                userType.AddMemberName("RowSpan");
                xamlType = userType;
                break;

            case 77:   //  Syncfusion.UI.Xaml.Grids.ScrollAxis.RowColumnIndex
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 78:   //  Int32
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 79:   //  Syncfusion.UI.Xaml.DataGrid.IGridSelectionController
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 80:   //  Syncfusion.UI.Xaml.Data.NotificationSubscriptionMode
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Data.NotificationSubscriptionMode.None);
                userType.AddEnumValue("CollectionChange", global::Syncfusion.UI.Xaml.Data.NotificationSubscriptionMode.CollectionChange);
                userType.AddEnumValue("PropertyChange", global::Syncfusion.UI.Xaml.Data.NotificationSubscriptionMode.PropertyChange);
                xamlType = userType;
                break;

            case 81:   //  Syncfusion.UI.Xaml.DataGrid.Serialization.SerializationController
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 82:   //  Syncfusion.UI.Xaml.DataGrid.AutoScroller
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 83:   //  Syncfusion.UI.Xaml.Data.SortComparers
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Data.SortComparer>"));
                userType.CollectionAdd = VectorAdd_83_SortComparers;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 84:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Data.SortComparer>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Data.SortComparer>"));
                userType.Activator = Activate_84_ObservableCollection;
                userType.CollectionAdd = VectorAdd_84_ObservableCollection;
                xamlType = userType;
                break;

            case 85:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Data.SortComparer>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_85_Collection;
                userType.CollectionAdd = VectorAdd_85_Collection;
                xamlType = userType;
                break;

            case 86:   //  Syncfusion.UI.Xaml.Data.SortComparer
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_86_SortComparer;
                userType.AddMemberName("PropertyName");
                userType.AddMemberName("Comparer");
                xamlType = userType;
                break;

            case 87:   //  System.Collections.Generic.IComparer`1<Object>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 88:   //  Syncfusion.UI.Xaml.DataGrid.GroupColumnDescriptions
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription>"));
                userType.CollectionAdd = VectorAdd_88_GroupColumnDescriptions;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 89:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription>"));
                userType.Activator = Activate_89_ObservableCollection;
                userType.CollectionAdd = VectorAdd_89_ObservableCollection;
                xamlType = userType;
                break;

            case 90:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_90_Collection;
                userType.CollectionAdd = VectorAdd_90_Collection;
                xamlType = userType;
                break;

            case 91:   //  Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_91_GroupColumnDescription;
                userType.AddMemberName("ColumnName");
                userType.AddMemberName("KeySelector");
                userType.AddMemberName("Comparer");
                userType.AddMemberName("SortGroupRecords");
                xamlType = userType;
                break;

            case 92:   //  System.Func`3<String, Object, Object>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.MulticastDelegate"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 93:   //  System.MulticastDelegate
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Delegate"));
                xamlType = userType;
                break;

            case 94:   //  System.Delegate
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 95:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.DataGrid.GridSummaryRow>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.DataGrid.GridSummaryRow>"));
                userType.CollectionAdd = VectorAdd_95_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 96:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.DataGrid.GridSummaryRow>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_96_Collection;
                userType.CollectionAdd = VectorAdd_96_Collection;
                xamlType = userType;
                break;

            case 97:   //  Syncfusion.UI.Xaml.DataGrid.GridSummaryRow
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_97_GridSummaryRow;
                userType.AddMemberName("Name");
                userType.AddMemberName("ShowSummaryInRow");
                userType.AddMemberName("CalculationUnit");
                userType.AddMemberName("SummaryColumns");
                userType.AddMemberName("Title");
                userType.AddMemberName("TitleTemplate");
                userType.AddMemberName("TitleTemplateSelector");
                userType.AddMemberName("TitleColumnCount");
                xamlType = userType;
                break;

            case 98:   //  Syncfusion.UI.Xaml.Data.SummaryCalculationUnit
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("AllRows", global::Syncfusion.UI.Xaml.Data.SummaryCalculationUnit.AllRows);
                userType.AddEnumValue("SelectedRows", global::Syncfusion.UI.Xaml.Data.SummaryCalculationUnit.SelectedRows);
                userType.AddEnumValue("Mixed", global::Syncfusion.UI.Xaml.Data.SummaryCalculationUnit.Mixed);
                xamlType = userType;
                break;

            case 99:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Data.ISummaryColumn>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Data.ISummaryColumn>"));
                userType.CollectionAdd = VectorAdd_99_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 100:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Data.ISummaryColumn>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_100_Collection;
                userType.CollectionAdd = VectorAdd_100_Collection;
                xamlType = userType;
                break;

            case 101:   //  Syncfusion.UI.Xaml.Data.ISummaryColumn
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.AddMemberName("CustomAggregate");
                userType.AddMemberName("Format");
                userType.AddMemberName("MappingName");
                userType.AddMemberName("Name");
                userType.AddMemberName("SummaryType");
                xamlType = userType;
                break;

            case 102:   //  Syncfusion.UI.Xaml.Data.ISummaryAggregate
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 103:   //  Syncfusion.UI.Xaml.Data.SummaryType
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("CountAggregate", global::Syncfusion.UI.Xaml.Data.SummaryType.CountAggregate);
                userType.AddEnumValue("DoubleAggregate", global::Syncfusion.UI.Xaml.Data.SummaryType.DoubleAggregate);
                userType.AddEnumValue("Int32Aggregate", global::Syncfusion.UI.Xaml.Data.SummaryType.Int32Aggregate);
                userType.AddEnumValue("Custom", global::Syncfusion.UI.Xaml.Data.SummaryType.Custom);
                xamlType = userType;
                break;

            case 104:   //  Syncfusion.UI.Xaml.DataGrid.UnboundRows
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.DataGrid.GridUnboundRow>"));
                userType.CollectionAdd = VectorAdd_104_UnboundRows;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 105:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.DataGrid.GridUnboundRow>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.DataGrid.GridUnboundRow>"));
                userType.Activator = Activate_105_ObservableCollection;
                userType.CollectionAdd = VectorAdd_105_ObservableCollection;
                xamlType = userType;
                break;

            case 106:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.DataGrid.GridUnboundRow>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_106_Collection;
                userType.CollectionAdd = VectorAdd_106_Collection;
                xamlType = userType;
                break;

            case 107:   //  Syncfusion.UI.Xaml.DataGrid.GridUnboundRow
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_107_GridUnboundRow;
                userType.AddMemberName("RowIndex");
                userType.AddMemberName("UnboundRowIndex");
                userType.AddMemberName("ShowBelowSummary");
                userType.AddMemberName("Position");
                xamlType = userType;
                break;

            case 108:   //  Syncfusion.UI.Xaml.Grids.UnboundRowsPosition
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Grids.UnboundRowsPosition.None);
                userType.AddEnumValue("Top", global::Syncfusion.UI.Xaml.Grids.UnboundRowsPosition.Top);
                userType.AddEnumValue("Bottom", global::Syncfusion.UI.Xaml.Grids.UnboundRowsPosition.Bottom);
                xamlType = userType;
                break;

            case 109:   //  Syncfusion.UI.Xaml.DataGrid.IDataGridClipboardController
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 110:   //  Syncfusion.UI.Xaml.Data.NewItemPlaceholderPosition
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Data.NewItemPlaceholderPosition.None);
                userType.AddEnumValue("AtBeginning", global::Syncfusion.UI.Xaml.Data.NewItemPlaceholderPosition.AtBeginning);
                userType.AddEnumValue("AtEnd", global::Syncfusion.UI.Xaml.Data.NewItemPlaceholderPosition.AtEnd);
                xamlType = userType;
                break;

            case 111:   //  Syncfusion.UI.Xaml.Data.LiveDataUpdateMode
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::Syncfusion.UI.Xaml.Data.LiveDataUpdateMode.Default);
                userType.AddEnumValue("AllowSummaryUpdate", global::Syncfusion.UI.Xaml.Data.LiveDataUpdateMode.AllowSummaryUpdate);
                userType.AddEnumValue("AllowDataShaping", global::Syncfusion.UI.Xaml.Data.LiveDataUpdateMode.AllowDataShaping);
                userType.AddEnumValue("AllowChildViewUpdate", global::Syncfusion.UI.Xaml.Data.LiveDataUpdateMode.AllowChildViewUpdate);
                xamlType = userType;
                break;

            case 112:   //  Syncfusion.UI.Xaml.Data.SummaryCalculationModes
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::Syncfusion.UI.Xaml.Data.SummaryCalculationModes.Default);
                userType.AddEnumValue("OnDemandCaptionSummary", global::Syncfusion.UI.Xaml.Data.SummaryCalculationModes.OnDemandCaptionSummary);
                userType.AddEnumValue("OnDemandGroupSummary", global::Syncfusion.UI.Xaml.Data.SummaryCalculationModes.OnDemandGroupSummary);
                xamlType = userType;
                break;

            case 113:   //  Syncfusion.UI.Xaml.DataGrid.FilterRowPosition
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.DataGrid.FilterRowPosition.None);
                userType.AddEnumValue("Top", global::Syncfusion.UI.Xaml.DataGrid.FilterRowPosition.Top);
                userType.AddEnumValue("FixedTop", global::Syncfusion.UI.Xaml.DataGrid.FilterRowPosition.FixedTop);
                userType.AddEnumValue("Bottom", global::Syncfusion.UI.Xaml.DataGrid.FilterRowPosition.Bottom);
                xamlType = userType;
                break;

            case 114:   //  Syncfusion.UI.Xaml.DataGrid.DetailsViewDefinition
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.DataGrid.ViewDefinition>"));
                userType.CollectionAdd = VectorAdd_114_DetailsViewDefinition;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 115:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.DataGrid.ViewDefinition>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.DataGrid.ViewDefinition>"));
                userType.Activator = Activate_115_ObservableCollection;
                userType.CollectionAdd = VectorAdd_115_ObservableCollection;
                xamlType = userType;
                break;

            case 116:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.DataGrid.ViewDefinition>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_116_Collection;
                userType.CollectionAdd = VectorAdd_116_Collection;
                xamlType = userType;
                break;

            case 117:   //  Syncfusion.UI.Xaml.DataGrid.ViewDefinition
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.AddMemberName("RelationalColumn");
                xamlType = userType;
                break;

            case 118:   //  Microsoft.UI.Xaml.Controls.MenuFlyout
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 119:   //  Syncfusion.UI.Xaml.DataGrid.AddNewRowPosition
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.DataGrid.AddNewRowPosition.None);
                userType.AddEnumValue("Top", global::Syncfusion.UI.Xaml.DataGrid.AddNewRowPosition.Top);
                userType.AddEnumValue("FixedTop", global::Syncfusion.UI.Xaml.DataGrid.AddNewRowPosition.FixedTop);
                userType.AddEnumValue("Bottom", global::Syncfusion.UI.Xaml.DataGrid.AddNewRowPosition.Bottom);
                xamlType = userType;
                break;

            case 120:   //  Syncfusion.UI.Xaml.DataGrid.Print.DataGridPrintSettings
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Core.NotificationObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 121:   //  Syncfusion.UI.Xaml.Core.NotificationObject
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 122:   //  Syncfusion.UI.Xaml.Grids.GridSelectionUnit
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Row", global::Syncfusion.UI.Xaml.Grids.GridSelectionUnit.Row);
                userType.AddEnumValue("Cell", global::Syncfusion.UI.Xaml.Grids.GridSelectionUnit.Cell);
                userType.AddEnumValue("Any", global::Syncfusion.UI.Xaml.Grids.GridSelectionUnit.Any);
                xamlType = userType;
                break;

            case 123:   //  Syncfusion.UI.Xaml.DataGrid.GridCellInfo
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 124:   //  Syncfusion.UI.Xaml.DataGrid.IDetailsViewNotifyListener
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 125:   //  Syncfusion.UI.Xaml.Grids.StackedHeaderRows
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Grids.StackedHeaderRow>"));
                userType.CollectionAdd = VectorAdd_125_StackedHeaderRows;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 126:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Grids.StackedHeaderRow>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Grids.StackedHeaderRow>"));
                userType.Activator = Activate_126_ObservableCollection;
                userType.CollectionAdd = VectorAdd_126_ObservableCollection;
                xamlType = userType;
                break;

            case 127:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Grids.StackedHeaderRow>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_127_Collection;
                userType.CollectionAdd = VectorAdd_127_Collection;
                xamlType = userType;
                break;

            case 128:   //  Syncfusion.UI.Xaml.Grids.StackedHeaderRow
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_128_StackedHeaderRow;
                userType.AddMemberName("Name");
                userType.AddMemberName("StackedColumns");
                xamlType = userType;
                break;

            case 129:   //  Syncfusion.UI.Xaml.Grids.StackedColumns
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Grids.StackedColumn>"));
                userType.CollectionAdd = VectorAdd_129_StackedColumns;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 130:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Grids.StackedColumn>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Grids.StackedColumn>"));
                userType.Activator = Activate_130_ObservableCollection;
                userType.CollectionAdd = VectorAdd_130_ObservableCollection;
                xamlType = userType;
                break;

            case 131:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Grids.StackedColumn>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_131_Collection;
                userType.CollectionAdd = VectorAdd_131_Collection;
                xamlType = userType;
                break;

            case 132:   //  Syncfusion.UI.Xaml.Grids.StackedColumn
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_132_StackedColumn;
                userType.AddMemberName("ChildColumns");
                userType.AddMemberName("HeaderText");
                userType.AddMemberName("MappingName");
                xamlType = userType;
                break;

            case 133:   //  Syncfusion.UI.Xaml.Grids.GridSelectionMode
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Grids.GridSelectionMode.None);
                userType.AddEnumValue("Single", global::Syncfusion.UI.Xaml.Grids.GridSelectionMode.Single);
                userType.AddEnumValue("Multiple", global::Syncfusion.UI.Xaml.Grids.GridSelectionMode.Multiple);
                userType.AddEnumValue("Extended", global::Syncfusion.UI.Xaml.Grids.GridSelectionMode.Extended);
                xamlType = userType;
                break;

            case 134:   //  Syncfusion.UI.Xaml.Grids.NavigationMode
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Cell", global::Syncfusion.UI.Xaml.Grids.NavigationMode.Cell);
                userType.AddEnumValue("Row", global::Syncfusion.UI.Xaml.Grids.NavigationMode.Row);
                xamlType = userType;
                break;

            case 135:   //  Syncfusion.UI.Xaml.Grids.EditorSelectionBehavior
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("SelectAll", global::Syncfusion.UI.Xaml.Grids.EditorSelectionBehavior.SelectAll);
                userType.AddEnumValue("MoveLast", global::Syncfusion.UI.Xaml.Grids.EditorSelectionBehavior.MoveLast);
                xamlType = userType;
                break;

            case 136:   //  Syncfusion.UI.Xaml.Grids.EditTrigger
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("OnTap", global::Syncfusion.UI.Xaml.Grids.EditTrigger.OnTap);
                userType.AddEnumValue("OnDoubleTap", global::Syncfusion.UI.Xaml.Grids.EditTrigger.OnDoubleTap);
                xamlType = userType;
                break;

            case 137:   //  Syncfusion.UI.Xaml.Grids.GridLinesVisibility
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Both", global::Syncfusion.UI.Xaml.Grids.GridLinesVisibility.Both);
                userType.AddEnumValue("Horizontal", global::Syncfusion.UI.Xaml.Grids.GridLinesVisibility.Horizontal);
                userType.AddEnumValue("Vertical", global::Syncfusion.UI.Xaml.Grids.GridLinesVisibility.Vertical);
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Grids.GridLinesVisibility.None);
                xamlType = userType;
                break;

            case 138:   //  Syncfusion.UI.Xaml.Grids.AutoGenerateColumnsModeForCustomType
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Child", global::Syncfusion.UI.Xaml.Grids.AutoGenerateColumnsModeForCustomType.Child);
                userType.AddEnumValue("Parent", global::Syncfusion.UI.Xaml.Grids.AutoGenerateColumnsModeForCustomType.Parent);
                userType.AddEnumValue("Both", global::Syncfusion.UI.Xaml.Grids.AutoGenerateColumnsModeForCustomType.Both);
                xamlType = userType;
                break;

            case 139:   //  Syncfusion.UI.Xaml.Grids.AutoGenerateColumnsMode
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Reset", global::Syncfusion.UI.Xaml.Grids.AutoGenerateColumnsMode.Reset);
                userType.AddEnumValue("RetainOld", global::Syncfusion.UI.Xaml.Grids.AutoGenerateColumnsMode.RetainOld);
                userType.AddEnumValue("ResetAll", global::Syncfusion.UI.Xaml.Grids.AutoGenerateColumnsMode.ResetAll);
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Grids.AutoGenerateColumnsMode.None);
                userType.AddEnumValue("SmartReset", global::Syncfusion.UI.Xaml.Grids.AutoGenerateColumnsMode.SmartReset);
                xamlType = userType;
                break;

            case 140:   //  Syncfusion.UI.Xaml.Grids.SortClickAction
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("SingleClick", global::Syncfusion.UI.Xaml.Grids.SortClickAction.SingleClick);
                userType.AddEnumValue("DoubleClick", global::Syncfusion.UI.Xaml.Grids.SortClickAction.DoubleClick);
                xamlType = userType;
                break;

            case 141:   //  System.Collections.ObjectModel.ObservableCollection`1<Object>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Object>"));
                userType.CollectionAdd = VectorAdd_141_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 142:   //  System.Collections.ObjectModel.Collection`1<Object>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_142_Collection;
                userType.CollectionAdd = VectorAdd_142_Collection;
                xamlType = userType;
                break;

            case 143:   //  Syncfusion.UI.Xaml.Grids.SortColumnDescriptions
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Grids.SortColumnDescription>"));
                userType.CollectionAdd = VectorAdd_143_SortColumnDescriptions;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 144:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Grids.SortColumnDescription>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Grids.SortColumnDescription>"));
                userType.Activator = Activate_144_ObservableCollection;
                userType.CollectionAdd = VectorAdd_144_ObservableCollection;
                xamlType = userType;
                break;

            case 145:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Grids.SortColumnDescription>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_145_Collection;
                userType.CollectionAdd = VectorAdd_145_Collection;
                xamlType = userType;
                break;

            case 146:   //  Syncfusion.UI.Xaml.Grids.SortColumnDescription
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_146_SortColumnDescription;
                userType.AddMemberName("ColumnName");
                userType.AddMemberName("SortDirection");
                xamlType = userType;
                break;

            case 147:   //  Syncfusion.UI.Xaml.Data.SortDirection
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Ascending", global::Syncfusion.UI.Xaml.Data.SortDirection.Ascending);
                userType.AddEnumValue("Descending", global::Syncfusion.UI.Xaml.Data.SortDirection.Descending);
                xamlType = userType;
                break;

            case 148:   //  Syncfusion.UI.Xaml.Grids.GridPasteOptions
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Grids.GridPasteOptions.None);
                userType.AddEnumValue("PasteData", global::Syncfusion.UI.Xaml.Grids.GridPasteOptions.PasteData);
                userType.AddEnumValue("ExcludeFirstLine", global::Syncfusion.UI.Xaml.Grids.GridPasteOptions.ExcludeFirstLine);
                userType.AddEnumValue("IncludeHiddenColumn", global::Syncfusion.UI.Xaml.Grids.GridPasteOptions.IncludeHiddenColumn);
                xamlType = userType;
                break;

            case 149:   //  Syncfusion.UI.Xaml.Grids.GridCopyOptions
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Grids.GridCopyOptions.None);
                userType.AddEnumValue("CopyData", global::Syncfusion.UI.Xaml.Grids.GridCopyOptions.CopyData);
                userType.AddEnumValue("CutData", global::Syncfusion.UI.Xaml.Grids.GridCopyOptions.CutData);
                userType.AddEnumValue("IncludeFormat", global::Syncfusion.UI.Xaml.Grids.GridCopyOptions.IncludeFormat);
                userType.AddEnumValue("IncludeHeaders", global::Syncfusion.UI.Xaml.Grids.GridCopyOptions.IncludeHeaders);
                userType.AddEnumValue("IncludeHiddenColumn", global::Syncfusion.UI.Xaml.Grids.GridCopyOptions.IncludeHiddenColumn);
                xamlType = userType;
                break;

            case 150:   //  Syncfusion.UI.Xaml.DataGrid.GridTextColumn
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridTextColumnBase"));
                userType.Activator = Activate_150_GridTextColumn;
                userType.AddMemberName("IsSpellCheckEnabled");
                xamlType = userType;
                break;

            case 151:   //  Syncfusion.UI.Xaml.DataGrid.GridTextColumnBase
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn"));
                userType.AddMemberName("TextTrimming");
                userType.AddMemberName("TextWrapping");
                xamlType = userType;
                break;

            case 152:   //  Microsoft.UI.Xaml.TextTrimming
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 153:   //  Microsoft.UI.Xaml.TextWrapping
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 154:   //  InXone.WinUI.Controls.Assets.AssetDataElementGridControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_154_AssetDataElementGridControl;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 155:   //  InXone.WinUI.Controls.ViewModels.AssetViewerViewModel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Toolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 156:   //  Microsoft.UI.Xaml.Controls.ItemsRepeater
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement"));
                userType.Activator = Activate_156_ItemsRepeater;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemTemplate");
                userType.AddMemberName("ItemTemplate");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("Background");
                userType.AddMemberName("HorizontalCacheLength");
                userType.AddMemberName("ItemsSourceView");
                userType.AddMemberName("Layout");
                userType.AddMemberName("VerticalCacheLength");
                xamlType = userType;
                break;

            case 157:   //  Microsoft.UI.Xaml.Controls.ItemsSourceView
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 158:   //  Microsoft.UI.Xaml.Controls.Layout
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 159:   //  InXone.WinUI.Controls.Assets.AssetSidePanelControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_159_AssetSidePanelControl;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 160:   //  InXone.WinUI.Controls.ViewModels.AssetSidePanelViewModel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Toolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 161:   //  InXone.WinUI.Controls.Assets.AssetUseCaseGridControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_161_AssetUseCaseGridControl;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 162:   //  Microsoft.UI.Xaml.Controls.TabView
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_162_TabView;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.TabView.TabItems");
                userType.AddMemberName("TabItems");
                userType.AddMemberName("IsAddTabButtonVisible");
                userType.AddMemberName("AddTabButtonCommand");
                userType.AddMemberName("AddTabButtonCommandParameter");
                userType.AddMemberName("AllowDropTabs");
                userType.AddMemberName("CanDragTabs");
                userType.AddMemberName("CanReorderTabs");
                userType.AddMemberName("CloseButtonOverlayMode");
                userType.AddMemberName("SelectedIndex");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("TabItemTemplate");
                userType.AddMemberName("TabItemTemplateSelector");
                userType.AddMemberName("TabItemsSource");
                userType.AddMemberName("TabStripFooter");
                userType.AddMemberName("TabStripFooterTemplate");
                userType.AddMemberName("TabStripHeader");
                userType.AddMemberName("TabStripHeaderTemplate");
                userType.AddMemberName("TabWidthMode");
                xamlType = userType;
                break;

            case 163:   //  System.Collections.Generic.IList`1<Object>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_163_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 164:   //  System.Windows.Input.ICommand
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 165:   //  Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode.Auto);
                userType.AddEnumValue("OnPointerOver", global::Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode.OnPointerOver);
                userType.AddEnumValue("Always", global::Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode.Always);
                xamlType = userType;
                break;

            case 166:   //  Microsoft.UI.Xaml.Controls.TabViewWidthMode
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Equal", global::Microsoft.UI.Xaml.Controls.TabViewWidthMode.Equal);
                userType.AddEnumValue("SizeToContent", global::Microsoft.UI.Xaml.Controls.TabViewWidthMode.SizeToContent);
                userType.AddEnumValue("Compact", global::Microsoft.UI.Xaml.Controls.TabViewWidthMode.Compact);
                xamlType = userType;
                break;

            case 167:   //  Microsoft.UI.Xaml.Controls.TabViewItem
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ListViewItem"));
                userType.Activator = Activate_167_TabViewItem;
                userType.AddMemberName("Header");
                userType.AddMemberName("IconSource");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("IsClosable");
                userType.AddMemberName("TabViewTemplateSettings");
                xamlType = userType;
                break;

            case 168:   //  Microsoft.UI.Xaml.Controls.ListViewItem
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 169:   //  Microsoft.UI.Xaml.Controls.IconSource
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 170:   //  Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 171:   //  InXone.WinUI.Controls.Projects.ProjectFileEditorControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_171_ProjectFileEditorControl;
                userType.AddMemberName("ViewModel");
                userType.AddMemberName("FileNameTextBlock");
                userType.AddMemberName("AssetViewerCommandEvent");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 172:   //  InXone.WinUI.Controls.ViewModels.ProjectViewerViewModel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("InXone.Helpers.ObservableObject"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 173:   //  Microsoft.UI.Xaml.Controls.TextBlock
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 174:   //  InXone.WinUI.Controls.Common.NotificationEvent
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.MulticastDelegate"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 175:   //  InXone.WinUI.Controls.Assets.AssetViewerControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_175_AssetViewerControl;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 176:   //  InXone.WinUI.Controls.Entities.EntityFollowUpGridControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_176_EntityFollowUpGridControl;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 177:   //  InXone.Uwp.ViewModels.EntityFollowUpViewModel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("InXone.UI.DataModel.Entities.EntityFollowUpViewModel"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 178:   //  InXone.UI.DataModel.Entities.EntityFollowUpViewModel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("InXone.Helpers.ObservableObject"));
                userType.Activator = Activate_178_EntityFollowUpViewModel;
                xamlType = userType;
                break;

            case 179:   //  Microsoft.UI.Xaml.Controls.NavigationView
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_179_NavigationView;
                userType.AddMemberName("IsBackButtonVisible");
                userType.AddMemberName("IsSettingsVisible");
                userType.AddMemberName("PaneDisplayMode");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("SelectionFollowsFocus");
                userType.AddMemberName("MenuItems");
                userType.AddMemberName("AlwaysShowHeader");
                userType.AddMemberName("AutoSuggestBox");
                userType.AddMemberName("CompactModeThresholdWidth");
                userType.AddMemberName("CompactPaneLength");
                userType.AddMemberName("ContentOverlay");
                userType.AddMemberName("DisplayMode");
                userType.AddMemberName("ExpandedModeThresholdWidth");
                userType.AddMemberName("FooterMenuItems");
                userType.AddMemberName("FooterMenuItemsSource");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("IsBackEnabled");
                userType.AddMemberName("IsPaneOpen");
                userType.AddMemberName("IsPaneToggleButtonVisible");
                userType.AddMemberName("IsPaneVisible");
                userType.AddMemberName("IsTitleBarAutoPaddingEnabled");
                userType.AddMemberName("MenuItemContainerStyle");
                userType.AddMemberName("MenuItemContainerStyleSelector");
                userType.AddMemberName("MenuItemTemplate");
                userType.AddMemberName("MenuItemTemplateSelector");
                userType.AddMemberName("MenuItemsSource");
                userType.AddMemberName("OpenPaneLength");
                userType.AddMemberName("OverflowLabelMode");
                userType.AddMemberName("PaneCustomContent");
                userType.AddMemberName("PaneFooter");
                userType.AddMemberName("PaneHeader");
                userType.AddMemberName("PaneTitle");
                userType.AddMemberName("PaneToggleButtonStyle");
                userType.AddMemberName("SettingsItem");
                userType.AddMemberName("ShoulderNavigationEnabled");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 180:   //  Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Collapsed", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Collapsed);
                userType.AddEnumValue("Visible", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Visible);
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Auto);
                xamlType = userType;
                break;

            case 181:   //  Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Auto);
                userType.AddEnumValue("Left", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Left);
                userType.AddEnumValue("Top", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Top);
                userType.AddEnumValue("LeftCompact", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.LeftCompact);
                userType.AddEnumValue("LeftMinimal", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.LeftMinimal);
                xamlType = userType;
                break;

            case 182:   //  Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Disabled);
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Enabled);
                xamlType = userType;
                break;

            case 183:   //  Microsoft.UI.Xaml.Controls.AutoSuggestBox
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 184:   //  Microsoft.UI.Xaml.UIElement
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 185:   //  Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Minimal", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Minimal);
                userType.AddEnumValue("Compact", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Compact);
                userType.AddEnumValue("Expanded", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Expanded);
                xamlType = userType;
                break;

            case 186:   //  Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("MoreLabel", global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode.MoreLabel);
                userType.AddEnumValue("NoLabel", global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode.NoLabel);
                xamlType = userType;
                break;

            case 187:   //  Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("WhenSelectionFollowsFocus", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.WhenSelectionFollowsFocus);
                userType.AddEnumValue("Always", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Always);
                userType.AddEnumValue("Never", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Never);
                xamlType = userType;
                break;

            case 188:   //  Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 189:   //  InXone.WinUI.Controls.Notes.NotesViewEditControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_189_NotesViewEditControl;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 190:   //  InXone.UI.DataModel.Notes.NoteViewModel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("InXone.Helpers.ObservableObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 191:   //  InXone.WinUI.Controls.Entities.PersonBaseEditorControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_191_PersonBaseEditorControl;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 192:   //  InXone.UI.DataModel.Entities.PersonViewModel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("InXone.Helpers.ObservableObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 193:   //  InXone.WinUI.Controls.ReferenceLists.ReferenceListGroupEditControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_193_ReferenceListGroupEditControl;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 194:   //  InXone.UI.DataModel.References.ReferenceListGroupViewModel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("InXone.Helpers.ObservableObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 195:   //  Microsoft.UI.Xaml.Controls.NavigationViewItem
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase"));
                userType.Activator = Activate_195_NavigationViewItem;
                userType.AddMemberName("Icon");
                userType.AddMemberName("CompactPaneLength");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("IsChildSelected");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("MenuItems");
                userType.AddMemberName("MenuItemsSource");
                userType.AddMemberName("SelectsOnInvoked");
                xamlType = userType;
                break;

            case 196:   //  Microsoft.UI.Xaml.Controls.NavigationViewItemBase
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.AddMemberName("IsSelected");
                xamlType = userType;
                break;

            case 197:   //  Microsoft.UI.Xaml.Controls.IconElement
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 198:   //  InXone.WinUI.Controls.Entities.EntityFollowUpViewControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_198_EntityFollowUpViewControl;
                userType.AddMemberName("ParentMenu");
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 199:   //  InXone.WinUI.Controls.Home.DashboardControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_199_DashboardControl;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 200:   //  InXone.WinUI.Common.MenuItemTemplateSelector
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.DataTemplateSelector"));
                userType.Activator = Activate_200_MenuItemTemplateSelector;
                userType.SetContentPropertyName("InXone.WinUI.Common.MenuItemTemplateSelector.ItemTemplate");
                userType.AddMemberName("ItemTemplate");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 201:   //  InXone.WinUI.Controls.Navigation.NavigationControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_201_NavigationControl;
                userType.AddMemberName("ViewModel");
                userType.AddMemberName("MenuIsVisible");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 202:   //  InXone.Uwp.ViewModels.NavigationViewModel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("InXone.Helpers.ObservableObject"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 203:   //  InXone.WinUI.Controls.Common.FolderFileIconConverter
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_203_FolderFileIconConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 204:   //  Microsoft.UI.Xaml.Controls.TreeView
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_204_TreeView;
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("SelectionMode");
                userType.AddMemberName("ItemTemplate");
                userType.AddMemberName("CanDragItems");
                userType.AddMemberName("CanReorderItems");
                userType.AddMemberName("ItemContainerStyle");
                userType.AddMemberName("ItemContainerStyleSelector");
                userType.AddMemberName("ItemContainerTransitions");
                userType.AddMemberName("ItemTemplateSelector");
                userType.AddMemberName("RootNodes");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("SelectedItems");
                userType.AddMemberName("SelectedNode");
                userType.AddMemberName("SelectedNodes");
                xamlType = userType;
                break;

            case 205:   //  Microsoft.UI.Xaml.Controls.TreeViewSelectionMode
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Controls.TreeViewSelectionMode.None);
                userType.AddEnumValue("Single", global::Microsoft.UI.Xaml.Controls.TreeViewSelectionMode.Single);
                userType.AddEnumValue("Multiple", global::Microsoft.UI.Xaml.Controls.TreeViewSelectionMode.Multiple);
                xamlType = userType;
                break;

            case 206:   //  Microsoft.UI.Xaml.Media.Animation.TransitionCollection
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 207:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_207_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 208:   //  Microsoft.UI.Xaml.Controls.TreeViewNode
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_208_TreeViewNode;
                userType.AddMemberName("Children");
                userType.AddMemberName("Content");
                userType.AddMemberName("Depth");
                userType.AddMemberName("HasChildren");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("Parent");
                xamlType = userType;
                break;

            case 209:   //  Microsoft.UI.Xaml.Controls.TreeViewItem
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ListViewItem"));
                userType.Activator = Activate_209_TreeViewItem;
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("CollapsedGlyph");
                userType.AddMemberName("ExpandedGlyph");
                userType.AddMemberName("GlyphBrush");
                userType.AddMemberName("GlyphOpacity");
                userType.AddMemberName("GlyphSize");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("TreeViewItemTemplateSettings");
                xamlType = userType;
                break;

            case 210:   //  Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 211:   //  InXone.WinUI.Controls.Projects.ProjectSidePanelControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_211_ProjectSidePanelControl;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 212:   //  CommunityToolkit.WinUI.UI.Controls.GridSplitter
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_212_GridSplitter;
                userType.AddMemberName("GripperCursor");
                userType.AddMemberName("ResizeBehavior");
                userType.AddMemberName("ResizeDirection");
                userType.AddMemberName("Element");
                userType.AddMemberName("GripperForeground");
                userType.AddMemberName("ParentLevel");
                userType.AddMemberName("GripperCustomCursorResource");
                userType.AddMemberName("CursorBehavior");
                xamlType = userType;
                break;

            case 213:   //  CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperCursorType
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperCursorType.Default);
                userType.AddEnumValue("Arrow", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperCursorType.Arrow);
                userType.AddEnumValue("Cross", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperCursorType.Cross);
                userType.AddEnumValue("Custom", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperCursorType.Custom);
                userType.AddEnumValue("Hand", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperCursorType.Hand);
                userType.AddEnumValue("Help", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperCursorType.Help);
                userType.AddEnumValue("IBeam", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperCursorType.IBeam);
                userType.AddEnumValue("SizeAll", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperCursorType.SizeAll);
                userType.AddEnumValue("SizeNortheastSouthwest", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperCursorType.SizeNortheastSouthwest);
                userType.AddEnumValue("SizeNorthSouth", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperCursorType.SizeNorthSouth);
                userType.AddEnumValue("SizeNorthwestSoutheast", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperCursorType.SizeNorthwestSoutheast);
                userType.AddEnumValue("SizeWestEast", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperCursorType.SizeWestEast);
                userType.AddEnumValue("UniversalNo", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperCursorType.UniversalNo);
                userType.AddEnumValue("UpArrow", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperCursorType.UpArrow);
                userType.AddEnumValue("Wait", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperCursorType.Wait);
                xamlType = userType;
                break;

            case 214:   //  CommunityToolkit.WinUI.UI.Controls.GridSplitter.GridResizeBehavior
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("BasedOnAlignment", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GridResizeBehavior.BasedOnAlignment);
                userType.AddEnumValue("CurrentAndNext", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GridResizeBehavior.CurrentAndNext);
                userType.AddEnumValue("PreviousAndCurrent", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GridResizeBehavior.PreviousAndCurrent);
                userType.AddEnumValue("PreviousAndNext", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GridResizeBehavior.PreviousAndNext);
                xamlType = userType;
                break;

            case 215:   //  CommunityToolkit.WinUI.UI.Controls.GridSplitter.GridResizeDirection
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Auto", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GridResizeDirection.Auto);
                userType.AddEnumValue("Columns", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GridResizeDirection.Columns);
                userType.AddEnumValue("Rows", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GridResizeDirection.Rows);
                xamlType = userType;
                break;

            case 216:   //  CommunityToolkit.WinUI.UI.Controls.GridSplitter.SplitterCursorBehavior
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("ChangeOnSplitterHover", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.SplitterCursorBehavior.ChangeOnSplitterHover);
                userType.AddEnumValue("ChangeOnGripperHover", global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.SplitterCursorBehavior.ChangeOnGripperHover);
                xamlType = userType;
                break;

            case 217:   //  InXone.WinUI.Controls.Projects.ProjectViewerControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_217_ProjectViewerControl;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 218:   //  Microsoft.UI.Xaml.Controls.NavigationViewItemSeparator
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase"));
                userType.Activator = Activate_218_NavigationViewItemSeparator;
                xamlType = userType;
                break;

            case 219:   //  InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataFormControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_219_ReferenceDataFormControl;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 220:   //  InXone.WinUI.Controls.ViewModels.ReferenceDataFormViewModel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("InXone.UI.DataModel.Models.ElementComponentViewModel"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 221:   //  InXone.UI.DataModel.Models.ElementComponentViewModel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("InXone.Helpers.ObservableObject"));
                xamlType = userType;
                break;

            case 222:   //  InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataFormStackControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_222_ReferenceDataFormStackControl;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 223:   //  InXone.WinUI.Controls.ViewModels.ReferenceDataFormStackViewModel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("InXone.UI.DataModel.Models.ElementComponentViewModel"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 224:   //  InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataGridControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_224_ReferenceDataGridControl;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 225:   //  InXone.WinUI.Controls.ViewModels.ReferenceDataGridViewModel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("InXone.Helpers.ObservableObject"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 226:   //  InXone.WinUI.Controls.ReferenceData.ReferenceDataEditorControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_226_ReferenceDataEditorControl;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 227:   //  InXone.Uwp.ViewModels.ReferenceDataEditorViewModel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("InXone.UI.DataModel.Models.ElementComponentViewModel"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 228:   //  InXone.WinUI.Controls.ReferenceData.ReferenceDataValidationContentDialog
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentDialog"));
                userType.Activator = Activate_228_ReferenceDataValidationContentDialog;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 229:   //  Microsoft.UI.Xaml.Controls.ContentDialog
                xamlType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 230:   //  InXone.WinUI.Controls.ViewModels.ReferenceDataValidationViewModel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("InXone.Helpers.ObservableObject"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 231:   //  InXone.WinUI.Controls.ReferenceLists.ReferenceListViewControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_231_ReferenceListViewControl;
                userType.AddMemberName("ViewModel");
                userType.AddMemberName("ParentMenu");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 232:   //  InXone.Uwp.ViewModels.ReferenceListViewModel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("InXone.Helpers.ObservableObject"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 233:   //  InXone.WinUI.Controls.Utilities.TextButtonControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_233_TextButtonControl;
                userType.AddMemberName("Texto");
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 234:   //  InXone.Uwp.ViewModels.TextButtonViewModel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("InXone.Helpers.ObservableObject"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 235:   //  InXone.WinUI.Controls.Utilities.TextEditorControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_235_TextEditorControl;
                userType.AddMemberName("Texto");
                userType.AddMemberName("m_ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 236:   //  InXone.WinUI.Controls.ViewModels.TextEditorViewModel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("InXone.Helpers.ObservableObject"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 237:   //  Microsoft.UI.Xaml.Controls.WebView2
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement"));
                userType.Activator = Activate_237_WebView2;
                userType.AddMemberName("Source");
                userType.AddMemberName("CanGoBack");
                userType.AddMemberName("CanGoForward");
                userType.AddMemberName("CoreWebView2");
                userType.AddMemberName("DefaultBackgroundColor");
                xamlType = userType;
                break;

            case 238:   //  System.Uri
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 239:   //  Microsoft.Web.WebView2.Core.CoreWebView2
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 240:   //  Windows.UI.Color
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 241:   //  InXone.WinUI.Controls.Web.WebBrowserControl
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_241_WebBrowserControl;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 242:   //  InXone.Uwp.ViewModels.WebBrowserViewModel
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("InXone.Helpers.ObservableObject"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 243:   //  Syncfusion.UI.Xaml.Core.DoubleToObjectConverter
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_243_DoubleToObjectConverter;
                userType.AddMemberName("TrueValue");
                userType.AddMemberName("FalseValue");
                userType.AddMemberName("NullValue");
                userType.AddMemberName("GreaterThan");
                userType.AddMemberName("LessThan");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 244:   //  Syncfusion.UI.Xaml.Core.DoubleToVisibilityConverter
                userType = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter"));
                userType.Activator = Activate_244_DoubleToVisibilityConverter;
                userType.SetIsBindable();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::CommunityToolkit.WinUI.UI.Controls.CommunityToolkit_WinUI_UI_Controls_Core_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.UI.Controls.CommunityToolkit_WinUI_UI_Controls_DataGrid_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.UI.Controls.CommunityToolkit_WinUI_UI_Controls_Input_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.UI.Controls.CommunityToolkit_WinUI_UI_Controls_Layout_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.UI.Controls.CommunityToolkit_WinUI_UI_Controls_Markdown_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.UI.Controls.CommunityToolkit_WinUI_UI_Controls_Media_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Calendar.Syncfusion_Calendar_WinUI_Net50_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.Core.WinUI.Syncfusion_Core_WinUI_Net50_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.Editors.WinUI.Syncfusion_Editors_WinUI_Net50_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfGrid.WinUI.Syncfusion_SfGrid_WinUI_Net50_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_AboutControl_ParentMenu(object instance)
        {
            var that = (global::InXone.WinUI.Controls.AboutControl)instance;
            return that.ParentMenu;
        }
        private void set_0_AboutControl_ParentMenu(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Controls.AboutControl)instance;
            that.ParentMenu = (global::InXone.DataObjects.ViewModels.IMenuItemParent)Value;
        }
        private object get_1_AboutControl_Title(object instance)
        {
            var that = (global::InXone.WinUI.Controls.AboutControl)instance;
            return that.Title;
        }
        private void set_1_AboutControl_Title(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Controls.AboutControl)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_2_ProgressBar_IsIndeterminate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.IsIndeterminate;
        }
        private void set_2_ProgressBar_IsIndeterminate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            that.IsIndeterminate = (global::System.Boolean)Value;
        }
        private object get_3_ProgressBar_ShowError(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.ShowError;
        }
        private void set_3_ProgressBar_ShowError(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            that.ShowError = (global::System.Boolean)Value;
        }
        private object get_4_ProgressBar_ShowPaused(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.ShowPaused;
        }
        private void set_4_ProgressBar_ShowPaused(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            that.ShowPaused = (global::System.Boolean)Value;
        }
        private object get_5_ProgressBar_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.TemplateSettings;
        }
        private object get_6_AccountLoginControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Accounts.AccountLoginControl)instance;
            return that.ViewModel;
        }
        private object get_7_KeyPadControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Utilities.KeyPadControl)instance;
            return that.ViewModel;
        }
        private void set_7_KeyPadControl_ViewModel(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Controls.Utilities.KeyPadControl)instance;
            that.ViewModel = (global::InXone.Uwp.ViewModels.KeyPadViewModel)Value;
        }
        private object get_8_KeyPadControl_ParentMenu(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Utilities.KeyPadControl)instance;
            return that.ParentMenu;
        }
        private void set_8_KeyPadControl_ParentMenu(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Controls.Utilities.KeyPadControl)instance;
            that.ParentMenu = (global::InXone.DataObjects.ViewModels.IMenuItemParent)Value;
        }
        private object get_9_AccountPinLoginControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Accounts.AccountPinLoginControl)instance;
            return that.ViewModel;
        }
        private void set_9_AccountPinLoginControl_ViewModel(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Controls.Accounts.AccountPinLoginControl)instance;
            that.ViewModel = (global::InXone.Uwp.ViewModels.KeyPadViewModel)Value;
        }
        private object get_10_AccountPinLoginControl_ParentMenu(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Accounts.AccountPinLoginControl)instance;
            return that.ParentMenu;
        }
        private void set_10_AccountPinLoginControl_ParentMenu(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Controls.Accounts.AccountPinLoginControl)instance;
            that.ParentMenu = (global::InXone.DataObjects.ViewModels.IMenuItemParent)Value;
        }
        private object get_11_CustomRowStyleSelector_Parent(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Assets.CustomRowStyleSelector)instance;
            return that.Parent;
        }
        private void set_11_CustomRowStyleSelector_Parent(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Controls.Assets.CustomRowStyleSelector)instance;
            that.Parent = (global::Microsoft.UI.Xaml.Controls.UserControl)Value;
        }
        private object get_12_DataGridRowControl_SelectionBorderVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.DataGridRowControl)instance;
            return that.SelectionBorderVisibility;
        }
        private void set_12_DataGridRowControl_SelectionBorderVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.DataGridRowControl)instance;
            that.SelectionBorderVisibility = (global::Microsoft.UI.Xaml.Visibility)Value;
        }
        private object get_13_DataGridRowControl_HighlightSelectionBorderVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.DataGridRowControl)instance;
            return that.HighlightSelectionBorderVisibility;
        }
        private void set_13_DataGridRowControl_HighlightSelectionBorderVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.DataGridRowControl)instance;
            that.HighlightSelectionBorderVisibility = (global::Microsoft.UI.Xaml.Visibility)Value;
        }
        private object get_14_DataGridRowControl_SelectionForeground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.DataGridRowControl)instance;
            return that.SelectionForeground;
        }
        private void set_14_DataGridRowControl_SelectionForeground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.DataGridRowControl)instance;
            that.SelectionForeground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_15_DataGridRowControl_RowHoverForeground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.DataGridRowControl)instance;
            return that.RowHoverForeground;
        }
        private void set_15_DataGridRowControl_RowHoverForeground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.DataGridRowControl)instance;
            that.RowHoverForeground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_16_DataGridRowControl_RowBorderState(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.DataGridRowControl)instance;
            return that.RowBorderState;
        }
        private void set_16_DataGridRowControl_RowBorderState(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.DataGridRowControl)instance;
            that.RowBorderState = (global::System.String)Value;
        }
        private object get_17_DockPanel_LastChildFill(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DockPanel)instance;
            return that.LastChildFill;
        }
        private void set_17_DockPanel_LastChildFill(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DockPanel)instance;
            that.LastChildFill = (global::System.Boolean)Value;
        }
        private object get_18_DockPanel_Padding(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DockPanel)instance;
            return that.Padding;
        }
        private void set_18_DockPanel_Padding(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DockPanel)instance;
            that.Padding = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_19_DockPanel_Dock(object instance)
        {
            return global::CommunityToolkit.WinUI.UI.Controls.DockPanel.GetDock((global::Microsoft.UI.Xaml.FrameworkElement)instance);
        }
        private void set_19_DockPanel_Dock(object instance, object Value)
        {
            global::CommunityToolkit.WinUI.UI.Controls.DockPanel.SetDock((global::Microsoft.UI.Xaml.FrameworkElement)instance, (global::CommunityToolkit.WinUI.UI.Controls.Dock)Value);
        }
        private object get_20_SfGridBase_AllowResizingColumns(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.AllowResizingColumns;
        }
        private void set_20_SfGridBase_AllowResizingColumns(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.AllowResizingColumns = (global::System.Boolean)Value;
        }
        private object get_21_SfGridBase_AutoGenerateColumns(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.AutoGenerateColumns;
        }
        private void set_21_SfGridBase_AutoGenerateColumns(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.AutoGenerateColumns = (global::System.Boolean)Value;
        }
        private object get_22_SfDataGrid_ColumnWidthMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.ColumnWidthMode;
        }
        private void set_22_SfDataGrid_ColumnWidthMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.ColumnWidthMode = (global::Syncfusion.UI.Xaml.Grids.ColumnWidthMode)Value;
        }
        private object get_23_SfDataGrid_ItemsSource(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.ItemsSource;
        }
        private void set_23_SfDataGrid_ItemsSource(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_24_SfGridBase_SelectedItem(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.SelectedItem;
        }
        private void set_24_SfGridBase_SelectedItem(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_25_SfGridBase_AllowResizingHiddenColumns(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.AllowResizingHiddenColumns;
        }
        private void set_25_SfGridBase_AllowResizingHiddenColumns(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.AllowResizingHiddenColumns = (global::System.Boolean)Value;
        }
        private object get_26_SfGridBase_AllowSorting(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.AllowSorting;
        }
        private void set_26_SfGridBase_AllowSorting(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.AllowSorting = (global::System.Boolean)Value;
        }
        private object get_27_SfDataGrid_RowStyleSelector(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.RowStyleSelector;
        }
        private void set_27_SfDataGrid_RowStyleSelector(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.RowStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_28_SfDataGrid_AllowFiltering(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.AllowFiltering;
        }
        private void set_28_SfDataGrid_AllowFiltering(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.AllowFiltering = (global::System.Boolean)Value;
        }
        private object get_29_SfDataGrid_EnableDataVirtualization(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.EnableDataVirtualization;
        }
        private void set_29_SfDataGrid_EnableDataVirtualization(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.EnableDataVirtualization = (global::System.Boolean)Value;
        }
        private object get_30_SfDataGrid_Columns(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.Columns;
        }
        private void set_30_SfDataGrid_Columns(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.Columns = (global::Syncfusion.UI.Xaml.DataGrid.Columns)Value;
        }
        private object get_31_GridColumn_ColumnMemberType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.ColumnMemberType;
        }
        private void set_31_GridColumn_ColumnMemberType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            that.ColumnMemberType = (global::System.Type)Value;
        }
        private object get_32_GridColumn_FilterRowCellStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.FilterRowCellStyle;
        }
        private void set_32_GridColumn_FilterRowCellStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            that.FilterRowCellStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_33_GridColumn_UseBindingValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.UseBindingValue;
        }
        private void set_33_GridColumn_UseBindingValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            that.UseBindingValue = (global::System.Boolean)Value;
        }
        private object get_34_GridColumn_ColumnWidthMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.ColumnWidthMode;
        }
        private void set_34_GridColumn_ColumnWidthMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            that.ColumnWidthMode = (global::Syncfusion.UI.Xaml.Grids.ColumnWidthMode)Value;
        }
        private object get_35_GridColumn_AllowDragging(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.AllowDragging;
        }
        private void set_35_GridColumn_AllowDragging(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            that.AllowDragging = (global::System.Boolean)Value;
        }
        private object get_36_GridColumn_AllowGrouping(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.AllowGrouping;
        }
        private void set_36_GridColumn_AllowGrouping(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            that.AllowGrouping = (global::System.Boolean)Value;
        }
        private object get_37_GridColumn_AllowResizing(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.AllowResizing;
        }
        private void set_37_GridColumn_AllowResizing(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            that.AllowResizing = (global::System.Boolean)Value;
        }
        private object get_38_GridColumn_AllowFiltering(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.AllowFiltering;
        }
        private void set_38_GridColumn_AllowFiltering(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            that.AllowFiltering = (global::System.Boolean)Value;
        }
        private object get_39_GridColumn_ImmediateUpdateColumnFilter(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.ImmediateUpdateColumnFilter;
        }
        private void set_39_GridColumn_ImmediateUpdateColumnFilter(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            that.ImmediateUpdateColumnFilter = (global::System.Boolean)Value;
        }
        private object get_40_GridColumn_FilterRowOptionsVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.FilterRowOptionsVisibility;
        }
        private void set_40_GridColumn_FilterRowOptionsVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            that.FilterRowOptionsVisibility = (global::Microsoft.UI.Xaml.Visibility)Value;
        }
        private object get_41_GridColumn_FilterRowCondition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.FilterRowCondition;
        }
        private void set_41_GridColumn_FilterRowCondition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            that.FilterRowCondition = (global::Syncfusion.UI.Xaml.DataGrid.FilterRowCondition)Value;
        }
        private object get_42_GridColumn_FilterPopupStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.FilterPopupStyle;
        }
        private void set_42_GridColumn_FilterPopupStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            that.FilterPopupStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_43_GridColumn_FilterPopupTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.FilterPopupTemplate;
        }
        private void set_43_GridColumn_FilterPopupTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            that.FilterPopupTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_44_GridColumn_AllowBlankFilters(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.AllowBlankFilters;
        }
        private void set_44_GridColumn_AllowBlankFilters(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            that.AllowBlankFilters = (global::System.Boolean)Value;
        }
        private object get_45_GridColumn_FilterRowText(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.FilterRowText;
        }
        private object get_46_GridColumn_IsCaseSensitiveFilterRow(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.IsCaseSensitiveFilterRow;
        }
        private void set_46_GridColumn_IsCaseSensitiveFilterRow(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            that.IsCaseSensitiveFilterRow = (global::System.Boolean)Value;
        }
        private object get_47_GridColumn_GroupMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.GroupMode;
        }
        private void set_47_GridColumn_GroupMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            that.GroupMode = (global::Syncfusion.UI.Xaml.Data.DataReflectionMode)Value;
        }
        private object get_48_GridColumn_SortMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.SortMode;
        }
        private void set_48_GridColumn_SortMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            that.SortMode = (global::Syncfusion.UI.Xaml.Data.DataReflectionMode)Value;
        }
        private object get_49_GridColumn_CellType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.CellType;
        }
        private object get_50_GridColumn_FilteredFrom(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.FilteredFrom;
        }
        private void set_50_GridColumn_FilteredFrom(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            that.FilteredFrom = (global::Syncfusion.UI.Xaml.Grids.FilteredFrom)Value;
        }
        private object get_51_GridColumn_FilterPredicates(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.FilterPredicates;
        }
        private object get_52_FilterPredicate_FilterType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.FilterPredicate)instance;
            return that.FilterType;
        }
        private void set_52_FilterPredicate_FilterType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.FilterPredicate)instance;
            that.FilterType = (global::Syncfusion.UI.Xaml.Data.FilterType)Value;
        }
        private object get_53_FilterPredicate_FilterValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.FilterPredicate)instance;
            return that.FilterValue;
        }
        private void set_53_FilterPredicate_FilterValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.FilterPredicate)instance;
            that.FilterValue = (global::System.Object)Value;
        }
        private object get_54_FilterPredicate_PredicateType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.FilterPredicate)instance;
            return that.PredicateType;
        }
        private void set_54_FilterPredicate_PredicateType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.FilterPredicate)instance;
            that.PredicateType = (global::Syncfusion.UI.Xaml.Data.PredicateType)Value;
        }
        private object get_55_FilterPredicate_FilterBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.FilterPredicate)instance;
            return that.FilterBehavior;
        }
        private void set_55_FilterPredicate_FilterBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.FilterPredicate)instance;
            that.FilterBehavior = (global::Syncfusion.UI.Xaml.Data.FilterBehavior)Value;
        }
        private object get_56_FilterPredicate_IsCaseSensitive(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.FilterPredicate)instance;
            return that.IsCaseSensitive;
        }
        private void set_56_FilterPredicate_IsCaseSensitive(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.FilterPredicate)instance;
            that.IsCaseSensitive = (global::System.Boolean)Value;
        }
        private object get_57_FilterPredicate_FilterMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.FilterPredicate)instance;
            return that.FilterMode;
        }
        private void set_57_FilterPredicate_FilterMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.FilterPredicate)instance;
            that.FilterMode = (global::Syncfusion.UI.Xaml.Data.ColumnFilter)Value;
        }
        private object get_58_GridColumn_FilterBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.FilterBehavior;
        }
        private void set_58_GridColumn_FilterBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            that.FilterBehavior = (global::Syncfusion.UI.Xaml.Data.FilterBehavior)Value;
        }
        private object get_59_GridColumn_ColumnFilter(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.ColumnFilter;
        }
        private void set_59_GridColumn_ColumnFilter(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            that.ColumnFilter = (global::Syncfusion.UI.Xaml.Data.ColumnFilter)Value;
        }
        private object get_60_GridColumn_FilterRowEditorType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            return that.FilterRowEditorType;
        }
        private void set_60_GridColumn_FilterRowEditorType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)instance;
            that.FilterRowEditorType = (global::System.String)Value;
        }
        private object get_61_GridColumnBase_IsAutoGenerated(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.IsAutoGenerated;
        }
        private object get_62_GridColumnBase_ActualWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.ActualWidth;
        }
        private object get_63_GridColumnBase_MappingName(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.MappingName;
        }
        private void set_63_GridColumnBase_MappingName(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.MappingName = (global::System.String)Value;
        }
        private object get_64_GridColumnBase_HeaderText(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.HeaderText;
        }
        private void set_64_GridColumnBase_HeaderText(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.HeaderText = (global::System.String)Value;
        }
        private object get_65_GridColumnBase_AllowEditing(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.AllowEditing;
        }
        private void set_65_GridColumnBase_AllowEditing(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.AllowEditing = (global::System.Boolean)Value;
        }
        private object get_66_GridColumnBase_IsReadOnly(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.IsReadOnly;
        }
        private void set_66_GridColumnBase_IsReadOnly(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.IsReadOnly = (global::System.Boolean)Value;
        }
        private object get_67_GridColumnBase_DataValidationMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.DataValidationMode;
        }
        private void set_67_GridColumnBase_DataValidationMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.DataValidationMode = (global::Syncfusion.UI.Xaml.Grids.GridValidationMode)Value;
        }
        private object get_68_GridColumnBase_UpdateTrigger(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.UpdateTrigger;
        }
        private void set_68_GridColumnBase_UpdateTrigger(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.UpdateTrigger = (global::Microsoft.UI.Xaml.Data.UpdateSourceTrigger)Value;
        }
        private object get_69_GridColumnBase_Padding(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.Padding;
        }
        private void set_69_GridColumnBase_Padding(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.Padding = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_70_GridColumnBase_AllowFocus(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.AllowFocus;
        }
        private void set_70_GridColumnBase_AllowFocus(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.AllowFocus = (global::System.Boolean)Value;
        }
        private object get_71_GridColumnBase_HeaderTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.HeaderTemplate;
        }
        private void set_71_GridColumnBase_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_72_GridColumnBase_CellTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.CellTemplate;
        }
        private void set_72_GridColumnBase_CellTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.CellTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_73_GridColumnBase_SetCellBoundValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.SetCellBoundValue;
        }
        private void set_73_GridColumnBase_SetCellBoundValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.SetCellBoundValue = (global::System.Boolean)Value;
        }
        private object get_74_GridColumnBase_CellTemplateSelector(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.CellTemplateSelector;
        }
        private void set_74_GridColumnBase_CellTemplateSelector(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.CellTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_75_GridColumnBase_CellStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.CellStyle;
        }
        private void set_75_GridColumnBase_CellStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.CellStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_76_GridColumnBase_CellStyleSelector(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.CellStyleSelector;
        }
        private void set_76_GridColumnBase_CellStyleSelector(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.CellStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_77_GridColumnBase_HeaderStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.HeaderStyle;
        }
        private void set_77_GridColumnBase_HeaderStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.HeaderStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_78_GridColumnBase_AllowSorting(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.AllowSorting;
        }
        private void set_78_GridColumnBase_AllowSorting(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.AllowSorting = (global::System.Boolean)Value;
        }
        private object get_79_GridColumnBase_VerticalAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.VerticalAlignment;
        }
        private void set_79_GridColumnBase_VerticalAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.VerticalAlignment = (global::Microsoft.UI.Xaml.VerticalAlignment)Value;
        }
        private object get_80_GridColumnBase_TextAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.TextAlignment;
        }
        private void set_80_GridColumnBase_TextAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.TextAlignment = (global::Microsoft.UI.Xaml.TextAlignment)Value;
        }
        private object get_81_GridColumnBase_HorizontalHeaderContentAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.HorizontalHeaderContentAlignment;
        }
        private void set_81_GridColumnBase_HorizontalHeaderContentAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.HorizontalHeaderContentAlignment = (global::Microsoft.UI.Xaml.HorizontalAlignment)Value;
        }
        private object get_82_GridColumnBase_Width(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.Width;
        }
        private void set_82_GridColumnBase_Width(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.Width = (global::System.Double)Value;
        }
        private object get_83_GridColumnBase_IsHidden(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.IsHidden;
        }
        private void set_83_GridColumnBase_IsHidden(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.IsHidden = (global::System.Boolean)Value;
        }
        private object get_84_GridColumnBase_MaximumWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.MaximumWidth;
        }
        private void set_84_GridColumnBase_MaximumWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.MaximumWidth = (global::System.Double)Value;
        }
        private object get_85_GridColumnBase_MinimumWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.MinimumWidth;
        }
        private void set_85_GridColumnBase_MinimumWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.MinimumWidth = (global::System.Double)Value;
        }
        private object get_86_GridColumnBase_ValueBinding(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.ValueBinding;
        }
        private void set_86_GridColumnBase_ValueBinding(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.ValueBinding = (global::Microsoft.UI.Xaml.Data.BindingBase)Value;
        }
        private object get_87_GridColumnBase_DisplayBinding(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.DisplayBinding;
        }
        private void set_87_GridColumnBase_DisplayBinding(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.DisplayBinding = (global::Microsoft.UI.Xaml.Data.BindingBase)Value;
        }
        private object get_88_GridColumnBase_ShowHeaderToolTip(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.ShowHeaderToolTip;
        }
        private void set_88_GridColumnBase_ShowHeaderToolTip(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.ShowHeaderToolTip = (global::System.Boolean)Value;
        }
        private object get_89_GridColumnBase_ToolTipTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.ToolTipTemplate;
        }
        private void set_89_GridColumnBase_ToolTipTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.ToolTipTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_90_GridColumnBase_HeaderToolTipTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.HeaderToolTipTemplate;
        }
        private void set_90_GridColumnBase_HeaderToolTipTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.HeaderToolTipTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_91_GridColumnBase_ToolTipTemplateSelector(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.ToolTipTemplateSelector;
        }
        private void set_91_GridColumnBase_ToolTipTemplateSelector(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.ToolTipTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_92_GridColumnBase_ShowToolTip(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.ShowToolTip;
        }
        private void set_92_GridColumnBase_ShowToolTip(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.ShowToolTip = (global::System.Boolean)Value;
        }
        private object get_93_GridColumnBase_SetCellBoundToolTip(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            return that.SetCellBoundToolTip;
        }
        private void set_93_GridColumnBase_SetCellBoundToolTip(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.GridColumnBase)instance;
            that.SetCellBoundToolTip = (global::System.Boolean)Value;
        }
        private object get_94_SfDataGrid_RowGenerator(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.RowGenerator;
        }
        private void set_94_SfDataGrid_RowGenerator(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.RowGenerator = (global::Syncfusion.UI.Xaml.DataGrid.RowGenerator)Value;
        }
        private object get_95_SfDataGrid_ColumnResizingController(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.ColumnResizingController;
        }
        private void set_95_SfDataGrid_ColumnResizingController(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.ColumnResizingController = (global::Syncfusion.UI.Xaml.DataGrid.GridColumnResizingController)Value;
        }
        private object get_96_SfDataGrid_ColumnSizer(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.ColumnSizer;
        }
        private void set_96_SfDataGrid_ColumnSizer(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.ColumnSizer = (global::Syncfusion.UI.Xaml.DataGrid.DataGridColumnSizer)Value;
        }
        private object get_97_SfDataGrid_BindableView(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.BindableView;
        }
        private void set_97_SfDataGrid_BindableView(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.BindableView = (global::Syncfusion.UI.Xaml.Data.ICollectionViewAdv)Value;
        }
        private object get_98_SfDataGrid_View(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.View;
        }
        private object get_99_SfDataGrid_ColumnDragDropController(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.ColumnDragDropController;
        }
        private void set_99_SfDataGrid_ColumnDragDropController(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.ColumnDragDropController = (global::Syncfusion.UI.Xaml.DataGrid.DataGridColumnDragDropController)Value;
        }
        private object get_100_SfDataGrid_ShowBusyIndicator(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.ShowBusyIndicator;
        }
        private void set_100_SfDataGrid_ShowBusyIndicator(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.ShowBusyIndicator = (global::System.Boolean)Value;
        }
        private object get_101_SfDataGrid_LostFocusBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.LostFocusBehavior;
        }
        private void set_101_SfDataGrid_LostFocusBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.LostFocusBehavior = (global::Syncfusion.UI.Xaml.Grids.LostFocusBehavior)Value;
        }
        private object get_102_SfDataGrid_CellRenderers(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.CellRenderers;
        }
        private object get_103_SfDataGrid_UnboundRowCellRenderers(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.UnboundRowCellRenderers;
        }
        private object get_104_SfDataGrid_FilterRowCellRenderers(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.FilterRowCellRenderers;
        }
        private object get_105_SfDataGrid_CoveredCells(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.CoveredCells;
        }
        private object get_106_CoveredCellInfo_MappedRowColumnIndex(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.CoveredCellInfo)instance;
            return that.MappedRowColumnIndex;
        }
        private void set_106_CoveredCellInfo_MappedRowColumnIndex(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.CoveredCellInfo)instance;
            that.MappedRowColumnIndex = (global::Syncfusion.UI.Xaml.Grids.ScrollAxis.RowColumnIndex)Value;
        }
        private object get_107_CoveredCellInfo_Row(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.CoveredCellInfo)instance;
            return that.Row;
        }
        private object get_108_CoveredCellInfo_Left(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.CoveredCellInfo)instance;
            return that.Left;
        }
        private object get_109_CoveredCellInfo_Right(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.CoveredCellInfo)instance;
            return that.Right;
        }
        private object get_110_CoveredCellInfo_Top(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.CoveredCellInfo)instance;
            return that.Top;
        }
        private object get_111_CoveredCellInfo_Bottom(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.CoveredCellInfo)instance;
            return that.Bottom;
        }
        private object get_112_CoveredCellInfo_Width(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.CoveredCellInfo)instance;
            return that.Width;
        }
        private object get_113_CoveredCellInfo_Height(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.CoveredCellInfo)instance;
            return that.Height;
        }
        private object get_114_CoveredCellInfo_Name(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.CoveredCellInfo)instance;
            return that.Name;
        }
        private object get_115_CoveredCellInfo_RowSpan(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.CoveredCellInfo)instance;
            return that.RowSpan;
        }
        private object get_116_SfDataGrid_SelectionController(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.SelectionController;
        }
        private void set_116_SfDataGrid_SelectionController(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.SelectionController = (global::Syncfusion.UI.Xaml.DataGrid.IGridSelectionController)Value;
        }
        private object get_117_SfDataGrid_NotificationSubscriptionMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.NotificationSubscriptionMode;
        }
        private void set_117_SfDataGrid_NotificationSubscriptionMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.NotificationSubscriptionMode = (global::Syncfusion.UI.Xaml.Data.NotificationSubscriptionMode)Value;
        }
        private object get_118_SfDataGrid_SerializationController(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.SerializationController;
        }
        private void set_118_SfDataGrid_SerializationController(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.SerializationController = (global::Syncfusion.UI.Xaml.DataGrid.Serialization.SerializationController)Value;
        }
        private object get_119_SfDataGrid_AutoScroller(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.AutoScroller;
        }
        private void set_119_SfDataGrid_AutoScroller(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.AutoScroller = (global::Syncfusion.UI.Xaml.DataGrid.AutoScroller)Value;
        }
        private object get_120_SfDataGrid_FrozenFooterRowsCount(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.FrozenFooterRowsCount;
        }
        private void set_120_SfDataGrid_FrozenFooterRowsCount(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.FrozenFooterRowsCount = (global::System.Int32)Value;
        }
        private object get_121_SfDataGrid_FrozenRowsCount(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.FrozenRowsCount;
        }
        private void set_121_SfDataGrid_FrozenRowsCount(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.FrozenRowsCount = (global::System.Int32)Value;
        }
        private object get_122_SfDataGrid_SourceType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.SourceType;
        }
        private void set_122_SfDataGrid_SourceType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.SourceType = (global::System.Type)Value;
        }
        private object get_123_SfDataGrid_UsePLINQ(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.UsePLINQ;
        }
        private void set_123_SfDataGrid_UsePLINQ(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.UsePLINQ = (global::System.Boolean)Value;
        }
        private object get_124_SfDataGrid_AddNewRowText(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.AddNewRowText;
        }
        private void set_124_SfDataGrid_AddNewRowText(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.AddNewRowText = (global::System.String)Value;
        }
        private object get_125_SfDataGrid_SortComparers(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.SortComparers;
        }
        private object get_126_SortComparer_PropertyName(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.SortComparer)instance;
            return that.PropertyName;
        }
        private void set_126_SortComparer_PropertyName(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.SortComparer)instance;
            that.PropertyName = (global::System.String)Value;
        }
        private object get_127_SortComparer_Comparer(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.SortComparer)instance;
            return that.Comparer;
        }
        private void set_127_SortComparer_Comparer(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.SortComparer)instance;
            that.Comparer = (global::System.Collections.Generic.IComparer<global::System.Object>)Value;
        }
        private object get_128_SfDataGrid_SelectionBackground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.SelectionBackground;
        }
        private void set_128_SfDataGrid_SelectionBackground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.SelectionBackground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_129_SfDataGrid_SelectionForeground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.SelectionForeground;
        }
        private void set_129_SfDataGrid_SelectionForeground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.SelectionForeground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_130_SfDataGrid_RowStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.RowStyle;
        }
        private void set_130_SfDataGrid_RowStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.RowStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_131_SfDataGrid_UnboundRowStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.UnboundRowStyle;
        }
        private void set_131_SfDataGrid_UnboundRowStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.UnboundRowStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_132_SfDataGrid_AlternationCount(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.AlternationCount;
        }
        private void set_132_SfDataGrid_AlternationCount(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.AlternationCount = (global::System.Int32)Value;
        }
        private object get_133_SfDataGrid_AlternatingRowStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.AlternatingRowStyle;
        }
        private void set_133_SfDataGrid_AlternatingRowStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.AlternatingRowStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_134_SfDataGrid_AlternatingRowStyleSelector(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.AlternatingRowStyleSelector;
        }
        private void set_134_SfDataGrid_AlternatingRowStyleSelector(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.AlternatingRowStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_135_SfDataGrid_CellStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.CellStyle;
        }
        private void set_135_SfDataGrid_CellStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.CellStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_136_SfDataGrid_UnboundRowCellStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.UnboundRowCellStyle;
        }
        private void set_136_SfDataGrid_UnboundRowCellStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.UnboundRowCellStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_137_SfDataGrid_CellStyleSelector(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.CellStyleSelector;
        }
        private void set_137_SfDataGrid_CellStyleSelector(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.CellStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_138_SfDataGrid_HeaderStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.HeaderStyle;
        }
        private void set_138_SfDataGrid_HeaderStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.HeaderStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_139_SfDataGrid_HeaderTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.HeaderTemplate;
        }
        private void set_139_SfDataGrid_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_140_SfDataGrid_GroupColumnDescriptions(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.GroupColumnDescriptions;
        }
        private void set_140_SfDataGrid_GroupColumnDescriptions(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.GroupColumnDescriptions = (global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescriptions)Value;
        }
        private object get_141_GroupColumnDescription_ColumnName(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription)instance;
            return that.ColumnName;
        }
        private void set_141_GroupColumnDescription_ColumnName(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription)instance;
            that.ColumnName = (global::System.String)Value;
        }
        private object get_142_GroupColumnDescription_KeySelector(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription)instance;
            return that.KeySelector;
        }
        private void set_142_GroupColumnDescription_KeySelector(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription)instance;
            that.KeySelector = (global::System.Func<global::System.String, global::System.Object, global::System.Object>)Value;
        }
        private object get_143_GroupColumnDescription_Comparer(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription)instance;
            return that.Comparer;
        }
        private void set_143_GroupColumnDescription_Comparer(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription)instance;
            that.Comparer = (global::System.Collections.Generic.IComparer<global::System.Object>)Value;
        }
        private object get_144_GroupColumnDescription_SortGroupRecords(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription)instance;
            return that.SortGroupRecords;
        }
        private void set_144_GroupColumnDescription_SortGroupRecords(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription)instance;
            that.SortGroupRecords = (global::System.Boolean)Value;
        }
        private object get_145_SfDataGrid_GroupSummaryRows(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.GroupSummaryRows;
        }
        private void set_145_SfDataGrid_GroupSummaryRows(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.GroupSummaryRows = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow>)Value;
        }
        private object get_146_GridSummaryRow_Name(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow)instance;
            return that.Name;
        }
        private void set_146_GridSummaryRow_Name(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_147_GridSummaryRow_ShowSummaryInRow(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow)instance;
            return that.ShowSummaryInRow;
        }
        private void set_147_GridSummaryRow_ShowSummaryInRow(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow)instance;
            that.ShowSummaryInRow = (global::System.Boolean)Value;
        }
        private object get_148_GridSummaryRow_CalculationUnit(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow)instance;
            return that.CalculationUnit;
        }
        private void set_148_GridSummaryRow_CalculationUnit(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow)instance;
            that.CalculationUnit = (global::Syncfusion.UI.Xaml.Data.SummaryCalculationUnit)Value;
        }
        private object get_149_GridSummaryRow_SummaryColumns(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow)instance;
            return that.SummaryColumns;
        }
        private void set_149_GridSummaryRow_SummaryColumns(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow)instance;
            that.SummaryColumns = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Data.ISummaryColumn>)Value;
        }
        private object get_150_ISummaryColumn_CustomAggregate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.ISummaryColumn)instance;
            return that.CustomAggregate;
        }
        private void set_150_ISummaryColumn_CustomAggregate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.ISummaryColumn)instance;
            that.CustomAggregate = (global::Syncfusion.UI.Xaml.Data.ISummaryAggregate)Value;
        }
        private object get_151_ISummaryColumn_Format(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.ISummaryColumn)instance;
            return that.Format;
        }
        private void set_151_ISummaryColumn_Format(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.ISummaryColumn)instance;
            that.Format = (global::System.String)Value;
        }
        private object get_152_ISummaryColumn_MappingName(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.ISummaryColumn)instance;
            return that.MappingName;
        }
        private void set_152_ISummaryColumn_MappingName(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.ISummaryColumn)instance;
            that.MappingName = (global::System.String)Value;
        }
        private object get_153_ISummaryColumn_Name(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.ISummaryColumn)instance;
            return that.Name;
        }
        private void set_153_ISummaryColumn_Name(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.ISummaryColumn)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_154_ISummaryColumn_SummaryType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.ISummaryColumn)instance;
            return that.SummaryType;
        }
        private void set_154_ISummaryColumn_SummaryType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Data.ISummaryColumn)instance;
            that.SummaryType = (global::Syncfusion.UI.Xaml.Data.SummaryType)Value;
        }
        private object get_155_GridSummaryRow_Title(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow)instance;
            return that.Title;
        }
        private void set_155_GridSummaryRow_Title(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_156_GridSummaryRow_TitleTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow)instance;
            return that.TitleTemplate;
        }
        private void set_156_GridSummaryRow_TitleTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow)instance;
            that.TitleTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_157_GridSummaryRow_TitleTemplateSelector(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow)instance;
            return that.TitleTemplateSelector;
        }
        private void set_157_GridSummaryRow_TitleTemplateSelector(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow)instance;
            that.TitleTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_158_GridSummaryRow_TitleColumnCount(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow)instance;
            return that.TitleColumnCount;
        }
        private void set_158_GridSummaryRow_TitleColumnCount(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow)instance;
            that.TitleColumnCount = (global::System.Int32)Value;
        }
        private object get_159_SfDataGrid_CaptionSummaryRow(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.CaptionSummaryRow;
        }
        private void set_159_SfDataGrid_CaptionSummaryRow(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.CaptionSummaryRow = (global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow)Value;
        }
        private object get_160_SfDataGrid_TableSummaryRows(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.TableSummaryRows;
        }
        private void set_160_SfDataGrid_TableSummaryRows(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.TableSummaryRows = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.DataGrid.GridSummaryRow>)Value;
        }
        private object get_161_SfDataGrid_UnboundRows(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.UnboundRows;
        }
        private void set_161_SfDataGrid_UnboundRows(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.UnboundRows = (global::Syncfusion.UI.Xaml.DataGrid.UnboundRows)Value;
        }
        private object get_162_GridUnboundRow_RowIndex(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridUnboundRow)instance;
            return that.RowIndex;
        }
        private object get_163_GridUnboundRow_UnboundRowIndex(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridUnboundRow)instance;
            return that.UnboundRowIndex;
        }
        private object get_164_GridUnboundRow_ShowBelowSummary(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridUnboundRow)instance;
            return that.ShowBelowSummary;
        }
        private void set_164_GridUnboundRow_ShowBelowSummary(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridUnboundRow)instance;
            that.ShowBelowSummary = (global::System.Boolean)Value;
        }
        private object get_165_GridUnboundRow_Position(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridUnboundRow)instance;
            return that.Position;
        }
        private void set_165_GridUnboundRow_Position(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridUnboundRow)instance;
            that.Position = (global::Syncfusion.UI.Xaml.Grids.UnboundRowsPosition)Value;
        }
        private object get_166_SfDataGrid_ShowColumnWhenGrouped(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.ShowColumnWhenGrouped;
        }
        private void set_166_SfDataGrid_ShowColumnWhenGrouped(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.ShowColumnWhenGrouped = (global::System.Boolean)Value;
        }
        private object get_167_SfDataGrid_AllowFrozenGroupHeaders(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.AllowFrozenGroupHeaders;
        }
        private void set_167_SfDataGrid_AllowFrozenGroupHeaders(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.AllowFrozenGroupHeaders = (global::System.Boolean)Value;
        }
        private object get_168_SfDataGrid_CaptionSummaryRowStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.CaptionSummaryRowStyle;
        }
        private void set_168_SfDataGrid_CaptionSummaryRowStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.CaptionSummaryRowStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_169_SfDataGrid_GroupSummaryRowStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.GroupSummaryRowStyle;
        }
        private void set_169_SfDataGrid_GroupSummaryRowStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.GroupSummaryRowStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_170_SfDataGrid_TableSummaryRowStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.TableSummaryRowStyle;
        }
        private void set_170_SfDataGrid_TableSummaryRowStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.TableSummaryRowStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_171_SfDataGrid_CaptionSummaryRowStyleSelector(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.CaptionSummaryRowStyleSelector;
        }
        private void set_171_SfDataGrid_CaptionSummaryRowStyleSelector(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.CaptionSummaryRowStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_172_SfDataGrid_GroupSummaryRowStyleSelector(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.GroupSummaryRowStyleSelector;
        }
        private void set_172_SfDataGrid_GroupSummaryRowStyleSelector(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.GroupSummaryRowStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_173_SfDataGrid_TableSummaryRowStyleSelector(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.TableSummaryRowStyleSelector;
        }
        private void set_173_SfDataGrid_TableSummaryRowStyleSelector(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.TableSummaryRowStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_174_SfDataGrid_GroupSummaryCellStyleSelector(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.GroupSummaryCellStyleSelector;
        }
        private void set_174_SfDataGrid_GroupSummaryCellStyleSelector(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.GroupSummaryCellStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_175_SfDataGrid_CaptionSummaryCellStyleSelector(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.CaptionSummaryCellStyleSelector;
        }
        private void set_175_SfDataGrid_CaptionSummaryCellStyleSelector(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.CaptionSummaryCellStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_176_SfDataGrid_TableSummaryCellStyleSelector(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.TableSummaryCellStyleSelector;
        }
        private void set_176_SfDataGrid_TableSummaryCellStyleSelector(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.TableSummaryCellStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_177_SfDataGrid_IsDynamicItemsSource(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.IsDynamicItemsSource;
        }
        private void set_177_SfDataGrid_IsDynamicItemsSource(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.IsDynamicItemsSource = (global::System.Boolean)Value;
        }
        private object get_178_SfDataGrid_DataFetchSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.DataFetchSize;
        }
        private void set_178_SfDataGrid_DataFetchSize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.DataFetchSize = (global::System.Int32)Value;
        }
        private object get_179_SfDataGrid_GroupSummaryCellStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.GroupSummaryCellStyle;
        }
        private void set_179_SfDataGrid_GroupSummaryCellStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.GroupSummaryCellStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_180_SfDataGrid_CaptionSummaryCellStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.CaptionSummaryCellStyle;
        }
        private void set_180_SfDataGrid_CaptionSummaryCellStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.CaptionSummaryCellStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_181_SfDataGrid_TableSummaryCellStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.TableSummaryCellStyle;
        }
        private void set_181_SfDataGrid_TableSummaryCellStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.TableSummaryCellStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_182_SfDataGrid_ShowGroupDropArea(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.ShowGroupDropArea;
        }
        private void set_182_SfDataGrid_ShowGroupDropArea(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.ShowGroupDropArea = (global::System.Boolean)Value;
        }
        private object get_183_SfDataGrid_ClipboardController(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.ClipboardController;
        }
        private void set_183_SfDataGrid_ClipboardController(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.ClipboardController = (global::Syncfusion.UI.Xaml.DataGrid.IDataGridClipboardController)Value;
        }
        private object get_184_SfDataGrid_GroupCaptionTextFormat(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.GroupCaptionTextFormat;
        }
        private void set_184_SfDataGrid_GroupCaptionTextFormat(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.GroupCaptionTextFormat = (global::System.String)Value;
        }
        private object get_185_SfDataGrid_IsGroupDropAreaExpanded(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.IsGroupDropAreaExpanded;
        }
        private void set_185_SfDataGrid_IsGroupDropAreaExpanded(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.IsGroupDropAreaExpanded = (global::System.Boolean)Value;
        }
        private object get_186_SfDataGrid_AllowGrouping(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.AllowGrouping;
        }
        private void set_186_SfDataGrid_AllowGrouping(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.AllowGrouping = (global::System.Boolean)Value;
        }
        private object get_187_SfDataGrid_NewItemPlaceholderPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.NewItemPlaceholderPosition;
        }
        private void set_187_SfDataGrid_NewItemPlaceholderPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.NewItemPlaceholderPosition = (global::Syncfusion.UI.Xaml.Data.NewItemPlaceholderPosition)Value;
        }
        private object get_188_SfDataGrid_NotifyEventsToParentDataGrid(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.NotifyEventsToParentDataGrid;
        }
        private void set_188_SfDataGrid_NotifyEventsToParentDataGrid(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.NotifyEventsToParentDataGrid = (global::System.Boolean)Value;
        }
        private object get_189_SfDataGrid_GroupDropAreaStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.GroupDropAreaStyle;
        }
        private void set_189_SfDataGrid_GroupDropAreaStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.GroupDropAreaStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_190_SfDataGrid_GroupDropAreaText(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.GroupDropAreaText;
        }
        private void set_190_SfDataGrid_GroupDropAreaText(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.GroupDropAreaText = (global::System.String)Value;
        }
        private object get_191_SfDataGrid_LiveDataUpdateMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.LiveDataUpdateMode;
        }
        private void set_191_SfDataGrid_LiveDataUpdateMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.LiveDataUpdateMode = (global::Syncfusion.UI.Xaml.Data.LiveDataUpdateMode)Value;
        }
        private object get_192_SfDataGrid_SummaryCalculationMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.SummaryCalculationMode;
        }
        private void set_192_SfDataGrid_SummaryCalculationMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.SummaryCalculationMode = (global::Syncfusion.UI.Xaml.Data.SummaryCalculationModes)Value;
        }
        private object get_193_SfDataGrid_SummaryCalculationUnit(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.SummaryCalculationUnit;
        }
        private void set_193_SfDataGrid_SummaryCalculationUnit(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.SummaryCalculationUnit = (global::Syncfusion.UI.Xaml.Data.SummaryCalculationUnit)Value;
        }
        private object get_194_SfDataGrid_AutoExpandGroups(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.AutoExpandGroups;
        }
        private void set_194_SfDataGrid_AutoExpandGroups(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.AutoExpandGroups = (global::System.Boolean)Value;
        }
        private object get_195_SfDataGrid_AllowDeleting(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.AllowDeleting;
        }
        private void set_195_SfDataGrid_AllowDeleting(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.AllowDeleting = (global::System.Boolean)Value;
        }
        private object get_196_SfDataGrid_DetailsViewDataGridStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.DetailsViewDataGridStyle;
        }
        private void set_196_SfDataGrid_DetailsViewDataGridStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.DetailsViewDataGridStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_197_SfDataGrid_CanUseViewFilter(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.CanUseViewFilter;
        }
        private void set_197_SfDataGrid_CanUseViewFilter(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.CanUseViewFilter = (global::System.Boolean)Value;
        }
        private object get_198_SfDataGrid_FilterPopupStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.FilterPopupStyle;
        }
        private void set_198_SfDataGrid_FilterPopupStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.FilterPopupStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_199_SfDataGrid_FilterPopupTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.FilterPopupTemplate;
        }
        private void set_199_SfDataGrid_FilterPopupTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.FilterPopupTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_200_SfDataGrid_FilterRowPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.FilterRowPosition;
        }
        private void set_200_SfDataGrid_FilterRowPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.FilterRowPosition = (global::Syncfusion.UI.Xaml.DataGrid.FilterRowPosition)Value;
        }
        private object get_201_SfDataGrid_DetailsViewDefinition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.DetailsViewDefinition;
        }
        private void set_201_SfDataGrid_DetailsViewDefinition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.DetailsViewDefinition = (global::Syncfusion.UI.Xaml.DataGrid.DetailsViewDefinition)Value;
        }
        private object get_202_ViewDefinition_RelationalColumn(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.ViewDefinition)instance;
            return that.RelationalColumn;
        }
        private void set_202_ViewDefinition_RelationalColumn(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.ViewDefinition)instance;
            that.RelationalColumn = (global::System.String)Value;
        }
        private object get_203_SfDataGrid_ShowDetailsViewIndentCell(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.ShowDetailsViewIndentCell;
        }
        private void set_203_SfDataGrid_ShowDetailsViewIndentCell(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.ShowDetailsViewIndentCell = (global::System.Boolean)Value;
        }
        private object get_204_SfDataGrid_ReuseRowsOnItemsSourceChange(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.ReuseRowsOnItemsSourceChange;
        }
        private void set_204_SfDataGrid_ReuseRowsOnItemsSourceChange(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.ReuseRowsOnItemsSourceChange = (global::System.Boolean)Value;
        }
        private object get_205_SfDataGrid_CanMaintainScrollPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.CanMaintainScrollPosition;
        }
        private void set_205_SfDataGrid_CanMaintainScrollPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.CanMaintainScrollPosition = (global::System.Boolean)Value;
        }
        private object get_206_SfDataGrid_GroupDropItemContextFlyout(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.GroupDropItemContextFlyout;
        }
        private void set_206_SfDataGrid_GroupDropItemContextFlyout(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.GroupDropItemContextFlyout = (global::Microsoft.UI.Xaml.Controls.MenuFlyout)Value;
        }
        private object get_207_SfDataGrid_GroupDropAreaContextFlyout(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.GroupDropAreaContextFlyout;
        }
        private void set_207_SfDataGrid_GroupDropAreaContextFlyout(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.GroupDropAreaContextFlyout = (global::Microsoft.UI.Xaml.Controls.MenuFlyout)Value;
        }
        private object get_208_SfDataGrid_GroupSummaryContextFlyout(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.GroupSummaryContextFlyout;
        }
        private void set_208_SfDataGrid_GroupSummaryContextFlyout(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.GroupSummaryContextFlyout = (global::Microsoft.UI.Xaml.Controls.MenuFlyout)Value;
        }
        private object get_209_SfDataGrid_TableSummaryContextFlyout(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.TableSummaryContextFlyout;
        }
        private void set_209_SfDataGrid_TableSummaryContextFlyout(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.TableSummaryContextFlyout = (global::Microsoft.UI.Xaml.Controls.MenuFlyout)Value;
        }
        private object get_210_SfDataGrid_GroupCaptionContextFlyout(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.GroupCaptionContextFlyout;
        }
        private void set_210_SfDataGrid_GroupCaptionContextFlyout(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.GroupCaptionContextFlyout = (global::Microsoft.UI.Xaml.Controls.MenuFlyout)Value;
        }
        private object get_211_SfDataGrid_AllowRowHoverHighlighting(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.AllowRowHoverHighlighting;
        }
        private void set_211_SfDataGrid_AllowRowHoverHighlighting(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.AllowRowHoverHighlighting = (global::System.Boolean)Value;
        }
        private object get_212_SfDataGrid_AddNewRowPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.AddNewRowPosition;
        }
        private void set_212_SfDataGrid_AddNewRowPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.AddNewRowPosition = (global::Syncfusion.UI.Xaml.DataGrid.AddNewRowPosition)Value;
        }
        private object get_213_SfDataGrid_ExpanderColumnWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.ExpanderColumnWidth;
        }
        private void set_213_SfDataGrid_ExpanderColumnWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.ExpanderColumnWidth = (global::System.Double)Value;
        }
        private object get_214_SfDataGrid_IndentColumnWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.IndentColumnWidth;
        }
        private void set_214_SfDataGrid_IndentColumnWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.IndentColumnWidth = (global::System.Double)Value;
        }
        private object get_215_SfDataGrid_PrintSettings(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.PrintSettings;
        }
        private void set_215_SfDataGrid_PrintSettings(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.PrintSettings = (global::Syncfusion.UI.Xaml.DataGrid.Print.DataGridPrintSettings)Value;
        }
        private object get_216_SfDataGrid_CurrentItem(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.CurrentItem;
        }
        private void set_216_SfDataGrid_CurrentItem(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.CurrentItem = (global::System.Object)Value;
        }
        private object get_217_SfDataGrid_SelectionUnit(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.SelectionUnit;
        }
        private void set_217_SfDataGrid_SelectionUnit(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.SelectionUnit = (global::Syncfusion.UI.Xaml.Grids.GridSelectionUnit)Value;
        }
        private object get_218_SfDataGrid_CurrentCellInfo(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.CurrentCellInfo;
        }
        private void set_218_SfDataGrid_CurrentCellInfo(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.CurrentCellInfo = (global::Syncfusion.UI.Xaml.DataGrid.GridCellInfo)Value;
        }
        private object get_219_SfDataGrid_CurrentColumn(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.CurrentColumn;
        }
        private void set_219_SfDataGrid_CurrentColumn(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.CurrentColumn = (global::Syncfusion.UI.Xaml.DataGrid.GridColumn)Value;
        }
        private object get_220_SfDataGrid_AutoGenerateRelations(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.AutoGenerateRelations;
        }
        private void set_220_SfDataGrid_AutoGenerateRelations(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.AutoGenerateRelations = (global::System.Boolean)Value;
        }
        private object get_221_SfDataGrid_SelectedDetailsViewGrid(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.SelectedDetailsViewGrid;
        }
        private void set_221_SfDataGrid_SelectedDetailsViewGrid(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.SelectedDetailsViewGrid = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)Value;
        }
        private object get_222_SfDataGrid_HideEmptyGridViewDefinition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.HideEmptyGridViewDefinition;
        }
        private void set_222_SfDataGrid_HideEmptyGridViewDefinition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.HideEmptyGridViewDefinition = (global::System.Boolean)Value;
        }
        private object get_223_SfDataGrid_DetailsViewPadding(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.DetailsViewPadding;
        }
        private void set_223_SfDataGrid_DetailsViewPadding(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            that.DetailsViewPadding = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_224_SfDataGrid_NotifyListener(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.NotifyListener;
        }
        private object get_225_SfDataGrid_IsListenerSuspended(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.SfDataGrid)instance;
            return that.IsListenerSuspended;
        }
        private object get_226_SfGridBase_StackedHeaderRows(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.StackedHeaderRows;
        }
        private void set_226_SfGridBase_StackedHeaderRows(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.StackedHeaderRows = (global::Syncfusion.UI.Xaml.Grids.StackedHeaderRows)Value;
        }
        private object get_227_StackedHeaderRow_Name(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.StackedHeaderRow)instance;
            return that.Name;
        }
        private void set_227_StackedHeaderRow_Name(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.StackedHeaderRow)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_228_StackedHeaderRow_StackedColumns(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.StackedHeaderRow)instance;
            return that.StackedColumns;
        }
        private object get_229_StackedColumn_ChildColumns(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.StackedColumn)instance;
            return that.ChildColumns;
        }
        private void set_229_StackedColumn_ChildColumns(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.StackedColumn)instance;
            that.ChildColumns = (global::System.String)Value;
        }
        private object get_230_StackedColumn_HeaderText(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.StackedColumn)instance;
            return that.HeaderText;
        }
        private void set_230_StackedColumn_HeaderText(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.StackedColumn)instance;
            that.HeaderText = (global::System.String)Value;
        }
        private object get_231_StackedColumn_MappingName(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.StackedColumn)instance;
            return that.MappingName;
        }
        private void set_231_StackedColumn_MappingName(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.StackedColumn)instance;
            that.MappingName = (global::System.String)Value;
        }
        private object get_232_SfGridBase_FrozenFooterColumnCount(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.FrozenFooterColumnCount;
        }
        private void set_232_SfGridBase_FrozenFooterColumnCount(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.FrozenFooterColumnCount = (global::System.Int32)Value;
        }
        private object get_233_SfGridBase_AllowEditing(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.AllowEditing;
        }
        private void set_233_SfGridBase_AllowEditing(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.AllowEditing = (global::System.Boolean)Value;
        }
        private object get_234_SfGridBase_IsReadOnly(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.IsReadOnly;
        }
        private void set_234_SfGridBase_IsReadOnly(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.IsReadOnly = (global::System.Boolean)Value;
        }
        private object get_235_SfGridBase_AllowSelectionOnPointerPressed(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.AllowSelectionOnPointerPressed;
        }
        private void set_235_SfGridBase_AllowSelectionOnPointerPressed(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.AllowSelectionOnPointerPressed = (global::System.Boolean)Value;
        }
        private object get_236_SfGridBase_SelectionMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.SelectionMode;
        }
        private void set_236_SfGridBase_SelectionMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.SelectionMode = (global::Syncfusion.UI.Xaml.Grids.GridSelectionMode)Value;
        }
        private object get_237_SfGridBase_NavigationMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.NavigationMode;
        }
        private void set_237_SfGridBase_NavigationMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.NavigationMode = (global::Syncfusion.UI.Xaml.Grids.NavigationMode)Value;
        }
        private object get_238_SfGridBase_EditorSelectionBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.EditorSelectionBehavior;
        }
        private void set_238_SfGridBase_EditorSelectionBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.EditorSelectionBehavior = (global::Syncfusion.UI.Xaml.Grids.EditorSelectionBehavior)Value;
        }
        private object get_239_SfGridBase_EditTrigger(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.EditTrigger;
        }
        private void set_239_SfGridBase_EditTrigger(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.EditTrigger = (global::Syncfusion.UI.Xaml.Grids.EditTrigger)Value;
        }
        private object get_240_SfGridBase_CurrentCellBorderThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.CurrentCellBorderThickness;
        }
        private void set_240_SfGridBase_CurrentCellBorderThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.CurrentCellBorderThickness = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_241_SfGridBase_CurrentCellBorderBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.CurrentCellBorderBrush;
        }
        private void set_241_SfGridBase_CurrentCellBorderBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.CurrentCellBorderBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_242_SfGridBase_FrozenColumnCount(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.FrozenColumnCount;
        }
        private void set_242_SfGridBase_FrozenColumnCount(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.FrozenColumnCount = (global::System.Int32)Value;
        }
        private object get_243_SfGridBase_GridLinesVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.GridLinesVisibility;
        }
        private void set_243_SfGridBase_GridLinesVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.GridLinesVisibility = (global::Syncfusion.UI.Xaml.Grids.GridLinesVisibility)Value;
        }
        private object get_244_SfGridBase_HeaderLinesVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.HeaderLinesVisibility;
        }
        private void set_244_SfGridBase_HeaderLinesVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.HeaderLinesVisibility = (global::Syncfusion.UI.Xaml.Grids.GridLinesVisibility)Value;
        }
        private object get_245_SfGridBase_ShowRowHeader(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.ShowRowHeader;
        }
        private void set_245_SfGridBase_ShowRowHeader(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.ShowRowHeader = (global::System.Boolean)Value;
        }
        private object get_246_SfGridBase_RowHeaderWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.RowHeaderWidth;
        }
        private void set_246_SfGridBase_RowHeaderWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.RowHeaderWidth = (global::System.Double)Value;
        }
        private object get_247_SfGridBase_HeaderRowHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.HeaderRowHeight;
        }
        private void set_247_SfGridBase_HeaderRowHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.HeaderRowHeight = (global::System.Double)Value;
        }
        private object get_248_SfGridBase_RowHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.RowHeight;
        }
        private void set_248_SfGridBase_RowHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.RowHeight = (global::System.Double)Value;
        }
        private object get_249_SfGridBase_AllowDraggingColumns(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.AllowDraggingColumns;
        }
        private void set_249_SfGridBase_AllowDraggingColumns(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.AllowDraggingColumns = (global::System.Boolean)Value;
        }
        private object get_250_SfGridBase_AutoGenerateColumnsForCustomType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.AutoGenerateColumnsForCustomType;
        }
        private void set_250_SfGridBase_AutoGenerateColumnsForCustomType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.AutoGenerateColumnsForCustomType = (global::System.Boolean)Value;
        }
        private object get_251_SfGridBase_AutoGenerateColumnsModeForCustomType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.AutoGenerateColumnsModeForCustomType;
        }
        private void set_251_SfGridBase_AutoGenerateColumnsModeForCustomType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.AutoGenerateColumnsModeForCustomType = (global::Syncfusion.UI.Xaml.Grids.AutoGenerateColumnsModeForCustomType)Value;
        }
        private object get_252_SfGridBase_CellTemplateSelector(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.CellTemplateSelector;
        }
        private void set_252_SfGridBase_CellTemplateSelector(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.CellTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_253_SfGridBase_AutoGenerateColumnsMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.AutoGenerateColumnsMode;
        }
        private void set_253_SfGridBase_AutoGenerateColumnsMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.AutoGenerateColumnsMode = (global::Syncfusion.UI.Xaml.Grids.AutoGenerateColumnsMode)Value;
        }
        private object get_254_SfGridBase_SortClickAction(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.SortClickAction;
        }
        private void set_254_SfGridBase_SortClickAction(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.SortClickAction = (global::Syncfusion.UI.Xaml.Grids.SortClickAction)Value;
        }
        private object get_255_SfGridBase_AllowTriStateSorting(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.AllowTriStateSorting;
        }
        private void set_255_SfGridBase_AllowTriStateSorting(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.AllowTriStateSorting = (global::System.Boolean)Value;
        }
        private object get_256_SfGridBase_HeaderContextFlyout(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.HeaderContextFlyout;
        }
        private void set_256_SfGridBase_HeaderContextFlyout(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.HeaderContextFlyout = (global::Microsoft.UI.Xaml.Controls.MenuFlyout)Value;
        }
        private object get_257_SfGridBase_RecordContextFlyout(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.RecordContextFlyout;
        }
        private void set_257_SfGridBase_RecordContextFlyout(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.RecordContextFlyout = (global::Microsoft.UI.Xaml.Controls.MenuFlyout)Value;
        }
        private object get_258_SfGridBase_ShowSortNumbers(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.ShowSortNumbers;
        }
        private void set_258_SfGridBase_ShowSortNumbers(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.ShowSortNumbers = (global::System.Boolean)Value;
        }
        private object get_259_SfGridBase_DataValidationMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.DataValidationMode;
        }
        private void set_259_SfGridBase_DataValidationMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.DataValidationMode = (global::Syncfusion.UI.Xaml.Grids.GridValidationMode)Value;
        }
        private object get_260_SfGridBase_SelectedIndex(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.SelectedIndex;
        }
        private void set_260_SfGridBase_SelectedIndex(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.SelectedIndex = (global::System.Int32)Value;
        }
        private object get_261_SfGridBase_SelectedItems(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.SelectedItems;
        }
        private void set_261_SfGridBase_SelectedItems(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.SelectedItems = (global::System.Collections.ObjectModel.ObservableCollection<global::System.Object>)Value;
        }
        private object get_262_SfGridBase_SortColumnDescriptions(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.SortColumnDescriptions;
        }
        private void set_262_SfGridBase_SortColumnDescriptions(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.SortColumnDescriptions = (global::Syncfusion.UI.Xaml.Grids.SortColumnDescriptions)Value;
        }
        private object get_263_SortColumnDescription_ColumnName(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SortColumnDescription)instance;
            return that.ColumnName;
        }
        private void set_263_SortColumnDescription_ColumnName(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SortColumnDescription)instance;
            that.ColumnName = (global::System.String)Value;
        }
        private object get_264_SortColumnDescription_SortDirection(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SortColumnDescription)instance;
            return that.SortDirection;
        }
        private void set_264_SortColumnDescription_SortDirection(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SortColumnDescription)instance;
            that.SortDirection = (global::Syncfusion.UI.Xaml.Data.SortDirection)Value;
        }
        private object get_265_SfGridBase_PasteOption(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.PasteOption;
        }
        private void set_265_SfGridBase_PasteOption(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.PasteOption = (global::Syncfusion.UI.Xaml.Grids.GridPasteOptions)Value;
        }
        private object get_266_SfGridBase_CopyOption(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.CopyOption;
        }
        private void set_266_SfGridBase_CopyOption(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.CopyOption = (global::Syncfusion.UI.Xaml.Grids.GridCopyOptions)Value;
        }
        private object get_267_SfGridBase_ShowToolTip(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            return that.ShowToolTip;
        }
        private void set_267_SfGridBase_ShowToolTip(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Grids.SfGridBase)instance;
            that.ShowToolTip = (global::System.Boolean)Value;
        }
        private object get_268_GridTextColumn_IsSpellCheckEnabled(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridTextColumn)instance;
            return that.IsSpellCheckEnabled;
        }
        private void set_268_GridTextColumn_IsSpellCheckEnabled(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridTextColumn)instance;
            that.IsSpellCheckEnabled = (global::System.Boolean)Value;
        }
        private object get_269_GridTextColumnBase_TextTrimming(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridTextColumnBase)instance;
            return that.TextTrimming;
        }
        private void set_269_GridTextColumnBase_TextTrimming(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridTextColumnBase)instance;
            that.TextTrimming = (global::Microsoft.UI.Xaml.TextTrimming)Value;
        }
        private object get_270_GridTextColumnBase_TextWrapping(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridTextColumnBase)instance;
            return that.TextWrapping;
        }
        private void set_270_GridTextColumnBase_TextWrapping(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.DataGrid.GridTextColumnBase)instance;
            that.TextWrapping = (global::Microsoft.UI.Xaml.TextWrapping)Value;
        }
        private object get_271_AssetDataElementGridControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Assets.AssetDataElementGridControl)instance;
            return that.ViewModel;
        }
        private void set_271_AssetDataElementGridControl_ViewModel(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Controls.Assets.AssetDataElementGridControl)instance;
            that.ViewModel = (global::InXone.WinUI.Controls.ViewModels.AssetViewerViewModel)Value;
        }
        private object get_272_ItemsRepeater_ItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.ItemTemplate;
        }
        private void set_272_ItemsRepeater_ItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.ItemTemplate = (global::System.Object)Value;
        }
        private object get_273_ItemsRepeater_ItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.ItemsSource;
        }
        private void set_273_ItemsRepeater_ItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_274_ItemsRepeater_Background(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.Background;
        }
        private void set_274_ItemsRepeater_Background(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.Background = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_275_ItemsRepeater_HorizontalCacheLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.HorizontalCacheLength;
        }
        private void set_275_ItemsRepeater_HorizontalCacheLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.HorizontalCacheLength = (global::System.Double)Value;
        }
        private object get_276_ItemsRepeater_ItemsSourceView(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.ItemsSourceView;
        }
        private object get_277_ItemsRepeater_Layout(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.Layout;
        }
        private void set_277_ItemsRepeater_Layout(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.Layout = (global::Microsoft.UI.Xaml.Controls.Layout)Value;
        }
        private object get_278_ItemsRepeater_VerticalCacheLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.VerticalCacheLength;
        }
        private void set_278_ItemsRepeater_VerticalCacheLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.VerticalCacheLength = (global::System.Double)Value;
        }
        private object get_279_AssetSidePanelControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Assets.AssetSidePanelControl)instance;
            return that.ViewModel;
        }
        private object get_280_AssetUseCaseGridControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Assets.AssetUseCaseGridControl)instance;
            return that.ViewModel;
        }
        private void set_280_AssetUseCaseGridControl_ViewModel(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Controls.Assets.AssetUseCaseGridControl)instance;
            that.ViewModel = (global::InXone.WinUI.Controls.ViewModels.AssetViewerViewModel)Value;
        }
        private object get_281_TabView_TabItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabItems;
        }
        private object get_282_TabView_IsAddTabButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.IsAddTabButtonVisible;
        }
        private void set_282_TabView_IsAddTabButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.IsAddTabButtonVisible = (global::System.Boolean)Value;
        }
        private object get_283_TabView_AddTabButtonCommand(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.AddTabButtonCommand;
        }
        private void set_283_TabView_AddTabButtonCommand(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.AddTabButtonCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_284_TabView_AddTabButtonCommandParameter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.AddTabButtonCommandParameter;
        }
        private void set_284_TabView_AddTabButtonCommandParameter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.AddTabButtonCommandParameter = (global::System.Object)Value;
        }
        private object get_285_TabView_AllowDropTabs(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.AllowDropTabs;
        }
        private void set_285_TabView_AllowDropTabs(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.AllowDropTabs = (global::System.Boolean)Value;
        }
        private object get_286_TabView_CanDragTabs(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.CanDragTabs;
        }
        private void set_286_TabView_CanDragTabs(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.CanDragTabs = (global::System.Boolean)Value;
        }
        private object get_287_TabView_CanReorderTabs(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.CanReorderTabs;
        }
        private void set_287_TabView_CanReorderTabs(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.CanReorderTabs = (global::System.Boolean)Value;
        }
        private object get_288_TabView_CloseButtonOverlayMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.CloseButtonOverlayMode;
        }
        private void set_288_TabView_CloseButtonOverlayMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.CloseButtonOverlayMode = (global::Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode)Value;
        }
        private object get_289_TabView_SelectedIndex(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.SelectedIndex;
        }
        private void set_289_TabView_SelectedIndex(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.SelectedIndex = (global::System.Int32)Value;
        }
        private object get_290_TabView_SelectedItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.SelectedItem;
        }
        private void set_290_TabView_SelectedItem(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_291_TabView_TabItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabItemTemplate;
        }
        private void set_291_TabView_TabItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabItemTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_292_TabView_TabItemTemplateSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabItemTemplateSelector;
        }
        private void set_292_TabView_TabItemTemplateSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabItemTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_293_TabView_TabItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabItemsSource;
        }
        private void set_293_TabView_TabItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabItemsSource = (global::System.Object)Value;
        }
        private object get_294_TabView_TabStripFooter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabStripFooter;
        }
        private void set_294_TabView_TabStripFooter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabStripFooter = (global::System.Object)Value;
        }
        private object get_295_TabView_TabStripFooterTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabStripFooterTemplate;
        }
        private void set_295_TabView_TabStripFooterTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabStripFooterTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_296_TabView_TabStripHeader(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabStripHeader;
        }
        private void set_296_TabView_TabStripHeader(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabStripHeader = (global::System.Object)Value;
        }
        private object get_297_TabView_TabStripHeaderTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabStripHeaderTemplate;
        }
        private void set_297_TabView_TabStripHeaderTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabStripHeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_298_TabView_TabWidthMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            return that.TabWidthMode;
        }
        private void set_298_TabView_TabWidthMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabView)instance;
            that.TabWidthMode = (global::Microsoft.UI.Xaml.Controls.TabViewWidthMode)Value;
        }
        private object get_299_TabViewItem_Header(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabViewItem)instance;
            return that.Header;
        }
        private void set_299_TabViewItem_Header(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabViewItem)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_300_TabViewItem_IconSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabViewItem)instance;
            return that.IconSource;
        }
        private void set_300_TabViewItem_IconSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabViewItem)instance;
            that.IconSource = (global::Microsoft.UI.Xaml.Controls.IconSource)Value;
        }
        private object get_301_TabViewItem_HeaderTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabViewItem)instance;
            return that.HeaderTemplate;
        }
        private void set_301_TabViewItem_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabViewItem)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_302_TabViewItem_IsClosable(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabViewItem)instance;
            return that.IsClosable;
        }
        private void set_302_TabViewItem_IsClosable(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabViewItem)instance;
            that.IsClosable = (global::System.Boolean)Value;
        }
        private object get_303_TabViewItem_TabViewTemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TabViewItem)instance;
            return that.TabViewTemplateSettings;
        }
        private object get_304_ProjectFileEditorControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Projects.ProjectFileEditorControl)instance;
            return that.ViewModel;
        }
        private void set_304_ProjectFileEditorControl_ViewModel(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Controls.Projects.ProjectFileEditorControl)instance;
            that.ViewModel = (global::InXone.WinUI.Controls.ViewModels.ProjectViewerViewModel)Value;
        }
        private object get_305_ProjectFileEditorControl_FileNameTextBlock(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Projects.ProjectFileEditorControl)instance;
            return that.FileNameTextBlock;
        }
        private object get_306_ProjectFileEditorControl_AssetViewerCommandEvent(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Projects.ProjectFileEditorControl)instance;
            return that.AssetViewerCommandEvent;
        }
        private void set_306_ProjectFileEditorControl_AssetViewerCommandEvent(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Controls.Projects.ProjectFileEditorControl)instance;
            that.AssetViewerCommandEvent = (global::InXone.WinUI.Controls.Common.NotificationEvent)Value;
        }
        private object get_307_AssetViewerControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Assets.AssetViewerControl)instance;
            return that.ViewModel;
        }
        private object get_308_EntityFollowUpGridControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Entities.EntityFollowUpGridControl)instance;
            return that.ViewModel;
        }
        private void set_308_EntityFollowUpGridControl_ViewModel(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Controls.Entities.EntityFollowUpGridControl)instance;
            that.ViewModel = (global::InXone.Uwp.ViewModels.EntityFollowUpViewModel)Value;
        }
        private object get_309_NavigationView_IsBackButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsBackButtonVisible;
        }
        private void set_309_NavigationView_IsBackButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsBackButtonVisible = (global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible)Value;
        }
        private object get_310_NavigationView_IsSettingsVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsSettingsVisible;
        }
        private void set_310_NavigationView_IsSettingsVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsSettingsVisible = (global::System.Boolean)Value;
        }
        private object get_311_NavigationView_PaneDisplayMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneDisplayMode;
        }
        private void set_311_NavigationView_PaneDisplayMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneDisplayMode = (global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode)Value;
        }
        private object get_312_NavigationView_SelectedItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SelectedItem;
        }
        private void set_312_NavigationView_SelectedItem(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_313_NavigationView_SelectionFollowsFocus(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SelectionFollowsFocus;
        }
        private void set_313_NavigationView_SelectionFollowsFocus(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.SelectionFollowsFocus = (global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus)Value;
        }
        private object get_314_NavigationView_MenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItems;
        }
        private object get_315_NavigationView_AlwaysShowHeader(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.AlwaysShowHeader;
        }
        private void set_315_NavigationView_AlwaysShowHeader(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.AlwaysShowHeader = (global::System.Boolean)Value;
        }
        private object get_316_NavigationView_AutoSuggestBox(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.AutoSuggestBox;
        }
        private void set_316_NavigationView_AutoSuggestBox(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.AutoSuggestBox = (global::Microsoft.UI.Xaml.Controls.AutoSuggestBox)Value;
        }
        private object get_317_NavigationView_CompactModeThresholdWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.CompactModeThresholdWidth;
        }
        private void set_317_NavigationView_CompactModeThresholdWidth(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.CompactModeThresholdWidth = (global::System.Double)Value;
        }
        private object get_318_NavigationView_CompactPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.CompactPaneLength;
        }
        private void set_318_NavigationView_CompactPaneLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.CompactPaneLength = (global::System.Double)Value;
        }
        private object get_319_NavigationView_ContentOverlay(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ContentOverlay;
        }
        private void set_319_NavigationView_ContentOverlay(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ContentOverlay = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_320_NavigationView_DisplayMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.DisplayMode;
        }
        private object get_321_NavigationView_ExpandedModeThresholdWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ExpandedModeThresholdWidth;
        }
        private void set_321_NavigationView_ExpandedModeThresholdWidth(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ExpandedModeThresholdWidth = (global::System.Double)Value;
        }
        private object get_322_NavigationView_FooterMenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.FooterMenuItems;
        }
        private object get_323_NavigationView_FooterMenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.FooterMenuItemsSource;
        }
        private void set_323_NavigationView_FooterMenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.FooterMenuItemsSource = (global::System.Object)Value;
        }
        private object get_324_NavigationView_Header(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.Header;
        }
        private void set_324_NavigationView_Header(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_325_NavigationView_HeaderTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.HeaderTemplate;
        }
        private void set_325_NavigationView_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_326_NavigationView_IsBackEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsBackEnabled;
        }
        private void set_326_NavigationView_IsBackEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsBackEnabled = (global::System.Boolean)Value;
        }
        private object get_327_NavigationView_IsPaneOpen(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneOpen;
        }
        private void set_327_NavigationView_IsPaneOpen(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneOpen = (global::System.Boolean)Value;
        }
        private object get_328_NavigationView_IsPaneToggleButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneToggleButtonVisible;
        }
        private void set_328_NavigationView_IsPaneToggleButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneToggleButtonVisible = (global::System.Boolean)Value;
        }
        private object get_329_NavigationView_IsPaneVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneVisible;
        }
        private void set_329_NavigationView_IsPaneVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneVisible = (global::System.Boolean)Value;
        }
        private object get_330_NavigationView_IsTitleBarAutoPaddingEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsTitleBarAutoPaddingEnabled;
        }
        private void set_330_NavigationView_IsTitleBarAutoPaddingEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsTitleBarAutoPaddingEnabled = (global::System.Boolean)Value;
        }
        private object get_331_NavigationView_MenuItemContainerStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemContainerStyle;
        }
        private void set_331_NavigationView_MenuItemContainerStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemContainerStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_332_NavigationView_MenuItemContainerStyleSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemContainerStyleSelector;
        }
        private void set_332_NavigationView_MenuItemContainerStyleSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemContainerStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_333_NavigationView_MenuItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemTemplate;
        }
        private void set_333_NavigationView_MenuItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_334_NavigationView_MenuItemTemplateSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemTemplateSelector;
        }
        private void set_334_NavigationView_MenuItemTemplateSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_335_NavigationView_MenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemsSource;
        }
        private void set_335_NavigationView_MenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemsSource = (global::System.Object)Value;
        }
        private object get_336_NavigationView_OpenPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.OpenPaneLength;
        }
        private void set_336_NavigationView_OpenPaneLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.OpenPaneLength = (global::System.Double)Value;
        }
        private object get_337_NavigationView_OverflowLabelMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.OverflowLabelMode;
        }
        private void set_337_NavigationView_OverflowLabelMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.OverflowLabelMode = (global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode)Value;
        }
        private object get_338_NavigationView_PaneCustomContent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneCustomContent;
        }
        private void set_338_NavigationView_PaneCustomContent(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneCustomContent = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_339_NavigationView_PaneFooter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneFooter;
        }
        private void set_339_NavigationView_PaneFooter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneFooter = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_340_NavigationView_PaneHeader(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneHeader;
        }
        private void set_340_NavigationView_PaneHeader(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneHeader = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_341_NavigationView_PaneTitle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneTitle;
        }
        private void set_341_NavigationView_PaneTitle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneTitle = (global::System.String)Value;
        }
        private object get_342_NavigationView_PaneToggleButtonStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneToggleButtonStyle;
        }
        private void set_342_NavigationView_PaneToggleButtonStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneToggleButtonStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_343_NavigationView_SettingsItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SettingsItem;
        }
        private object get_344_NavigationView_ShoulderNavigationEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ShoulderNavigationEnabled;
        }
        private void set_344_NavigationView_ShoulderNavigationEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ShoulderNavigationEnabled = (global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled)Value;
        }
        private object get_345_NavigationView_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.TemplateSettings;
        }
        private object get_346_NotesViewEditControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Notes.NotesViewEditControl)instance;
            return that.ViewModel;
        }
        private object get_347_PersonBaseEditorControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Entities.PersonBaseEditorControl)instance;
            return that.ViewModel;
        }
        private void set_347_PersonBaseEditorControl_ViewModel(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Controls.Entities.PersonBaseEditorControl)instance;
            that.ViewModel = (global::InXone.UI.DataModel.Entities.PersonViewModel)Value;
        }
        private object get_348_ReferenceListGroupEditControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.ReferenceLists.ReferenceListGroupEditControl)instance;
            return that.ViewModel;
        }
        private object get_349_NavigationViewItemBase_IsSelected(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase)instance;
            return that.IsSelected;
        }
        private void set_349_NavigationViewItemBase_IsSelected(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_350_NavigationViewItem_Icon(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.Icon;
        }
        private void set_350_NavigationViewItem_Icon(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.Icon = (global::Microsoft.UI.Xaml.Controls.IconElement)Value;
        }
        private object get_351_NavigationViewItem_CompactPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.CompactPaneLength;
        }
        private object get_352_NavigationViewItem_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_352_NavigationViewItem_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_353_NavigationViewItem_IsChildSelected(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.IsChildSelected;
        }
        private void set_353_NavigationViewItem_IsChildSelected(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.IsChildSelected = (global::System.Boolean)Value;
        }
        private object get_354_NavigationViewItem_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.IsExpanded;
        }
        private void set_354_NavigationViewItem_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_355_NavigationViewItem_MenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.MenuItems;
        }
        private object get_356_NavigationViewItem_MenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.MenuItemsSource;
        }
        private void set_356_NavigationViewItem_MenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.MenuItemsSource = (global::System.Object)Value;
        }
        private object get_357_NavigationViewItem_SelectsOnInvoked(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.SelectsOnInvoked;
        }
        private void set_357_NavigationViewItem_SelectsOnInvoked(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.SelectsOnInvoked = (global::System.Boolean)Value;
        }
        private object get_358_EntityFollowUpViewControl_ParentMenu(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Entities.EntityFollowUpViewControl)instance;
            return that.ParentMenu;
        }
        private void set_358_EntityFollowUpViewControl_ParentMenu(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Controls.Entities.EntityFollowUpViewControl)instance;
            that.ParentMenu = (global::InXone.DataObjects.ViewModels.IMenuItemParent)Value;
        }
        private object get_359_EntityFollowUpViewControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Entities.EntityFollowUpViewControl)instance;
            return that.ViewModel;
        }
        private object get_360_MenuItemTemplateSelector_ItemTemplate(object instance)
        {
            var that = (global::InXone.WinUI.Common.MenuItemTemplateSelector)instance;
            return that.ItemTemplate;
        }
        private void set_360_MenuItemTemplateSelector_ItemTemplate(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Common.MenuItemTemplateSelector)instance;
            that.ItemTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_361_NavigationControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Navigation.NavigationControl)instance;
            return that.ViewModel;
        }
        private object get_362_NavigationControl_MenuIsVisible(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Navigation.NavigationControl)instance;
            return that.MenuIsVisible;
        }
        private object get_363_TreeView_ItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.ItemsSource;
        }
        private void set_363_TreeView_ItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_364_TreeView_SelectionMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.SelectionMode;
        }
        private void set_364_TreeView_SelectionMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            that.SelectionMode = (global::Microsoft.UI.Xaml.Controls.TreeViewSelectionMode)Value;
        }
        private object get_365_TreeView_ItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.ItemTemplate;
        }
        private void set_365_TreeView_ItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            that.ItemTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_366_TreeView_CanDragItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.CanDragItems;
        }
        private void set_366_TreeView_CanDragItems(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            that.CanDragItems = (global::System.Boolean)Value;
        }
        private object get_367_TreeView_CanReorderItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.CanReorderItems;
        }
        private void set_367_TreeView_CanReorderItems(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            that.CanReorderItems = (global::System.Boolean)Value;
        }
        private object get_368_TreeView_ItemContainerStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.ItemContainerStyle;
        }
        private void set_368_TreeView_ItemContainerStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            that.ItemContainerStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_369_TreeView_ItemContainerStyleSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.ItemContainerStyleSelector;
        }
        private void set_369_TreeView_ItemContainerStyleSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            that.ItemContainerStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_370_TreeView_ItemContainerTransitions(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.ItemContainerTransitions;
        }
        private void set_370_TreeView_ItemContainerTransitions(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            that.ItemContainerTransitions = (global::Microsoft.UI.Xaml.Media.Animation.TransitionCollection)Value;
        }
        private object get_371_TreeView_ItemTemplateSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.ItemTemplateSelector;
        }
        private void set_371_TreeView_ItemTemplateSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            that.ItemTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_372_TreeView_RootNodes(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.RootNodes;
        }
        private object get_373_TreeViewNode_Children(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Children;
        }
        private object get_374_TreeViewNode_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Content;
        }
        private void set_374_TreeViewNode_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_375_TreeViewNode_Depth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Depth;
        }
        private object get_376_TreeViewNode_HasChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasChildren;
        }
        private object get_377_TreeViewNode_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_377_TreeViewNode_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_378_TreeViewNode_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.IsExpanded;
        }
        private void set_378_TreeViewNode_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_379_TreeViewNode_Parent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Parent;
        }
        private object get_380_TreeView_SelectedItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.SelectedItem;
        }
        private void set_380_TreeView_SelectedItem(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_381_TreeView_SelectedItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.SelectedItems;
        }
        private object get_382_TreeView_SelectedNode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.SelectedNode;
        }
        private void set_382_TreeView_SelectedNode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            that.SelectedNode = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)Value;
        }
        private object get_383_TreeView_SelectedNodes(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.SelectedNodes;
        }
        private object get_384_TreeViewItem_ItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            return that.ItemsSource;
        }
        private void set_384_TreeViewItem_ItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_385_TreeViewItem_CollapsedGlyph(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            return that.CollapsedGlyph;
        }
        private void set_385_TreeViewItem_CollapsedGlyph(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            that.CollapsedGlyph = (global::System.String)Value;
        }
        private object get_386_TreeViewItem_ExpandedGlyph(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            return that.ExpandedGlyph;
        }
        private void set_386_TreeViewItem_ExpandedGlyph(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            that.ExpandedGlyph = (global::System.String)Value;
        }
        private object get_387_TreeViewItem_GlyphBrush(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            return that.GlyphBrush;
        }
        private void set_387_TreeViewItem_GlyphBrush(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            that.GlyphBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_388_TreeViewItem_GlyphOpacity(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            return that.GlyphOpacity;
        }
        private void set_388_TreeViewItem_GlyphOpacity(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            that.GlyphOpacity = (global::System.Double)Value;
        }
        private object get_389_TreeViewItem_GlyphSize(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            return that.GlyphSize;
        }
        private void set_389_TreeViewItem_GlyphSize(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            that.GlyphSize = (global::System.Double)Value;
        }
        private object get_390_TreeViewItem_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_390_TreeViewItem_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_391_TreeViewItem_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            return that.IsExpanded;
        }
        private void set_391_TreeViewItem_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_392_TreeViewItem_TreeViewItemTemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            return that.TreeViewItemTemplateSettings;
        }
        private object get_393_ProjectSidePanelControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Projects.ProjectSidePanelControl)instance;
            return that.ViewModel;
        }
        private void set_393_ProjectSidePanelControl_ViewModel(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Controls.Projects.ProjectSidePanelControl)instance;
            that.ViewModel = (global::InXone.WinUI.Controls.ViewModels.ProjectViewerViewModel)Value;
        }
        private object get_394_GridSplitter_GripperCursor(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.GridSplitter)instance;
            return that.GripperCursor;
        }
        private void set_394_GridSplitter_GripperCursor(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.GridSplitter)instance;
            that.GripperCursor = (global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperCursorType)Value;
        }
        private object get_395_GridSplitter_ResizeBehavior(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.GridSplitter)instance;
            return that.ResizeBehavior;
        }
        private void set_395_GridSplitter_ResizeBehavior(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.GridSplitter)instance;
            that.ResizeBehavior = (global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GridResizeBehavior)Value;
        }
        private object get_396_GridSplitter_ResizeDirection(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.GridSplitter)instance;
            return that.ResizeDirection;
        }
        private void set_396_GridSplitter_ResizeDirection(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.GridSplitter)instance;
            that.ResizeDirection = (global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.GridResizeDirection)Value;
        }
        private object get_397_GridSplitter_Element(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.GridSplitter)instance;
            return that.Element;
        }
        private void set_397_GridSplitter_Element(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.GridSplitter)instance;
            that.Element = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_398_GridSplitter_GripperForeground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.GridSplitter)instance;
            return that.GripperForeground;
        }
        private void set_398_GridSplitter_GripperForeground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.GridSplitter)instance;
            that.GripperForeground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_399_GridSplitter_ParentLevel(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.GridSplitter)instance;
            return that.ParentLevel;
        }
        private void set_399_GridSplitter_ParentLevel(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.GridSplitter)instance;
            that.ParentLevel = (global::System.Int32)Value;
        }
        private object get_400_GridSplitter_GripperCustomCursorResource(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.GridSplitter)instance;
            return that.GripperCustomCursorResource;
        }
        private void set_400_GridSplitter_GripperCustomCursorResource(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.GridSplitter)instance;
            that.GripperCustomCursorResource = (global::System.Int32)Value;
        }
        private object get_401_GridSplitter_CursorBehavior(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.GridSplitter)instance;
            return that.CursorBehavior;
        }
        private void set_401_GridSplitter_CursorBehavior(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.GridSplitter)instance;
            that.CursorBehavior = (global::CommunityToolkit.WinUI.UI.Controls.GridSplitter.SplitterCursorBehavior)Value;
        }
        private object get_402_ProjectViewerControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Projects.ProjectViewerControl)instance;
            return that.ViewModel;
        }
        private object get_403_ReferenceDataFormControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataFormControl)instance;
            return that.ViewModel;
        }
        private void set_403_ReferenceDataFormControl_ViewModel(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataFormControl)instance;
            that.ViewModel = (global::InXone.WinUI.Controls.ViewModels.ReferenceDataFormViewModel)Value;
        }
        private object get_404_ReferenceDataFormStackControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataFormStackControl)instance;
            return that.ViewModel;
        }
        private void set_404_ReferenceDataFormStackControl_ViewModel(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataFormStackControl)instance;
            that.ViewModel = (global::InXone.WinUI.Controls.ViewModels.ReferenceDataFormStackViewModel)Value;
        }
        private object get_405_ReferenceDataGridControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataGridControl)instance;
            return that.ViewModel;
        }
        private object get_406_ReferenceDataEditorControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.ReferenceData.ReferenceDataEditorControl)instance;
            return that.ViewModel;
        }
        private object get_407_ReferenceDataValidationContentDialog_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.ReferenceData.ReferenceDataValidationContentDialog)instance;
            return that.ViewModel;
        }
        private void set_407_ReferenceDataValidationContentDialog_ViewModel(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Controls.ReferenceData.ReferenceDataValidationContentDialog)instance;
            that.ViewModel = (global::InXone.WinUI.Controls.ViewModels.ReferenceDataValidationViewModel)Value;
        }
        private object get_408_ReferenceListViewControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.ReferenceLists.ReferenceListViewControl)instance;
            return that.ViewModel;
        }
        private object get_409_ReferenceListViewControl_ParentMenu(object instance)
        {
            var that = (global::InXone.WinUI.Controls.ReferenceLists.ReferenceListViewControl)instance;
            return that.ParentMenu;
        }
        private void set_409_ReferenceListViewControl_ParentMenu(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Controls.ReferenceLists.ReferenceListViewControl)instance;
            that.ParentMenu = (global::InXone.DataObjects.ViewModels.IMenuItemParent)Value;
        }
        private object get_410_TextButtonControl_Texto(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Utilities.TextButtonControl)instance;
            return that.Texto;
        }
        private void set_410_TextButtonControl_Texto(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Controls.Utilities.TextButtonControl)instance;
            that.Texto = (global::System.String)Value;
        }
        private object get_411_TextButtonControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Utilities.TextButtonControl)instance;
            return that.ViewModel;
        }
        private object get_412_TextEditorControl_Texto(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Utilities.TextEditorControl)instance;
            return that.Texto;
        }
        private void set_412_TextEditorControl_Texto(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Controls.Utilities.TextEditorControl)instance;
            that.Texto = (global::System.String)Value;
        }
        private object get_413_TextEditorControl_m_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Utilities.TextEditorControl)instance;
            return that.m_ViewModel;
        }
        private void set_413_TextEditorControl_m_ViewModel(object instance, object Value)
        {
            var that = (global::InXone.WinUI.Controls.Utilities.TextEditorControl)instance;
            that.m_ViewModel = (global::InXone.WinUI.Controls.ViewModels.TextEditorViewModel)Value;
        }
        private object get_414_WebView2_Source(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            return that.Source;
        }
        private void set_414_WebView2_Source(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            that.Source = (global::System.Uri)Value;
        }
        private object get_415_WebView2_CanGoBack(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            return that.CanGoBack;
        }
        private void set_415_WebView2_CanGoBack(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            that.CanGoBack = (global::System.Boolean)Value;
        }
        private object get_416_WebView2_CanGoForward(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            return that.CanGoForward;
        }
        private void set_416_WebView2_CanGoForward(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            that.CanGoForward = (global::System.Boolean)Value;
        }
        private object get_417_WebView2_CoreWebView2(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            return that.CoreWebView2;
        }
        private object get_418_WebView2_DefaultBackgroundColor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            return that.DefaultBackgroundColor;
        }
        private void set_418_WebView2_DefaultBackgroundColor(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            that.DefaultBackgroundColor = (global::Windows.UI.Color)Value;
        }
        private object get_419_WebBrowserControl_ViewModel(object instance)
        {
            var that = (global::InXone.WinUI.Controls.Web.WebBrowserControl)instance;
            return that.ViewModel;
        }
        private object get_420_DoubleToObjectConverter_TrueValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            return that.TrueValue;
        }
        private void set_420_DoubleToObjectConverter_TrueValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            that.TrueValue = (global::System.Object)Value;
        }
        private object get_421_DoubleToObjectConverter_FalseValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            return that.FalseValue;
        }
        private void set_421_DoubleToObjectConverter_FalseValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            that.FalseValue = (global::System.Object)Value;
        }
        private object get_422_DoubleToObjectConverter_NullValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            return that.NullValue;
        }
        private void set_422_DoubleToObjectConverter_NullValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            that.NullValue = (global::System.Object)Value;
        }
        private object get_423_DoubleToObjectConverter_GreaterThan(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            return that.GreaterThan;
        }
        private void set_423_DoubleToObjectConverter_GreaterThan(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            that.GreaterThan = (global::System.Double)Value;
        }
        private object get_424_DoubleToObjectConverter_LessThan(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            return that.LessThan;
        }
        private void set_424_DoubleToObjectConverter_LessThan(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            that.LessThan = (global::System.Double)Value;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember xamlMember = null;
            global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "InXone.WinUI.Controls.AboutControl.ParentMenu":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.AboutControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ParentMenu", "InXone.DataObjects.ViewModels.IMenuItemParent");
                xamlMember.Getter = get_0_AboutControl_ParentMenu;
                xamlMember.Setter = set_0_AboutControl_ParentMenu;
                break;
            case "InXone.WinUI.Controls.AboutControl.Title":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.AboutControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_1_AboutControl_Title;
                xamlMember.Setter = set_1_AboutControl_Title;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.IsIndeterminate":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsIndeterminate", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_ProgressBar_IsIndeterminate;
                xamlMember.Setter = set_2_ProgressBar_IsIndeterminate;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.ShowError":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ShowError", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_ProgressBar_ShowError;
                xamlMember.Setter = set_3_ProgressBar_ShowError;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.ShowPaused":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ShowPaused", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_ProgressBar_ShowPaused;
                xamlMember.Setter = set_4_ProgressBar_ShowPaused;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.TemplateSettings":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings");
                xamlMember.Getter = get_5_ProgressBar_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "InXone.WinUI.Controls.Accounts.AccountLoginControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Accounts.AccountLoginControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.WinUI.Controls.ViewModels.LoginViewModel");
                xamlMember.Getter = get_6_AccountLoginControl_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "InXone.WinUI.Controls.Utilities.KeyPadControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Utilities.KeyPadControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.Uwp.ViewModels.KeyPadViewModel");
                xamlMember.Getter = get_7_KeyPadControl_ViewModel;
                xamlMember.Setter = set_7_KeyPadControl_ViewModel;
                break;
            case "InXone.WinUI.Controls.Utilities.KeyPadControl.ParentMenu":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Utilities.KeyPadControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ParentMenu", "InXone.DataObjects.ViewModels.IMenuItemParent");
                xamlMember.Getter = get_8_KeyPadControl_ParentMenu;
                xamlMember.Setter = set_8_KeyPadControl_ParentMenu;
                break;
            case "InXone.WinUI.Controls.Accounts.AccountPinLoginControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Accounts.AccountPinLoginControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.Uwp.ViewModels.KeyPadViewModel");
                xamlMember.Getter = get_9_AccountPinLoginControl_ViewModel;
                xamlMember.Setter = set_9_AccountPinLoginControl_ViewModel;
                break;
            case "InXone.WinUI.Controls.Accounts.AccountPinLoginControl.ParentMenu":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Accounts.AccountPinLoginControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ParentMenu", "InXone.DataObjects.ViewModels.IMenuItemParent");
                xamlMember.Getter = get_10_AccountPinLoginControl_ParentMenu;
                xamlMember.Setter = set_10_AccountPinLoginControl_ParentMenu;
                break;
            case "InXone.WinUI.Controls.Assets.CustomRowStyleSelector.Parent":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Assets.CustomRowStyleSelector");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Parent", "Microsoft.UI.Xaml.Controls.UserControl");
                xamlMember.Getter = get_11_CustomRowStyleSelector_Parent;
                xamlMember.Setter = set_11_CustomRowStyleSelector_Parent;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.DataGridRowControl.SelectionBorderVisibility":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.DataGridRowControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SelectionBorderVisibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_DataGridRowControl_SelectionBorderVisibility;
                xamlMember.Setter = set_12_DataGridRowControl_SelectionBorderVisibility;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.DataGridRowControl.HighlightSelectionBorderVisibility":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.DataGridRowControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "HighlightSelectionBorderVisibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_DataGridRowControl_HighlightSelectionBorderVisibility;
                xamlMember.Setter = set_13_DataGridRowControl_HighlightSelectionBorderVisibility;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.DataGridRowControl.SelectionForeground":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.DataGridRowControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SelectionForeground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_DataGridRowControl_SelectionForeground;
                xamlMember.Setter = set_14_DataGridRowControl_SelectionForeground;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.DataGridRowControl.RowHoverForeground":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.DataGridRowControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "RowHoverForeground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_DataGridRowControl_RowHoverForeground;
                xamlMember.Setter = set_15_DataGridRowControl_RowHoverForeground;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.DataGridRowControl.RowBorderState":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.DataGridRowControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "RowBorderState", "String");
                xamlMember.Getter = get_16_DataGridRowControl_RowBorderState;
                xamlMember.Setter = set_16_DataGridRowControl_RowBorderState;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DockPanel.LastChildFill":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DockPanel");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "LastChildFill", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_DockPanel_LastChildFill;
                xamlMember.Setter = set_17_DockPanel_LastChildFill;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DockPanel.Padding":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DockPanel");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Padding", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_DockPanel_Padding;
                xamlMember.Setter = set_18_DockPanel_Padding;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DockPanel.Dock":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DockPanel");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Dock", "CommunityToolkit.WinUI.UI.Controls.Dock");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.FrameworkElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_19_DockPanel_Dock;
                xamlMember.Setter = set_19_DockPanel_Dock;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.AllowResizingColumns":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AllowResizingColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_SfGridBase_AllowResizingColumns;
                xamlMember.Setter = set_20_SfGridBase_AllowResizingColumns;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.AutoGenerateColumns":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AutoGenerateColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_SfGridBase_AutoGenerateColumns;
                xamlMember.Setter = set_21_SfGridBase_AutoGenerateColumns;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.ColumnWidthMode":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ColumnWidthMode", "Syncfusion.UI.Xaml.Grids.ColumnWidthMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_SfDataGrid_ColumnWidthMode;
                xamlMember.Setter = set_22_SfDataGrid_ColumnWidthMode;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.ItemsSource":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_SfDataGrid_ItemsSource;
                xamlMember.Setter = set_23_SfDataGrid_ItemsSource;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.SelectedItem":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_SfGridBase_SelectedItem;
                xamlMember.Setter = set_24_SfGridBase_SelectedItem;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.AllowResizingHiddenColumns":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AllowResizingHiddenColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_SfGridBase_AllowResizingHiddenColumns;
                xamlMember.Setter = set_25_SfGridBase_AllowResizingHiddenColumns;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.AllowSorting":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AllowSorting", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_SfGridBase_AllowSorting;
                xamlMember.Setter = set_26_SfGridBase_AllowSorting;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.RowStyleSelector":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "RowStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_SfDataGrid_RowStyleSelector;
                xamlMember.Setter = set_27_SfDataGrid_RowStyleSelector;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.AllowFiltering":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AllowFiltering", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_SfDataGrid_AllowFiltering;
                xamlMember.Setter = set_28_SfDataGrid_AllowFiltering;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.EnableDataVirtualization":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "EnableDataVirtualization", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_SfDataGrid_EnableDataVirtualization;
                xamlMember.Setter = set_29_SfDataGrid_EnableDataVirtualization;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.Columns":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Columns", "Syncfusion.UI.Xaml.DataGrid.Columns");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_SfDataGrid_Columns;
                xamlMember.Setter = set_30_SfDataGrid_Columns;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.ColumnMemberType":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ColumnMemberType", "System.Type");
                xamlMember.Getter = get_31_GridColumn_ColumnMemberType;
                xamlMember.Setter = set_31_GridColumn_ColumnMemberType;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.FilterRowCellStyle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FilterRowCellStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_GridColumn_FilterRowCellStyle;
                xamlMember.Setter = set_32_GridColumn_FilterRowCellStyle;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.UseBindingValue":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "UseBindingValue", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_GridColumn_UseBindingValue;
                xamlMember.Setter = set_33_GridColumn_UseBindingValue;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.ColumnWidthMode":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ColumnWidthMode", "Syncfusion.UI.Xaml.Grids.ColumnWidthMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_GridColumn_ColumnWidthMode;
                xamlMember.Setter = set_34_GridColumn_ColumnWidthMode;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.AllowDragging":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AllowDragging", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_GridColumn_AllowDragging;
                xamlMember.Setter = set_35_GridColumn_AllowDragging;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.AllowGrouping":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AllowGrouping", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_GridColumn_AllowGrouping;
                xamlMember.Setter = set_36_GridColumn_AllowGrouping;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.AllowResizing":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AllowResizing", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_GridColumn_AllowResizing;
                xamlMember.Setter = set_37_GridColumn_AllowResizing;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.AllowFiltering":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AllowFiltering", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_GridColumn_AllowFiltering;
                xamlMember.Setter = set_38_GridColumn_AllowFiltering;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.ImmediateUpdateColumnFilter":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ImmediateUpdateColumnFilter", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_GridColumn_ImmediateUpdateColumnFilter;
                xamlMember.Setter = set_39_GridColumn_ImmediateUpdateColumnFilter;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.FilterRowOptionsVisibility":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FilterRowOptionsVisibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_GridColumn_FilterRowOptionsVisibility;
                xamlMember.Setter = set_40_GridColumn_FilterRowOptionsVisibility;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.FilterRowCondition":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FilterRowCondition", "Syncfusion.UI.Xaml.DataGrid.FilterRowCondition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_GridColumn_FilterRowCondition;
                xamlMember.Setter = set_41_GridColumn_FilterRowCondition;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.FilterPopupStyle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FilterPopupStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_GridColumn_FilterPopupStyle;
                xamlMember.Setter = set_42_GridColumn_FilterPopupStyle;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.FilterPopupTemplate":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FilterPopupTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_43_GridColumn_FilterPopupTemplate;
                xamlMember.Setter = set_43_GridColumn_FilterPopupTemplate;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.AllowBlankFilters":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AllowBlankFilters", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_GridColumn_AllowBlankFilters;
                xamlMember.Setter = set_44_GridColumn_AllowBlankFilters;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.FilterRowText":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FilterRowText", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_GridColumn_FilterRowText;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.IsCaseSensitiveFilterRow":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsCaseSensitiveFilterRow", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_46_GridColumn_IsCaseSensitiveFilterRow;
                xamlMember.Setter = set_46_GridColumn_IsCaseSensitiveFilterRow;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.GroupMode":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "GroupMode", "Syncfusion.UI.Xaml.Data.DataReflectionMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_GridColumn_GroupMode;
                xamlMember.Setter = set_47_GridColumn_GroupMode;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.SortMode":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SortMode", "Syncfusion.UI.Xaml.Data.DataReflectionMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_48_GridColumn_SortMode;
                xamlMember.Setter = set_48_GridColumn_SortMode;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.CellType":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CellType", "String");
                xamlMember.Getter = get_49_GridColumn_CellType;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.FilteredFrom":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FilteredFrom", "Syncfusion.UI.Xaml.Grids.FilteredFrom");
                xamlMember.Getter = get_50_GridColumn_FilteredFrom;
                xamlMember.Setter = set_50_GridColumn_FilteredFrom;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.FilterPredicates":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FilterPredicates", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Data.FilterPredicate>");
                xamlMember.Getter = get_51_GridColumn_FilterPredicates;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Data.FilterPredicate.FilterType":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Data.FilterPredicate");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FilterType", "Syncfusion.UI.Xaml.Data.FilterType");
                xamlMember.Getter = get_52_FilterPredicate_FilterType;
                xamlMember.Setter = set_52_FilterPredicate_FilterType;
                break;
            case "Syncfusion.UI.Xaml.Data.FilterPredicate.FilterValue":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Data.FilterPredicate");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FilterValue", "Object");
                xamlMember.Getter = get_53_FilterPredicate_FilterValue;
                xamlMember.Setter = set_53_FilterPredicate_FilterValue;
                break;
            case "Syncfusion.UI.Xaml.Data.FilterPredicate.PredicateType":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Data.FilterPredicate");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "PredicateType", "Syncfusion.UI.Xaml.Data.PredicateType");
                xamlMember.Getter = get_54_FilterPredicate_PredicateType;
                xamlMember.Setter = set_54_FilterPredicate_PredicateType;
                break;
            case "Syncfusion.UI.Xaml.Data.FilterPredicate.FilterBehavior":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Data.FilterPredicate");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FilterBehavior", "Syncfusion.UI.Xaml.Data.FilterBehavior");
                xamlMember.Getter = get_55_FilterPredicate_FilterBehavior;
                xamlMember.Setter = set_55_FilterPredicate_FilterBehavior;
                break;
            case "Syncfusion.UI.Xaml.Data.FilterPredicate.IsCaseSensitive":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Data.FilterPredicate");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsCaseSensitive", "Boolean");
                xamlMember.Getter = get_56_FilterPredicate_IsCaseSensitive;
                xamlMember.Setter = set_56_FilterPredicate_IsCaseSensitive;
                break;
            case "Syncfusion.UI.Xaml.Data.FilterPredicate.FilterMode":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Data.FilterPredicate");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FilterMode", "Syncfusion.UI.Xaml.Data.ColumnFilter");
                xamlMember.Getter = get_57_FilterPredicate_FilterMode;
                xamlMember.Setter = set_57_FilterPredicate_FilterMode;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.FilterBehavior":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FilterBehavior", "Syncfusion.UI.Xaml.Data.FilterBehavior");
                xamlMember.Getter = get_58_GridColumn_FilterBehavior;
                xamlMember.Setter = set_58_GridColumn_FilterBehavior;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.ColumnFilter":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ColumnFilter", "Syncfusion.UI.Xaml.Data.ColumnFilter");
                xamlMember.Getter = get_59_GridColumn_ColumnFilter;
                xamlMember.Setter = set_59_GridColumn_ColumnFilter;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridColumn.FilterRowEditorType":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FilterRowEditorType", "String");
                xamlMember.Getter = get_60_GridColumn_FilterRowEditorType;
                xamlMember.Setter = set_60_GridColumn_FilterRowEditorType;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.IsAutoGenerated":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsAutoGenerated", "Boolean");
                xamlMember.Getter = get_61_GridColumnBase_IsAutoGenerated;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.ActualWidth":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ActualWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_62_GridColumnBase_ActualWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.MappingName":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "MappingName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_63_GridColumnBase_MappingName;
                xamlMember.Setter = set_63_GridColumnBase_MappingName;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.HeaderText":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "HeaderText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_64_GridColumnBase_HeaderText;
                xamlMember.Setter = set_64_GridColumnBase_HeaderText;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.AllowEditing":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AllowEditing", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_65_GridColumnBase_AllowEditing;
                xamlMember.Setter = set_65_GridColumnBase_AllowEditing;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.IsReadOnly":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsReadOnly", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_GridColumnBase_IsReadOnly;
                xamlMember.Setter = set_66_GridColumnBase_IsReadOnly;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.DataValidationMode":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "DataValidationMode", "Syncfusion.UI.Xaml.Grids.GridValidationMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_67_GridColumnBase_DataValidationMode;
                xamlMember.Setter = set_67_GridColumnBase_DataValidationMode;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.UpdateTrigger":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "UpdateTrigger", "Microsoft.UI.Xaml.Data.UpdateSourceTrigger");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_68_GridColumnBase_UpdateTrigger;
                xamlMember.Setter = set_68_GridColumnBase_UpdateTrigger;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.Padding":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Padding", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_GridColumnBase_Padding;
                xamlMember.Setter = set_69_GridColumnBase_Padding;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.AllowFocus":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AllowFocus", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_70_GridColumnBase_AllowFocus;
                xamlMember.Setter = set_70_GridColumnBase_AllowFocus;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.HeaderTemplate":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_71_GridColumnBase_HeaderTemplate;
                xamlMember.Setter = set_71_GridColumnBase_HeaderTemplate;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.CellTemplate":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CellTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_72_GridColumnBase_CellTemplate;
                xamlMember.Setter = set_72_GridColumnBase_CellTemplate;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.SetCellBoundValue":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SetCellBoundValue", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_73_GridColumnBase_SetCellBoundValue;
                xamlMember.Setter = set_73_GridColumnBase_SetCellBoundValue;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.CellTemplateSelector":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CellTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_74_GridColumnBase_CellTemplateSelector;
                xamlMember.Setter = set_74_GridColumnBase_CellTemplateSelector;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.CellStyle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CellStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_75_GridColumnBase_CellStyle;
                xamlMember.Setter = set_75_GridColumnBase_CellStyle;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.CellStyleSelector":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CellStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_76_GridColumnBase_CellStyleSelector;
                xamlMember.Setter = set_76_GridColumnBase_CellStyleSelector;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.HeaderStyle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "HeaderStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_77_GridColumnBase_HeaderStyle;
                xamlMember.Setter = set_77_GridColumnBase_HeaderStyle;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.AllowSorting":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AllowSorting", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_78_GridColumnBase_AllowSorting;
                xamlMember.Setter = set_78_GridColumnBase_AllowSorting;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.VerticalAlignment":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "VerticalAlignment", "Microsoft.UI.Xaml.VerticalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_79_GridColumnBase_VerticalAlignment;
                xamlMember.Setter = set_79_GridColumnBase_VerticalAlignment;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.TextAlignment":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TextAlignment", "Microsoft.UI.Xaml.TextAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_80_GridColumnBase_TextAlignment;
                xamlMember.Setter = set_80_GridColumnBase_TextAlignment;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.HorizontalHeaderContentAlignment":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "HorizontalHeaderContentAlignment", "Microsoft.UI.Xaml.HorizontalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_GridColumnBase_HorizontalHeaderContentAlignment;
                xamlMember.Setter = set_81_GridColumnBase_HorizontalHeaderContentAlignment;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.Width":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Width", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_82_GridColumnBase_Width;
                xamlMember.Setter = set_82_GridColumnBase_Width;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.IsHidden":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsHidden", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_83_GridColumnBase_IsHidden;
                xamlMember.Setter = set_83_GridColumnBase_IsHidden;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.MaximumWidth":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "MaximumWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_GridColumnBase_MaximumWidth;
                xamlMember.Setter = set_84_GridColumnBase_MaximumWidth;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.MinimumWidth":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "MinimumWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_85_GridColumnBase_MinimumWidth;
                xamlMember.Setter = set_85_GridColumnBase_MinimumWidth;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.ValueBinding":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ValueBinding", "Microsoft.UI.Xaml.Data.BindingBase");
                xamlMember.Getter = get_86_GridColumnBase_ValueBinding;
                xamlMember.Setter = set_86_GridColumnBase_ValueBinding;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.DisplayBinding":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "DisplayBinding", "Microsoft.UI.Xaml.Data.BindingBase");
                xamlMember.Getter = get_87_GridColumnBase_DisplayBinding;
                xamlMember.Setter = set_87_GridColumnBase_DisplayBinding;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.ShowHeaderToolTip":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ShowHeaderToolTip", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_88_GridColumnBase_ShowHeaderToolTip;
                xamlMember.Setter = set_88_GridColumnBase_ShowHeaderToolTip;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.ToolTipTemplate":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ToolTipTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_89_GridColumnBase_ToolTipTemplate;
                xamlMember.Setter = set_89_GridColumnBase_ToolTipTemplate;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.HeaderToolTipTemplate":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "HeaderToolTipTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_GridColumnBase_HeaderToolTipTemplate;
                xamlMember.Setter = set_90_GridColumnBase_HeaderToolTipTemplate;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.ToolTipTemplateSelector":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ToolTipTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_91_GridColumnBase_ToolTipTemplateSelector;
                xamlMember.Setter = set_91_GridColumnBase_ToolTipTemplateSelector;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.ShowToolTip":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ShowToolTip", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_92_GridColumnBase_ShowToolTip;
                xamlMember.Setter = set_92_GridColumnBase_ShowToolTip;
                break;
            case "Syncfusion.UI.Xaml.Grids.GridColumnBase.SetCellBoundToolTip":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.GridColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SetCellBoundToolTip", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_93_GridColumnBase_SetCellBoundToolTip;
                xamlMember.Setter = set_93_GridColumnBase_SetCellBoundToolTip;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.RowGenerator":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "RowGenerator", "Syncfusion.UI.Xaml.DataGrid.RowGenerator");
                xamlMember.Getter = get_94_SfDataGrid_RowGenerator;
                xamlMember.Setter = set_94_SfDataGrid_RowGenerator;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.ColumnResizingController":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ColumnResizingController", "Syncfusion.UI.Xaml.DataGrid.GridColumnResizingController");
                xamlMember.Getter = get_95_SfDataGrid_ColumnResizingController;
                xamlMember.Setter = set_95_SfDataGrid_ColumnResizingController;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.ColumnSizer":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ColumnSizer", "Syncfusion.UI.Xaml.DataGrid.DataGridColumnSizer");
                xamlMember.Getter = get_96_SfDataGrid_ColumnSizer;
                xamlMember.Setter = set_96_SfDataGrid_ColumnSizer;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.BindableView":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "BindableView", "Syncfusion.UI.Xaml.Data.ICollectionViewAdv");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_97_SfDataGrid_BindableView;
                xamlMember.Setter = set_97_SfDataGrid_BindableView;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.View":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "View", "Syncfusion.UI.Xaml.Data.ICollectionViewAdv");
                xamlMember.Getter = get_98_SfDataGrid_View;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.ColumnDragDropController":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ColumnDragDropController", "Syncfusion.UI.Xaml.DataGrid.DataGridColumnDragDropController");
                xamlMember.Getter = get_99_SfDataGrid_ColumnDragDropController;
                xamlMember.Setter = set_99_SfDataGrid_ColumnDragDropController;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.ShowBusyIndicator":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ShowBusyIndicator", "Boolean");
                xamlMember.Getter = get_100_SfDataGrid_ShowBusyIndicator;
                xamlMember.Setter = set_100_SfDataGrid_ShowBusyIndicator;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.LostFocusBehavior":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "LostFocusBehavior", "Syncfusion.UI.Xaml.Grids.LostFocusBehavior");
                xamlMember.Getter = get_101_SfDataGrid_LostFocusBehavior;
                xamlMember.Setter = set_101_SfDataGrid_LostFocusBehavior;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.CellRenderers":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CellRenderers", "Syncfusion.UI.Xaml.DataGrid.Renderers.GridCellRendererCollection");
                xamlMember.Getter = get_102_SfDataGrid_CellRenderers;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.UnboundRowCellRenderers":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "UnboundRowCellRenderers", "Syncfusion.UI.Xaml.DataGrid.Renderers.GridCellRendererCollection");
                xamlMember.Getter = get_103_SfDataGrid_UnboundRowCellRenderers;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.FilterRowCellRenderers":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FilterRowCellRenderers", "Syncfusion.UI.Xaml.DataGrid.Renderers.GridCellRendererCollection");
                xamlMember.Getter = get_104_SfDataGrid_FilterRowCellRenderers;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.CoveredCells":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CoveredCells", "Syncfusion.UI.Xaml.DataGrid.CoveredCellInfoCollection");
                xamlMember.Getter = get_105_SfDataGrid_CoveredCells;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Grids.CoveredCellInfo.MappedRowColumnIndex":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.CoveredCellInfo");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "MappedRowColumnIndex", "Syncfusion.UI.Xaml.Grids.ScrollAxis.RowColumnIndex");
                xamlMember.Getter = get_106_CoveredCellInfo_MappedRowColumnIndex;
                xamlMember.Setter = set_106_CoveredCellInfo_MappedRowColumnIndex;
                break;
            case "Syncfusion.UI.Xaml.Grids.CoveredCellInfo.Row":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.CoveredCellInfo");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Row", "Int32");
                xamlMember.Getter = get_107_CoveredCellInfo_Row;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Grids.CoveredCellInfo.Left":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.CoveredCellInfo");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Left", "Int32");
                xamlMember.Getter = get_108_CoveredCellInfo_Left;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Grids.CoveredCellInfo.Right":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.CoveredCellInfo");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Right", "Int32");
                xamlMember.Getter = get_109_CoveredCellInfo_Right;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Grids.CoveredCellInfo.Top":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.CoveredCellInfo");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Top", "Int32");
                xamlMember.Getter = get_110_CoveredCellInfo_Top;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Grids.CoveredCellInfo.Bottom":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.CoveredCellInfo");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Bottom", "Int32");
                xamlMember.Getter = get_111_CoveredCellInfo_Bottom;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Grids.CoveredCellInfo.Width":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.CoveredCellInfo");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Width", "Int32");
                xamlMember.Getter = get_112_CoveredCellInfo_Width;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Grids.CoveredCellInfo.Height":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.CoveredCellInfo");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Height", "Int32");
                xamlMember.Getter = get_113_CoveredCellInfo_Height;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Grids.CoveredCellInfo.Name":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.CoveredCellInfo");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_114_CoveredCellInfo_Name;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Grids.CoveredCellInfo.RowSpan":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.CoveredCellInfo");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "RowSpan", "Int32");
                xamlMember.Getter = get_115_CoveredCellInfo_RowSpan;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.SelectionController":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SelectionController", "Syncfusion.UI.Xaml.DataGrid.IGridSelectionController");
                xamlMember.Getter = get_116_SfDataGrid_SelectionController;
                xamlMember.Setter = set_116_SfDataGrid_SelectionController;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.NotificationSubscriptionMode":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "NotificationSubscriptionMode", "Syncfusion.UI.Xaml.Data.NotificationSubscriptionMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_117_SfDataGrid_NotificationSubscriptionMode;
                xamlMember.Setter = set_117_SfDataGrid_NotificationSubscriptionMode;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.SerializationController":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SerializationController", "Syncfusion.UI.Xaml.DataGrid.Serialization.SerializationController");
                xamlMember.Getter = get_118_SfDataGrid_SerializationController;
                xamlMember.Setter = set_118_SfDataGrid_SerializationController;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.AutoScroller":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AutoScroller", "Syncfusion.UI.Xaml.DataGrid.AutoScroller");
                xamlMember.Getter = get_119_SfDataGrid_AutoScroller;
                xamlMember.Setter = set_119_SfDataGrid_AutoScroller;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.FrozenFooterRowsCount":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FrozenFooterRowsCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_120_SfDataGrid_FrozenFooterRowsCount;
                xamlMember.Setter = set_120_SfDataGrid_FrozenFooterRowsCount;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.FrozenRowsCount":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FrozenRowsCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_121_SfDataGrid_FrozenRowsCount;
                xamlMember.Setter = set_121_SfDataGrid_FrozenRowsCount;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.SourceType":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SourceType", "System.Type");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_122_SfDataGrid_SourceType;
                xamlMember.Setter = set_122_SfDataGrid_SourceType;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.UsePLINQ":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "UsePLINQ", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_123_SfDataGrid_UsePLINQ;
                xamlMember.Setter = set_123_SfDataGrid_UsePLINQ;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.AddNewRowText":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AddNewRowText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_124_SfDataGrid_AddNewRowText;
                xamlMember.Setter = set_124_SfDataGrid_AddNewRowText;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.SortComparers":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SortComparers", "Syncfusion.UI.Xaml.Data.SortComparers");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_125_SfDataGrid_SortComparers;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Data.SortComparer.PropertyName":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Data.SortComparer");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "PropertyName", "String");
                xamlMember.Getter = get_126_SortComparer_PropertyName;
                xamlMember.Setter = set_126_SortComparer_PropertyName;
                break;
            case "Syncfusion.UI.Xaml.Data.SortComparer.Comparer":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Data.SortComparer");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Comparer", "System.Collections.Generic.IComparer`1<Object>");
                xamlMember.Getter = get_127_SortComparer_Comparer;
                xamlMember.Setter = set_127_SortComparer_Comparer;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.SelectionBackground":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SelectionBackground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_128_SfDataGrid_SelectionBackground;
                xamlMember.Setter = set_128_SfDataGrid_SelectionBackground;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.SelectionForeground":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SelectionForeground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_129_SfDataGrid_SelectionForeground;
                xamlMember.Setter = set_129_SfDataGrid_SelectionForeground;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.RowStyle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "RowStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_130_SfDataGrid_RowStyle;
                xamlMember.Setter = set_130_SfDataGrid_RowStyle;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.UnboundRowStyle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "UnboundRowStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_131_SfDataGrid_UnboundRowStyle;
                xamlMember.Setter = set_131_SfDataGrid_UnboundRowStyle;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.AlternationCount":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AlternationCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_132_SfDataGrid_AlternationCount;
                xamlMember.Setter = set_132_SfDataGrid_AlternationCount;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.AlternatingRowStyle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AlternatingRowStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_133_SfDataGrid_AlternatingRowStyle;
                xamlMember.Setter = set_133_SfDataGrid_AlternatingRowStyle;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.AlternatingRowStyleSelector":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AlternatingRowStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_134_SfDataGrid_AlternatingRowStyleSelector;
                xamlMember.Setter = set_134_SfDataGrid_AlternatingRowStyleSelector;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.CellStyle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CellStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_135_SfDataGrid_CellStyle;
                xamlMember.Setter = set_135_SfDataGrid_CellStyle;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.UnboundRowCellStyle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "UnboundRowCellStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_136_SfDataGrid_UnboundRowCellStyle;
                xamlMember.Setter = set_136_SfDataGrid_UnboundRowCellStyle;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.CellStyleSelector":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CellStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_137_SfDataGrid_CellStyleSelector;
                xamlMember.Setter = set_137_SfDataGrid_CellStyleSelector;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.HeaderStyle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "HeaderStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_138_SfDataGrid_HeaderStyle;
                xamlMember.Setter = set_138_SfDataGrid_HeaderStyle;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.HeaderTemplate":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_139_SfDataGrid_HeaderTemplate;
                xamlMember.Setter = set_139_SfDataGrid_HeaderTemplate;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.GroupColumnDescriptions":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "GroupColumnDescriptions", "Syncfusion.UI.Xaml.DataGrid.GroupColumnDescriptions");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_140_SfDataGrid_GroupColumnDescriptions;
                xamlMember.Setter = set_140_SfDataGrid_GroupColumnDescriptions;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription.ColumnName":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ColumnName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_141_GroupColumnDescription_ColumnName;
                xamlMember.Setter = set_141_GroupColumnDescription_ColumnName;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription.KeySelector":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "KeySelector", "System.Func`3<String, Object, Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_142_GroupColumnDescription_KeySelector;
                xamlMember.Setter = set_142_GroupColumnDescription_KeySelector;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription.Comparer":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Comparer", "System.Collections.Generic.IComparer`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_143_GroupColumnDescription_Comparer;
                xamlMember.Setter = set_143_GroupColumnDescription_Comparer;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription.SortGroupRecords":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GroupColumnDescription");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SortGroupRecords", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_144_GroupColumnDescription_SortGroupRecords;
                xamlMember.Setter = set_144_GroupColumnDescription_SortGroupRecords;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.GroupSummaryRows":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "GroupSummaryRows", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.DataGrid.GridSummaryRow>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_145_SfDataGrid_GroupSummaryRows;
                xamlMember.Setter = set_145_SfDataGrid_GroupSummaryRows;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridSummaryRow.Name":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridSummaryRow");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_146_GridSummaryRow_Name;
                xamlMember.Setter = set_146_GridSummaryRow_Name;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridSummaryRow.ShowSummaryInRow":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridSummaryRow");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ShowSummaryInRow", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_147_GridSummaryRow_ShowSummaryInRow;
                xamlMember.Setter = set_147_GridSummaryRow_ShowSummaryInRow;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridSummaryRow.CalculationUnit":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridSummaryRow");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CalculationUnit", "Syncfusion.UI.Xaml.Data.SummaryCalculationUnit");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_148_GridSummaryRow_CalculationUnit;
                xamlMember.Setter = set_148_GridSummaryRow_CalculationUnit;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridSummaryRow.SummaryColumns":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridSummaryRow");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SummaryColumns", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Data.ISummaryColumn>");
                xamlMember.Getter = get_149_GridSummaryRow_SummaryColumns;
                xamlMember.Setter = set_149_GridSummaryRow_SummaryColumns;
                break;
            case "Syncfusion.UI.Xaml.Data.ISummaryColumn.CustomAggregate":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Data.ISummaryColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CustomAggregate", "Syncfusion.UI.Xaml.Data.ISummaryAggregate");
                xamlMember.Getter = get_150_ISummaryColumn_CustomAggregate;
                xamlMember.Setter = set_150_ISummaryColumn_CustomAggregate;
                break;
            case "Syncfusion.UI.Xaml.Data.ISummaryColumn.Format":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Data.ISummaryColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Format", "String");
                xamlMember.Getter = get_151_ISummaryColumn_Format;
                xamlMember.Setter = set_151_ISummaryColumn_Format;
                break;
            case "Syncfusion.UI.Xaml.Data.ISummaryColumn.MappingName":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Data.ISummaryColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "MappingName", "String");
                xamlMember.Getter = get_152_ISummaryColumn_MappingName;
                xamlMember.Setter = set_152_ISummaryColumn_MappingName;
                break;
            case "Syncfusion.UI.Xaml.Data.ISummaryColumn.Name":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Data.ISummaryColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_153_ISummaryColumn_Name;
                xamlMember.Setter = set_153_ISummaryColumn_Name;
                break;
            case "Syncfusion.UI.Xaml.Data.ISummaryColumn.SummaryType":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Data.ISummaryColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SummaryType", "Syncfusion.UI.Xaml.Data.SummaryType");
                xamlMember.Getter = get_154_ISummaryColumn_SummaryType;
                xamlMember.Setter = set_154_ISummaryColumn_SummaryType;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridSummaryRow.Title":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridSummaryRow");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_155_GridSummaryRow_Title;
                xamlMember.Setter = set_155_GridSummaryRow_Title;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridSummaryRow.TitleTemplate":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridSummaryRow");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TitleTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.Getter = get_156_GridSummaryRow_TitleTemplate;
                xamlMember.Setter = set_156_GridSummaryRow_TitleTemplate;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridSummaryRow.TitleTemplateSelector":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridSummaryRow");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TitleTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.Getter = get_157_GridSummaryRow_TitleTemplateSelector;
                xamlMember.Setter = set_157_GridSummaryRow_TitleTemplateSelector;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridSummaryRow.TitleColumnCount":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridSummaryRow");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TitleColumnCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_158_GridSummaryRow_TitleColumnCount;
                xamlMember.Setter = set_158_GridSummaryRow_TitleColumnCount;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.CaptionSummaryRow":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CaptionSummaryRow", "Syncfusion.UI.Xaml.DataGrid.GridSummaryRow");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_159_SfDataGrid_CaptionSummaryRow;
                xamlMember.Setter = set_159_SfDataGrid_CaptionSummaryRow;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.TableSummaryRows":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TableSummaryRows", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.DataGrid.GridSummaryRow>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_160_SfDataGrid_TableSummaryRows;
                xamlMember.Setter = set_160_SfDataGrid_TableSummaryRows;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.UnboundRows":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "UnboundRows", "Syncfusion.UI.Xaml.DataGrid.UnboundRows");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_161_SfDataGrid_UnboundRows;
                xamlMember.Setter = set_161_SfDataGrid_UnboundRows;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridUnboundRow.RowIndex":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridUnboundRow");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "RowIndex", "Int32");
                xamlMember.Getter = get_162_GridUnboundRow_RowIndex;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridUnboundRow.UnboundRowIndex":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridUnboundRow");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "UnboundRowIndex", "Int32");
                xamlMember.Getter = get_163_GridUnboundRow_UnboundRowIndex;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridUnboundRow.ShowBelowSummary":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridUnboundRow");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ShowBelowSummary", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_164_GridUnboundRow_ShowBelowSummary;
                xamlMember.Setter = set_164_GridUnboundRow_ShowBelowSummary;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridUnboundRow.Position":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridUnboundRow");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Position", "Syncfusion.UI.Xaml.Grids.UnboundRowsPosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_165_GridUnboundRow_Position;
                xamlMember.Setter = set_165_GridUnboundRow_Position;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.ShowColumnWhenGrouped":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ShowColumnWhenGrouped", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_166_SfDataGrid_ShowColumnWhenGrouped;
                xamlMember.Setter = set_166_SfDataGrid_ShowColumnWhenGrouped;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.AllowFrozenGroupHeaders":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AllowFrozenGroupHeaders", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_167_SfDataGrid_AllowFrozenGroupHeaders;
                xamlMember.Setter = set_167_SfDataGrid_AllowFrozenGroupHeaders;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.CaptionSummaryRowStyle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CaptionSummaryRowStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_168_SfDataGrid_CaptionSummaryRowStyle;
                xamlMember.Setter = set_168_SfDataGrid_CaptionSummaryRowStyle;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.GroupSummaryRowStyle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "GroupSummaryRowStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_169_SfDataGrid_GroupSummaryRowStyle;
                xamlMember.Setter = set_169_SfDataGrid_GroupSummaryRowStyle;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.TableSummaryRowStyle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TableSummaryRowStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_170_SfDataGrid_TableSummaryRowStyle;
                xamlMember.Setter = set_170_SfDataGrid_TableSummaryRowStyle;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.CaptionSummaryRowStyleSelector":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CaptionSummaryRowStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_171_SfDataGrid_CaptionSummaryRowStyleSelector;
                xamlMember.Setter = set_171_SfDataGrid_CaptionSummaryRowStyleSelector;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.GroupSummaryRowStyleSelector":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "GroupSummaryRowStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_172_SfDataGrid_GroupSummaryRowStyleSelector;
                xamlMember.Setter = set_172_SfDataGrid_GroupSummaryRowStyleSelector;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.TableSummaryRowStyleSelector":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TableSummaryRowStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_173_SfDataGrid_TableSummaryRowStyleSelector;
                xamlMember.Setter = set_173_SfDataGrid_TableSummaryRowStyleSelector;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.GroupSummaryCellStyleSelector":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "GroupSummaryCellStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_174_SfDataGrid_GroupSummaryCellStyleSelector;
                xamlMember.Setter = set_174_SfDataGrid_GroupSummaryCellStyleSelector;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.CaptionSummaryCellStyleSelector":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CaptionSummaryCellStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_175_SfDataGrid_CaptionSummaryCellStyleSelector;
                xamlMember.Setter = set_175_SfDataGrid_CaptionSummaryCellStyleSelector;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.TableSummaryCellStyleSelector":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TableSummaryCellStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_176_SfDataGrid_TableSummaryCellStyleSelector;
                xamlMember.Setter = set_176_SfDataGrid_TableSummaryCellStyleSelector;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.IsDynamicItemsSource":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsDynamicItemsSource", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_177_SfDataGrid_IsDynamicItemsSource;
                xamlMember.Setter = set_177_SfDataGrid_IsDynamicItemsSource;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.DataFetchSize":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "DataFetchSize", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_178_SfDataGrid_DataFetchSize;
                xamlMember.Setter = set_178_SfDataGrid_DataFetchSize;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.GroupSummaryCellStyle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "GroupSummaryCellStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_179_SfDataGrid_GroupSummaryCellStyle;
                xamlMember.Setter = set_179_SfDataGrid_GroupSummaryCellStyle;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.CaptionSummaryCellStyle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CaptionSummaryCellStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_180_SfDataGrid_CaptionSummaryCellStyle;
                xamlMember.Setter = set_180_SfDataGrid_CaptionSummaryCellStyle;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.TableSummaryCellStyle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TableSummaryCellStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_181_SfDataGrid_TableSummaryCellStyle;
                xamlMember.Setter = set_181_SfDataGrid_TableSummaryCellStyle;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.ShowGroupDropArea":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ShowGroupDropArea", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_182_SfDataGrid_ShowGroupDropArea;
                xamlMember.Setter = set_182_SfDataGrid_ShowGroupDropArea;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.ClipboardController":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ClipboardController", "Syncfusion.UI.Xaml.DataGrid.IDataGridClipboardController");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_183_SfDataGrid_ClipboardController;
                xamlMember.Setter = set_183_SfDataGrid_ClipboardController;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.GroupCaptionTextFormat":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "GroupCaptionTextFormat", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_184_SfDataGrid_GroupCaptionTextFormat;
                xamlMember.Setter = set_184_SfDataGrid_GroupCaptionTextFormat;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.IsGroupDropAreaExpanded":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsGroupDropAreaExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_185_SfDataGrid_IsGroupDropAreaExpanded;
                xamlMember.Setter = set_185_SfDataGrid_IsGroupDropAreaExpanded;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.AllowGrouping":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AllowGrouping", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_186_SfDataGrid_AllowGrouping;
                xamlMember.Setter = set_186_SfDataGrid_AllowGrouping;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.NewItemPlaceholderPosition":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "NewItemPlaceholderPosition", "Syncfusion.UI.Xaml.Data.NewItemPlaceholderPosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_187_SfDataGrid_NewItemPlaceholderPosition;
                xamlMember.Setter = set_187_SfDataGrid_NewItemPlaceholderPosition;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.NotifyEventsToParentDataGrid":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "NotifyEventsToParentDataGrid", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_188_SfDataGrid_NotifyEventsToParentDataGrid;
                xamlMember.Setter = set_188_SfDataGrid_NotifyEventsToParentDataGrid;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.GroupDropAreaStyle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "GroupDropAreaStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_189_SfDataGrid_GroupDropAreaStyle;
                xamlMember.Setter = set_189_SfDataGrid_GroupDropAreaStyle;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.GroupDropAreaText":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "GroupDropAreaText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_190_SfDataGrid_GroupDropAreaText;
                xamlMember.Setter = set_190_SfDataGrid_GroupDropAreaText;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.LiveDataUpdateMode":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "LiveDataUpdateMode", "Syncfusion.UI.Xaml.Data.LiveDataUpdateMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_191_SfDataGrid_LiveDataUpdateMode;
                xamlMember.Setter = set_191_SfDataGrid_LiveDataUpdateMode;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.SummaryCalculationMode":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SummaryCalculationMode", "Syncfusion.UI.Xaml.Data.SummaryCalculationModes");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_192_SfDataGrid_SummaryCalculationMode;
                xamlMember.Setter = set_192_SfDataGrid_SummaryCalculationMode;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.SummaryCalculationUnit":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SummaryCalculationUnit", "Syncfusion.UI.Xaml.Data.SummaryCalculationUnit");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_193_SfDataGrid_SummaryCalculationUnit;
                xamlMember.Setter = set_193_SfDataGrid_SummaryCalculationUnit;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.AutoExpandGroups":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AutoExpandGroups", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_194_SfDataGrid_AutoExpandGroups;
                xamlMember.Setter = set_194_SfDataGrid_AutoExpandGroups;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.AllowDeleting":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AllowDeleting", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_195_SfDataGrid_AllowDeleting;
                xamlMember.Setter = set_195_SfDataGrid_AllowDeleting;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.DetailsViewDataGridStyle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "DetailsViewDataGridStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_196_SfDataGrid_DetailsViewDataGridStyle;
                xamlMember.Setter = set_196_SfDataGrid_DetailsViewDataGridStyle;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.CanUseViewFilter":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CanUseViewFilter", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_197_SfDataGrid_CanUseViewFilter;
                xamlMember.Setter = set_197_SfDataGrid_CanUseViewFilter;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.FilterPopupStyle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FilterPopupStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_198_SfDataGrid_FilterPopupStyle;
                xamlMember.Setter = set_198_SfDataGrid_FilterPopupStyle;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.FilterPopupTemplate":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FilterPopupTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_199_SfDataGrid_FilterPopupTemplate;
                xamlMember.Setter = set_199_SfDataGrid_FilterPopupTemplate;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.FilterRowPosition":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FilterRowPosition", "Syncfusion.UI.Xaml.DataGrid.FilterRowPosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_200_SfDataGrid_FilterRowPosition;
                xamlMember.Setter = set_200_SfDataGrid_FilterRowPosition;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.DetailsViewDefinition":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "DetailsViewDefinition", "Syncfusion.UI.Xaml.DataGrid.DetailsViewDefinition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_201_SfDataGrid_DetailsViewDefinition;
                xamlMember.Setter = set_201_SfDataGrid_DetailsViewDefinition;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.ViewDefinition.RelationalColumn":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.ViewDefinition");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "RelationalColumn", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_202_ViewDefinition_RelationalColumn;
                xamlMember.Setter = set_202_ViewDefinition_RelationalColumn;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.ShowDetailsViewIndentCell":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ShowDetailsViewIndentCell", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_203_SfDataGrid_ShowDetailsViewIndentCell;
                xamlMember.Setter = set_203_SfDataGrid_ShowDetailsViewIndentCell;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.ReuseRowsOnItemsSourceChange":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ReuseRowsOnItemsSourceChange", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_204_SfDataGrid_ReuseRowsOnItemsSourceChange;
                xamlMember.Setter = set_204_SfDataGrid_ReuseRowsOnItemsSourceChange;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.CanMaintainScrollPosition":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CanMaintainScrollPosition", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_205_SfDataGrid_CanMaintainScrollPosition;
                xamlMember.Setter = set_205_SfDataGrid_CanMaintainScrollPosition;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.GroupDropItemContextFlyout":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "GroupDropItemContextFlyout", "Microsoft.UI.Xaml.Controls.MenuFlyout");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_206_SfDataGrid_GroupDropItemContextFlyout;
                xamlMember.Setter = set_206_SfDataGrid_GroupDropItemContextFlyout;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.GroupDropAreaContextFlyout":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "GroupDropAreaContextFlyout", "Microsoft.UI.Xaml.Controls.MenuFlyout");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_207_SfDataGrid_GroupDropAreaContextFlyout;
                xamlMember.Setter = set_207_SfDataGrid_GroupDropAreaContextFlyout;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.GroupSummaryContextFlyout":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "GroupSummaryContextFlyout", "Microsoft.UI.Xaml.Controls.MenuFlyout");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_208_SfDataGrid_GroupSummaryContextFlyout;
                xamlMember.Setter = set_208_SfDataGrid_GroupSummaryContextFlyout;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.TableSummaryContextFlyout":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TableSummaryContextFlyout", "Microsoft.UI.Xaml.Controls.MenuFlyout");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_209_SfDataGrid_TableSummaryContextFlyout;
                xamlMember.Setter = set_209_SfDataGrid_TableSummaryContextFlyout;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.GroupCaptionContextFlyout":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "GroupCaptionContextFlyout", "Microsoft.UI.Xaml.Controls.MenuFlyout");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_210_SfDataGrid_GroupCaptionContextFlyout;
                xamlMember.Setter = set_210_SfDataGrid_GroupCaptionContextFlyout;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.AllowRowHoverHighlighting":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AllowRowHoverHighlighting", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_211_SfDataGrid_AllowRowHoverHighlighting;
                xamlMember.Setter = set_211_SfDataGrid_AllowRowHoverHighlighting;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.AddNewRowPosition":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AddNewRowPosition", "Syncfusion.UI.Xaml.DataGrid.AddNewRowPosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_212_SfDataGrid_AddNewRowPosition;
                xamlMember.Setter = set_212_SfDataGrid_AddNewRowPosition;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.ExpanderColumnWidth":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ExpanderColumnWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_213_SfDataGrid_ExpanderColumnWidth;
                xamlMember.Setter = set_213_SfDataGrid_ExpanderColumnWidth;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.IndentColumnWidth":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IndentColumnWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_214_SfDataGrid_IndentColumnWidth;
                xamlMember.Setter = set_214_SfDataGrid_IndentColumnWidth;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.PrintSettings":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "PrintSettings", "Syncfusion.UI.Xaml.DataGrid.Print.DataGridPrintSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_215_SfDataGrid_PrintSettings;
                xamlMember.Setter = set_215_SfDataGrid_PrintSettings;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.CurrentItem":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CurrentItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_216_SfDataGrid_CurrentItem;
                xamlMember.Setter = set_216_SfDataGrid_CurrentItem;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.SelectionUnit":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SelectionUnit", "Syncfusion.UI.Xaml.Grids.GridSelectionUnit");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_217_SfDataGrid_SelectionUnit;
                xamlMember.Setter = set_217_SfDataGrid_SelectionUnit;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.CurrentCellInfo":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CurrentCellInfo", "Syncfusion.UI.Xaml.DataGrid.GridCellInfo");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_218_SfDataGrid_CurrentCellInfo;
                xamlMember.Setter = set_218_SfDataGrid_CurrentCellInfo;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.CurrentColumn":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CurrentColumn", "Syncfusion.UI.Xaml.DataGrid.GridColumn");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_219_SfDataGrid_CurrentColumn;
                xamlMember.Setter = set_219_SfDataGrid_CurrentColumn;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.AutoGenerateRelations":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AutoGenerateRelations", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_220_SfDataGrid_AutoGenerateRelations;
                xamlMember.Setter = set_220_SfDataGrid_AutoGenerateRelations;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.SelectedDetailsViewGrid":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SelectedDetailsViewGrid", "Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_221_SfDataGrid_SelectedDetailsViewGrid;
                xamlMember.Setter = set_221_SfDataGrid_SelectedDetailsViewGrid;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.HideEmptyGridViewDefinition":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "HideEmptyGridViewDefinition", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_222_SfDataGrid_HideEmptyGridViewDefinition;
                xamlMember.Setter = set_222_SfDataGrid_HideEmptyGridViewDefinition;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.DetailsViewPadding":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "DetailsViewPadding", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_223_SfDataGrid_DetailsViewPadding;
                xamlMember.Setter = set_223_SfDataGrid_DetailsViewPadding;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.NotifyListener":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "NotifyListener", "Syncfusion.UI.Xaml.DataGrid.IDetailsViewNotifyListener");
                xamlMember.Getter = get_224_SfDataGrid_NotifyListener;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.DataGrid.SfDataGrid.IsListenerSuspended":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.SfDataGrid");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsListenerSuspended", "Boolean");
                xamlMember.Getter = get_225_SfDataGrid_IsListenerSuspended;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.StackedHeaderRows":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "StackedHeaderRows", "Syncfusion.UI.Xaml.Grids.StackedHeaderRows");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_226_SfGridBase_StackedHeaderRows;
                xamlMember.Setter = set_226_SfGridBase_StackedHeaderRows;
                break;
            case "Syncfusion.UI.Xaml.Grids.StackedHeaderRow.Name":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.StackedHeaderRow");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_227_StackedHeaderRow_Name;
                xamlMember.Setter = set_227_StackedHeaderRow_Name;
                break;
            case "Syncfusion.UI.Xaml.Grids.StackedHeaderRow.StackedColumns":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.StackedHeaderRow");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "StackedColumns", "Syncfusion.UI.Xaml.Grids.StackedColumns");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_228_StackedHeaderRow_StackedColumns;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Grids.StackedColumn.ChildColumns":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.StackedColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ChildColumns", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_229_StackedColumn_ChildColumns;
                xamlMember.Setter = set_229_StackedColumn_ChildColumns;
                break;
            case "Syncfusion.UI.Xaml.Grids.StackedColumn.HeaderText":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.StackedColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "HeaderText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_230_StackedColumn_HeaderText;
                xamlMember.Setter = set_230_StackedColumn_HeaderText;
                break;
            case "Syncfusion.UI.Xaml.Grids.StackedColumn.MappingName":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.StackedColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "MappingName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_231_StackedColumn_MappingName;
                xamlMember.Setter = set_231_StackedColumn_MappingName;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.FrozenFooterColumnCount":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FrozenFooterColumnCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_232_SfGridBase_FrozenFooterColumnCount;
                xamlMember.Setter = set_232_SfGridBase_FrozenFooterColumnCount;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.AllowEditing":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AllowEditing", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_233_SfGridBase_AllowEditing;
                xamlMember.Setter = set_233_SfGridBase_AllowEditing;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.IsReadOnly":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsReadOnly", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_234_SfGridBase_IsReadOnly;
                xamlMember.Setter = set_234_SfGridBase_IsReadOnly;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.AllowSelectionOnPointerPressed":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AllowSelectionOnPointerPressed", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_235_SfGridBase_AllowSelectionOnPointerPressed;
                xamlMember.Setter = set_235_SfGridBase_AllowSelectionOnPointerPressed;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.SelectionMode":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SelectionMode", "Syncfusion.UI.Xaml.Grids.GridSelectionMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_236_SfGridBase_SelectionMode;
                xamlMember.Setter = set_236_SfGridBase_SelectionMode;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.NavigationMode":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "NavigationMode", "Syncfusion.UI.Xaml.Grids.NavigationMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_237_SfGridBase_NavigationMode;
                xamlMember.Setter = set_237_SfGridBase_NavigationMode;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.EditorSelectionBehavior":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "EditorSelectionBehavior", "Syncfusion.UI.Xaml.Grids.EditorSelectionBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_238_SfGridBase_EditorSelectionBehavior;
                xamlMember.Setter = set_238_SfGridBase_EditorSelectionBehavior;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.EditTrigger":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "EditTrigger", "Syncfusion.UI.Xaml.Grids.EditTrigger");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_239_SfGridBase_EditTrigger;
                xamlMember.Setter = set_239_SfGridBase_EditTrigger;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.CurrentCellBorderThickness":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CurrentCellBorderThickness", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_240_SfGridBase_CurrentCellBorderThickness;
                xamlMember.Setter = set_240_SfGridBase_CurrentCellBorderThickness;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.CurrentCellBorderBrush":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CurrentCellBorderBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_241_SfGridBase_CurrentCellBorderBrush;
                xamlMember.Setter = set_241_SfGridBase_CurrentCellBorderBrush;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.FrozenColumnCount":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FrozenColumnCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_242_SfGridBase_FrozenColumnCount;
                xamlMember.Setter = set_242_SfGridBase_FrozenColumnCount;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.GridLinesVisibility":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "GridLinesVisibility", "Syncfusion.UI.Xaml.Grids.GridLinesVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_243_SfGridBase_GridLinesVisibility;
                xamlMember.Setter = set_243_SfGridBase_GridLinesVisibility;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.HeaderLinesVisibility":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "HeaderLinesVisibility", "Syncfusion.UI.Xaml.Grids.GridLinesVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_244_SfGridBase_HeaderLinesVisibility;
                xamlMember.Setter = set_244_SfGridBase_HeaderLinesVisibility;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.ShowRowHeader":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ShowRowHeader", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_245_SfGridBase_ShowRowHeader;
                xamlMember.Setter = set_245_SfGridBase_ShowRowHeader;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.RowHeaderWidth":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "RowHeaderWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_246_SfGridBase_RowHeaderWidth;
                xamlMember.Setter = set_246_SfGridBase_RowHeaderWidth;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.HeaderRowHeight":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "HeaderRowHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_247_SfGridBase_HeaderRowHeight;
                xamlMember.Setter = set_247_SfGridBase_HeaderRowHeight;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.RowHeight":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "RowHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_248_SfGridBase_RowHeight;
                xamlMember.Setter = set_248_SfGridBase_RowHeight;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.AllowDraggingColumns":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AllowDraggingColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_249_SfGridBase_AllowDraggingColumns;
                xamlMember.Setter = set_249_SfGridBase_AllowDraggingColumns;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.AutoGenerateColumnsForCustomType":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AutoGenerateColumnsForCustomType", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_250_SfGridBase_AutoGenerateColumnsForCustomType;
                xamlMember.Setter = set_250_SfGridBase_AutoGenerateColumnsForCustomType;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.AutoGenerateColumnsModeForCustomType":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AutoGenerateColumnsModeForCustomType", "Syncfusion.UI.Xaml.Grids.AutoGenerateColumnsModeForCustomType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_251_SfGridBase_AutoGenerateColumnsModeForCustomType;
                xamlMember.Setter = set_251_SfGridBase_AutoGenerateColumnsModeForCustomType;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.CellTemplateSelector":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CellTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_252_SfGridBase_CellTemplateSelector;
                xamlMember.Setter = set_252_SfGridBase_CellTemplateSelector;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.AutoGenerateColumnsMode":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AutoGenerateColumnsMode", "Syncfusion.UI.Xaml.Grids.AutoGenerateColumnsMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_253_SfGridBase_AutoGenerateColumnsMode;
                xamlMember.Setter = set_253_SfGridBase_AutoGenerateColumnsMode;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.SortClickAction":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SortClickAction", "Syncfusion.UI.Xaml.Grids.SortClickAction");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_254_SfGridBase_SortClickAction;
                xamlMember.Setter = set_254_SfGridBase_SortClickAction;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.AllowTriStateSorting":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AllowTriStateSorting", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_255_SfGridBase_AllowTriStateSorting;
                xamlMember.Setter = set_255_SfGridBase_AllowTriStateSorting;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.HeaderContextFlyout":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "HeaderContextFlyout", "Microsoft.UI.Xaml.Controls.MenuFlyout");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_256_SfGridBase_HeaderContextFlyout;
                xamlMember.Setter = set_256_SfGridBase_HeaderContextFlyout;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.RecordContextFlyout":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "RecordContextFlyout", "Microsoft.UI.Xaml.Controls.MenuFlyout");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_257_SfGridBase_RecordContextFlyout;
                xamlMember.Setter = set_257_SfGridBase_RecordContextFlyout;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.ShowSortNumbers":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ShowSortNumbers", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_258_SfGridBase_ShowSortNumbers;
                xamlMember.Setter = set_258_SfGridBase_ShowSortNumbers;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.DataValidationMode":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "DataValidationMode", "Syncfusion.UI.Xaml.Grids.GridValidationMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_259_SfGridBase_DataValidationMode;
                xamlMember.Setter = set_259_SfGridBase_DataValidationMode;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.SelectedIndex":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SelectedIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_260_SfGridBase_SelectedIndex;
                xamlMember.Setter = set_260_SfGridBase_SelectedIndex;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.SelectedItems":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SelectedItems", "System.Collections.ObjectModel.ObservableCollection`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_261_SfGridBase_SelectedItems;
                xamlMember.Setter = set_261_SfGridBase_SelectedItems;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.SortColumnDescriptions":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SortColumnDescriptions", "Syncfusion.UI.Xaml.Grids.SortColumnDescriptions");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_262_SfGridBase_SortColumnDescriptions;
                xamlMember.Setter = set_262_SfGridBase_SortColumnDescriptions;
                break;
            case "Syncfusion.UI.Xaml.Grids.SortColumnDescription.ColumnName":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SortColumnDescription");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ColumnName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_263_SortColumnDescription_ColumnName;
                xamlMember.Setter = set_263_SortColumnDescription_ColumnName;
                break;
            case "Syncfusion.UI.Xaml.Grids.SortColumnDescription.SortDirection":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SortColumnDescription");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SortDirection", "Syncfusion.UI.Xaml.Data.SortDirection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_264_SortColumnDescription_SortDirection;
                xamlMember.Setter = set_264_SortColumnDescription_SortDirection;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.PasteOption":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "PasteOption", "Syncfusion.UI.Xaml.Grids.GridPasteOptions");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_265_SfGridBase_PasteOption;
                xamlMember.Setter = set_265_SfGridBase_PasteOption;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.CopyOption":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CopyOption", "Syncfusion.UI.Xaml.Grids.GridCopyOptions");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_266_SfGridBase_CopyOption;
                xamlMember.Setter = set_266_SfGridBase_CopyOption;
                break;
            case "Syncfusion.UI.Xaml.Grids.SfGridBase.ShowToolTip":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Grids.SfGridBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ShowToolTip", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_267_SfGridBase_ShowToolTip;
                xamlMember.Setter = set_267_SfGridBase_ShowToolTip;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridTextColumn.IsSpellCheckEnabled":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridTextColumn");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsSpellCheckEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_268_GridTextColumn_IsSpellCheckEnabled;
                xamlMember.Setter = set_268_GridTextColumn_IsSpellCheckEnabled;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridTextColumnBase.TextTrimming":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridTextColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TextTrimming", "Microsoft.UI.Xaml.TextTrimming");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_269_GridTextColumnBase_TextTrimming;
                xamlMember.Setter = set_269_GridTextColumnBase_TextTrimming;
                break;
            case "Syncfusion.UI.Xaml.DataGrid.GridTextColumnBase.TextWrapping":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.DataGrid.GridTextColumnBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TextWrapping", "Microsoft.UI.Xaml.TextWrapping");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_270_GridTextColumnBase_TextWrapping;
                xamlMember.Setter = set_270_GridTextColumnBase_TextWrapping;
                break;
            case "InXone.WinUI.Controls.Assets.AssetDataElementGridControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Assets.AssetDataElementGridControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.WinUI.Controls.ViewModels.AssetViewerViewModel");
                xamlMember.Getter = get_271_AssetDataElementGridControl_ViewModel;
                xamlMember.Setter = set_271_AssetDataElementGridControl_ViewModel;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemTemplate":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_272_ItemsRepeater_ItemTemplate;
                xamlMember.Setter = set_272_ItemsRepeater_ItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemsSource":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_273_ItemsRepeater_ItemsSource;
                xamlMember.Setter = set_273_ItemsRepeater_ItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.Background":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Background", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_274_ItemsRepeater_Background;
                xamlMember.Setter = set_274_ItemsRepeater_Background;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.HorizontalCacheLength":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "HorizontalCacheLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_275_ItemsRepeater_HorizontalCacheLength;
                xamlMember.Setter = set_275_ItemsRepeater_HorizontalCacheLength;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemsSourceView":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ItemsSourceView", "Microsoft.UI.Xaml.Controls.ItemsSourceView");
                xamlMember.Getter = get_276_ItemsRepeater_ItemsSourceView;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.Layout":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Layout", "Microsoft.UI.Xaml.Controls.Layout");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_277_ItemsRepeater_Layout;
                xamlMember.Setter = set_277_ItemsRepeater_Layout;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.VerticalCacheLength":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "VerticalCacheLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_278_ItemsRepeater_VerticalCacheLength;
                xamlMember.Setter = set_278_ItemsRepeater_VerticalCacheLength;
                break;
            case "InXone.WinUI.Controls.Assets.AssetSidePanelControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Assets.AssetSidePanelControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.WinUI.Controls.ViewModels.AssetSidePanelViewModel");
                xamlMember.Getter = get_279_AssetSidePanelControl_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "InXone.WinUI.Controls.Assets.AssetUseCaseGridControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Assets.AssetUseCaseGridControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.WinUI.Controls.ViewModels.AssetViewerViewModel");
                xamlMember.Getter = get_280_AssetUseCaseGridControl_ViewModel;
                xamlMember.Setter = set_280_AssetUseCaseGridControl_ViewModel;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabItems":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TabItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_281_TabView_TabItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.IsAddTabButtonVisible":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsAddTabButtonVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_282_TabView_IsAddTabButtonVisible;
                xamlMember.Setter = set_282_TabView_IsAddTabButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.AddTabButtonCommand":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AddTabButtonCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_283_TabView_AddTabButtonCommand;
                xamlMember.Setter = set_283_TabView_AddTabButtonCommand;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.AddTabButtonCommandParameter":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AddTabButtonCommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_284_TabView_AddTabButtonCommandParameter;
                xamlMember.Setter = set_284_TabView_AddTabButtonCommandParameter;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.AllowDropTabs":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AllowDropTabs", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_285_TabView_AllowDropTabs;
                xamlMember.Setter = set_285_TabView_AllowDropTabs;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.CanDragTabs":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CanDragTabs", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_286_TabView_CanDragTabs;
                xamlMember.Setter = set_286_TabView_CanDragTabs;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.CanReorderTabs":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CanReorderTabs", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_287_TabView_CanReorderTabs;
                xamlMember.Setter = set_287_TabView_CanReorderTabs;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.CloseButtonOverlayMode":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CloseButtonOverlayMode", "Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_288_TabView_CloseButtonOverlayMode;
                xamlMember.Setter = set_288_TabView_CloseButtonOverlayMode;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.SelectedIndex":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SelectedIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_289_TabView_SelectedIndex;
                xamlMember.Setter = set_289_TabView_SelectedIndex;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.SelectedItem":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_290_TabView_SelectedItem;
                xamlMember.Setter = set_290_TabView_SelectedItem;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabItemTemplate":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TabItemTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_291_TabView_TabItemTemplate;
                xamlMember.Setter = set_291_TabView_TabItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabItemTemplateSelector":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TabItemTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_292_TabView_TabItemTemplateSelector;
                xamlMember.Setter = set_292_TabView_TabItemTemplateSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabItemsSource":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TabItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_293_TabView_TabItemsSource;
                xamlMember.Setter = set_293_TabView_TabItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabStripFooter":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TabStripFooter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_294_TabView_TabStripFooter;
                xamlMember.Setter = set_294_TabView_TabStripFooter;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabStripFooterTemplate":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TabStripFooterTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_295_TabView_TabStripFooterTemplate;
                xamlMember.Setter = set_295_TabView_TabStripFooterTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabStripHeader":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TabStripHeader", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_296_TabView_TabStripHeader;
                xamlMember.Setter = set_296_TabView_TabStripHeader;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabStripHeaderTemplate":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TabStripHeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_297_TabView_TabStripHeaderTemplate;
                xamlMember.Setter = set_297_TabView_TabStripHeaderTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.TabView.TabWidthMode":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TabWidthMode", "Microsoft.UI.Xaml.Controls.TabViewWidthMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_298_TabView_TabWidthMode;
                xamlMember.Setter = set_298_TabView_TabWidthMode;
                break;
            case "Microsoft.UI.Xaml.Controls.TabViewItem.Header":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabViewItem");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_299_TabViewItem_Header;
                xamlMember.Setter = set_299_TabViewItem_Header;
                break;
            case "Microsoft.UI.Xaml.Controls.TabViewItem.IconSource":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabViewItem");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IconSource", "Microsoft.UI.Xaml.Controls.IconSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_300_TabViewItem_IconSource;
                xamlMember.Setter = set_300_TabViewItem_IconSource;
                break;
            case "Microsoft.UI.Xaml.Controls.TabViewItem.HeaderTemplate":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabViewItem");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_301_TabViewItem_HeaderTemplate;
                xamlMember.Setter = set_301_TabViewItem_HeaderTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.TabViewItem.IsClosable":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabViewItem");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsClosable", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_302_TabViewItem_IsClosable;
                xamlMember.Setter = set_302_TabViewItem_IsClosable;
                break;
            case "Microsoft.UI.Xaml.Controls.TabViewItem.TabViewTemplateSettings":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TabViewItem");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TabViewTemplateSettings", "Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_303_TabViewItem_TabViewTemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "InXone.WinUI.Controls.Projects.ProjectFileEditorControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Projects.ProjectFileEditorControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.WinUI.Controls.ViewModels.ProjectViewerViewModel");
                xamlMember.Getter = get_304_ProjectFileEditorControl_ViewModel;
                xamlMember.Setter = set_304_ProjectFileEditorControl_ViewModel;
                break;
            case "InXone.WinUI.Controls.Projects.ProjectFileEditorControl.FileNameTextBlock":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Projects.ProjectFileEditorControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FileNameTextBlock", "Microsoft.UI.Xaml.Controls.TextBlock");
                xamlMember.Getter = get_305_ProjectFileEditorControl_FileNameTextBlock;
                xamlMember.SetIsReadOnly();
                break;
            case "InXone.WinUI.Controls.Projects.ProjectFileEditorControl.AssetViewerCommandEvent":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Projects.ProjectFileEditorControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AssetViewerCommandEvent", "InXone.WinUI.Controls.Common.NotificationEvent");
                xamlMember.Getter = get_306_ProjectFileEditorControl_AssetViewerCommandEvent;
                xamlMember.Setter = set_306_ProjectFileEditorControl_AssetViewerCommandEvent;
                break;
            case "InXone.WinUI.Controls.Assets.AssetViewerControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Assets.AssetViewerControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.WinUI.Controls.ViewModels.AssetViewerViewModel");
                xamlMember.Getter = get_307_AssetViewerControl_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "InXone.WinUI.Controls.Entities.EntityFollowUpGridControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Entities.EntityFollowUpGridControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.Uwp.ViewModels.EntityFollowUpViewModel");
                xamlMember.Getter = get_308_EntityFollowUpGridControl_ViewModel;
                xamlMember.Setter = set_308_EntityFollowUpGridControl_ViewModel;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsBackButtonVisible":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsBackButtonVisible", "Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_309_NavigationView_IsBackButtonVisible;
                xamlMember.Setter = set_309_NavigationView_IsBackButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsSettingsVisible":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsSettingsVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_310_NavigationView_IsSettingsVisible;
                xamlMember.Setter = set_310_NavigationView_IsSettingsVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneDisplayMode":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "PaneDisplayMode", "Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_311_NavigationView_PaneDisplayMode;
                xamlMember.Setter = set_311_NavigationView_PaneDisplayMode;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SelectedItem":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_312_NavigationView_SelectedItem;
                xamlMember.Setter = set_312_NavigationView_SelectedItem;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SelectionFollowsFocus":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SelectionFollowsFocus", "Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_313_NavigationView_SelectionFollowsFocus;
                xamlMember.Setter = set_313_NavigationView_SelectionFollowsFocus;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItems":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "MenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_314_NavigationView_MenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.AlwaysShowHeader":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AlwaysShowHeader", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_315_NavigationView_AlwaysShowHeader;
                xamlMember.Setter = set_315_NavigationView_AlwaysShowHeader;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.AutoSuggestBox":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "AutoSuggestBox", "Microsoft.UI.Xaml.Controls.AutoSuggestBox");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_316_NavigationView_AutoSuggestBox;
                xamlMember.Setter = set_316_NavigationView_AutoSuggestBox;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.CompactModeThresholdWidth":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CompactModeThresholdWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_317_NavigationView_CompactModeThresholdWidth;
                xamlMember.Setter = set_317_NavigationView_CompactModeThresholdWidth;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.CompactPaneLength":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CompactPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_318_NavigationView_CompactPaneLength;
                xamlMember.Setter = set_318_NavigationView_CompactPaneLength;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ContentOverlay":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ContentOverlay", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_319_NavigationView_ContentOverlay;
                xamlMember.Setter = set_319_NavigationView_ContentOverlay;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.DisplayMode":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "DisplayMode", "Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_320_NavigationView_DisplayMode;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ExpandedModeThresholdWidth":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ExpandedModeThresholdWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_321_NavigationView_ExpandedModeThresholdWidth;
                xamlMember.Setter = set_321_NavigationView_ExpandedModeThresholdWidth;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.FooterMenuItems":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FooterMenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_322_NavigationView_FooterMenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.FooterMenuItemsSource":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FooterMenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_323_NavigationView_FooterMenuItemsSource;
                xamlMember.Setter = set_323_NavigationView_FooterMenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.Header":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_324_NavigationView_Header;
                xamlMember.Setter = set_324_NavigationView_Header;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.HeaderTemplate":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_325_NavigationView_HeaderTemplate;
                xamlMember.Setter = set_325_NavigationView_HeaderTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsBackEnabled":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsBackEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_326_NavigationView_IsBackEnabled;
                xamlMember.Setter = set_326_NavigationView_IsBackEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneOpen":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsPaneOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_327_NavigationView_IsPaneOpen;
                xamlMember.Setter = set_327_NavigationView_IsPaneOpen;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneToggleButtonVisible":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsPaneToggleButtonVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_328_NavigationView_IsPaneToggleButtonVisible;
                xamlMember.Setter = set_328_NavigationView_IsPaneToggleButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneVisible":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsPaneVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_329_NavigationView_IsPaneVisible;
                xamlMember.Setter = set_329_NavigationView_IsPaneVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsTitleBarAutoPaddingEnabled":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsTitleBarAutoPaddingEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_330_NavigationView_IsTitleBarAutoPaddingEnabled;
                xamlMember.Setter = set_330_NavigationView_IsTitleBarAutoPaddingEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "MenuItemContainerStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_331_NavigationView_MenuItemContainerStyle;
                xamlMember.Setter = set_331_NavigationView_MenuItemContainerStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyleSelector":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "MenuItemContainerStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_332_NavigationView_MenuItemContainerStyleSelector;
                xamlMember.Setter = set_332_NavigationView_MenuItemContainerStyleSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplate":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "MenuItemTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_333_NavigationView_MenuItemTemplate;
                xamlMember.Setter = set_333_NavigationView_MenuItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplateSelector":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "MenuItemTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_334_NavigationView_MenuItemTemplateSelector;
                xamlMember.Setter = set_334_NavigationView_MenuItemTemplateSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemsSource":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "MenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_335_NavigationView_MenuItemsSource;
                xamlMember.Setter = set_335_NavigationView_MenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.OpenPaneLength":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "OpenPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_336_NavigationView_OpenPaneLength;
                xamlMember.Setter = set_336_NavigationView_OpenPaneLength;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.OverflowLabelMode":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "OverflowLabelMode", "Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_337_NavigationView_OverflowLabelMode;
                xamlMember.Setter = set_337_NavigationView_OverflowLabelMode;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneCustomContent":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "PaneCustomContent", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_338_NavigationView_PaneCustomContent;
                xamlMember.Setter = set_338_NavigationView_PaneCustomContent;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneFooter":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "PaneFooter", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_339_NavigationView_PaneFooter;
                xamlMember.Setter = set_339_NavigationView_PaneFooter;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneHeader":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "PaneHeader", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_340_NavigationView_PaneHeader;
                xamlMember.Setter = set_340_NavigationView_PaneHeader;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneTitle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "PaneTitle", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_341_NavigationView_PaneTitle;
                xamlMember.Setter = set_341_NavigationView_PaneTitle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneToggleButtonStyle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "PaneToggleButtonStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_342_NavigationView_PaneToggleButtonStyle;
                xamlMember.Setter = set_342_NavigationView_PaneToggleButtonStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SettingsItem":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SettingsItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_343_NavigationView_SettingsItem;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ShoulderNavigationEnabled":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ShoulderNavigationEnabled", "Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_344_NavigationView_ShoulderNavigationEnabled;
                xamlMember.Setter = set_344_NavigationView_ShoulderNavigationEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.TemplateSettings":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_345_NavigationView_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "InXone.WinUI.Controls.Notes.NotesViewEditControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Notes.NotesViewEditControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.UI.DataModel.Notes.NoteViewModel");
                xamlMember.Getter = get_346_NotesViewEditControl_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "InXone.WinUI.Controls.Entities.PersonBaseEditorControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Entities.PersonBaseEditorControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.UI.DataModel.Entities.PersonViewModel");
                xamlMember.Getter = get_347_PersonBaseEditorControl_ViewModel;
                xamlMember.Setter = set_347_PersonBaseEditorControl_ViewModel;
                break;
            case "InXone.WinUI.Controls.ReferenceLists.ReferenceListGroupEditControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.ReferenceLists.ReferenceListGroupEditControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.UI.DataModel.References.ReferenceListGroupViewModel");
                xamlMember.Getter = get_348_ReferenceListGroupEditControl_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItemBase.IsSelected":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_349_NavigationViewItemBase_IsSelected;
                xamlMember.Setter = set_349_NavigationViewItemBase_IsSelected;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.Icon":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Icon", "Microsoft.UI.Xaml.Controls.IconElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_350_NavigationViewItem_Icon;
                xamlMember.Setter = set_350_NavigationViewItem_Icon;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.CompactPaneLength":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CompactPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_351_NavigationViewItem_CompactPaneLength;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.HasUnrealizedChildren":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_352_NavigationViewItem_HasUnrealizedChildren;
                xamlMember.Setter = set_352_NavigationViewItem_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.IsChildSelected":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsChildSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_353_NavigationViewItem_IsChildSelected;
                xamlMember.Setter = set_353_NavigationViewItem_IsChildSelected;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.IsExpanded":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_354_NavigationViewItem_IsExpanded;
                xamlMember.Setter = set_354_NavigationViewItem_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.MenuItems":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "MenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_355_NavigationViewItem_MenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.MenuItemsSource":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "MenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_356_NavigationViewItem_MenuItemsSource;
                xamlMember.Setter = set_356_NavigationViewItem_MenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.SelectsOnInvoked":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SelectsOnInvoked", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_357_NavigationViewItem_SelectsOnInvoked;
                xamlMember.Setter = set_357_NavigationViewItem_SelectsOnInvoked;
                break;
            case "InXone.WinUI.Controls.Entities.EntityFollowUpViewControl.ParentMenu":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Entities.EntityFollowUpViewControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ParentMenu", "InXone.DataObjects.ViewModels.IMenuItemParent");
                xamlMember.Getter = get_358_EntityFollowUpViewControl_ParentMenu;
                xamlMember.Setter = set_358_EntityFollowUpViewControl_ParentMenu;
                break;
            case "InXone.WinUI.Controls.Entities.EntityFollowUpViewControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Entities.EntityFollowUpViewControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.Uwp.ViewModels.EntityFollowUpViewModel");
                xamlMember.Getter = get_359_EntityFollowUpViewControl_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "InXone.WinUI.Common.MenuItemTemplateSelector.ItemTemplate":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Common.MenuItemTemplateSelector");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.Getter = get_360_MenuItemTemplateSelector_ItemTemplate;
                xamlMember.Setter = set_360_MenuItemTemplateSelector_ItemTemplate;
                break;
            case "InXone.WinUI.Controls.Navigation.NavigationControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Navigation.NavigationControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.Uwp.ViewModels.NavigationViewModel");
                xamlMember.Getter = get_361_NavigationControl_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "InXone.WinUI.Controls.Navigation.NavigationControl.MenuIsVisible":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Navigation.NavigationControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "MenuIsVisible", "Boolean");
                xamlMember.Getter = get_362_NavigationControl_MenuIsVisible;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.ItemsSource":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_363_TreeView_ItemsSource;
                xamlMember.Setter = set_363_TreeView_ItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.SelectionMode":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SelectionMode", "Microsoft.UI.Xaml.Controls.TreeViewSelectionMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_364_TreeView_SelectionMode;
                xamlMember.Setter = set_364_TreeView_SelectionMode;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.ItemTemplate":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_365_TreeView_ItemTemplate;
                xamlMember.Setter = set_365_TreeView_ItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.CanDragItems":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CanDragItems", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_366_TreeView_CanDragItems;
                xamlMember.Setter = set_366_TreeView_CanDragItems;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.CanReorderItems":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CanReorderItems", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_367_TreeView_CanReorderItems;
                xamlMember.Setter = set_367_TreeView_CanReorderItems;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.ItemContainerStyle":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ItemContainerStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_368_TreeView_ItemContainerStyle;
                xamlMember.Setter = set_368_TreeView_ItemContainerStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.ItemContainerStyleSelector":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ItemContainerStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_369_TreeView_ItemContainerStyleSelector;
                xamlMember.Setter = set_369_TreeView_ItemContainerStyleSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.ItemContainerTransitions":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ItemContainerTransitions", "Microsoft.UI.Xaml.Media.Animation.TransitionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_370_TreeView_ItemContainerTransitions;
                xamlMember.Setter = set_370_TreeView_ItemContainerTransitions;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.ItemTemplateSelector":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ItemTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_371_TreeView_ItemTemplateSelector;
                xamlMember.Setter = set_371_TreeView_ItemTemplateSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.RootNodes":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "RootNodes", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>");
                xamlMember.Getter = get_372_TreeView_RootNodes;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Children":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Children", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>");
                xamlMember.Getter = get_373_TreeViewNode_Children;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Content":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_374_TreeViewNode_Content;
                xamlMember.Setter = set_374_TreeViewNode_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Depth":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Depth", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_375_TreeViewNode_Depth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasChildren":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "HasChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_376_TreeViewNode_HasChildren;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasUnrealizedChildren":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.Getter = get_377_TreeViewNode_HasUnrealizedChildren;
                xamlMember.Setter = set_377_TreeViewNode_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.IsExpanded":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_378_TreeViewNode_IsExpanded;
                xamlMember.Setter = set_378_TreeViewNode_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Parent":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Parent", "Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember.Getter = get_379_TreeViewNode_Parent;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.SelectedItem":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_380_TreeView_SelectedItem;
                xamlMember.Setter = set_380_TreeView_SelectedItem;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.SelectedItems":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SelectedItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.Getter = get_381_TreeView_SelectedItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.SelectedNode":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SelectedNode", "Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember.Getter = get_382_TreeView_SelectedNode;
                xamlMember.Setter = set_382_TreeView_SelectedNode;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.SelectedNodes":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "SelectedNodes", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>");
                xamlMember.Getter = get_383_TreeView_SelectedNodes;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewItem.ItemsSource":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewItem");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_384_TreeViewItem_ItemsSource;
                xamlMember.Setter = set_384_TreeViewItem_ItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewItem.CollapsedGlyph":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewItem");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CollapsedGlyph", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_385_TreeViewItem_CollapsedGlyph;
                xamlMember.Setter = set_385_TreeViewItem_CollapsedGlyph;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewItem.ExpandedGlyph":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewItem");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ExpandedGlyph", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_386_TreeViewItem_ExpandedGlyph;
                xamlMember.Setter = set_386_TreeViewItem_ExpandedGlyph;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewItem.GlyphBrush":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewItem");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "GlyphBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_387_TreeViewItem_GlyphBrush;
                xamlMember.Setter = set_387_TreeViewItem_GlyphBrush;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewItem.GlyphOpacity":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewItem");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "GlyphOpacity", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_388_TreeViewItem_GlyphOpacity;
                xamlMember.Setter = set_388_TreeViewItem_GlyphOpacity;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewItem.GlyphSize":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewItem");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "GlyphSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_389_TreeViewItem_GlyphSize;
                xamlMember.Setter = set_389_TreeViewItem_GlyphSize;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewItem.HasUnrealizedChildren":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewItem");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_390_TreeViewItem_HasUnrealizedChildren;
                xamlMember.Setter = set_390_TreeViewItem_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewItem.IsExpanded":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewItem");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_391_TreeViewItem_IsExpanded;
                xamlMember.Setter = set_391_TreeViewItem_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewItem.TreeViewItemTemplateSettings":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewItem");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TreeViewItemTemplateSettings", "Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_392_TreeViewItem_TreeViewItemTemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "InXone.WinUI.Controls.Projects.ProjectSidePanelControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Projects.ProjectSidePanelControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.WinUI.Controls.ViewModels.ProjectViewerViewModel");
                xamlMember.Getter = get_393_ProjectSidePanelControl_ViewModel;
                xamlMember.Setter = set_393_ProjectSidePanelControl_ViewModel;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperCursor":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.GridSplitter");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "GripperCursor", "CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperCursorType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_394_GridSplitter_GripperCursor;
                xamlMember.Setter = set_394_GridSplitter_GripperCursor;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.GridSplitter.ResizeBehavior":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.GridSplitter");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ResizeBehavior", "CommunityToolkit.WinUI.UI.Controls.GridSplitter.GridResizeBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_395_GridSplitter_ResizeBehavior;
                xamlMember.Setter = set_395_GridSplitter_ResizeBehavior;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.GridSplitter.ResizeDirection":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.GridSplitter");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ResizeDirection", "CommunityToolkit.WinUI.UI.Controls.GridSplitter.GridResizeDirection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_396_GridSplitter_ResizeDirection;
                xamlMember.Setter = set_396_GridSplitter_ResizeDirection;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.GridSplitter.Element":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.GridSplitter");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Element", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_397_GridSplitter_Element;
                xamlMember.Setter = set_397_GridSplitter_Element;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperForeground":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.GridSplitter");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "GripperForeground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_398_GridSplitter_GripperForeground;
                xamlMember.Setter = set_398_GridSplitter_GripperForeground;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.GridSplitter.ParentLevel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.GridSplitter");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ParentLevel", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_399_GridSplitter_ParentLevel;
                xamlMember.Setter = set_399_GridSplitter_ParentLevel;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.GridSplitter.GripperCustomCursorResource":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.GridSplitter");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "GripperCustomCursorResource", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_400_GridSplitter_GripperCustomCursorResource;
                xamlMember.Setter = set_400_GridSplitter_GripperCustomCursorResource;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.GridSplitter.CursorBehavior":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.GridSplitter");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CursorBehavior", "CommunityToolkit.WinUI.UI.Controls.GridSplitter.SplitterCursorBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_401_GridSplitter_CursorBehavior;
                xamlMember.Setter = set_401_GridSplitter_CursorBehavior;
                break;
            case "InXone.WinUI.Controls.Projects.ProjectViewerControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Projects.ProjectViewerControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.WinUI.Controls.ViewModels.ProjectViewerViewModel");
                xamlMember.Getter = get_402_ProjectViewerControl_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataFormControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataFormControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.WinUI.Controls.ViewModels.ReferenceDataFormViewModel");
                xamlMember.Getter = get_403_ReferenceDataFormControl_ViewModel;
                xamlMember.Setter = set_403_ReferenceDataFormControl_ViewModel;
                break;
            case "InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataFormStackControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataFormStackControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.WinUI.Controls.ViewModels.ReferenceDataFormStackViewModel");
                xamlMember.Getter = get_404_ReferenceDataFormStackControl_ViewModel;
                xamlMember.Setter = set_404_ReferenceDataFormStackControl_ViewModel;
                break;
            case "InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataGridControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Controls.ReferenceData.ReferenceDataGridControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.WinUI.Controls.ViewModels.ReferenceDataGridViewModel");
                xamlMember.Getter = get_405_ReferenceDataGridControl_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "InXone.WinUI.Controls.ReferenceData.ReferenceDataEditorControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.ReferenceData.ReferenceDataEditorControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.Uwp.ViewModels.ReferenceDataEditorViewModel");
                xamlMember.Getter = get_406_ReferenceDataEditorControl_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "InXone.WinUI.Controls.ReferenceData.ReferenceDataValidationContentDialog.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.ReferenceData.ReferenceDataValidationContentDialog");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.WinUI.Controls.ViewModels.ReferenceDataValidationViewModel");
                xamlMember.Getter = get_407_ReferenceDataValidationContentDialog_ViewModel;
                xamlMember.Setter = set_407_ReferenceDataValidationContentDialog_ViewModel;
                break;
            case "InXone.WinUI.Controls.ReferenceLists.ReferenceListViewControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.ReferenceLists.ReferenceListViewControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.Uwp.ViewModels.ReferenceListViewModel");
                xamlMember.Getter = get_408_ReferenceListViewControl_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "InXone.WinUI.Controls.ReferenceLists.ReferenceListViewControl.ParentMenu":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.ReferenceLists.ReferenceListViewControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ParentMenu", "InXone.DataObjects.ViewModels.IMenuItemParent");
                xamlMember.Getter = get_409_ReferenceListViewControl_ParentMenu;
                xamlMember.Setter = set_409_ReferenceListViewControl_ParentMenu;
                break;
            case "InXone.WinUI.Controls.Utilities.TextButtonControl.Texto":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Utilities.TextButtonControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Texto", "String");
                xamlMember.Getter = get_410_TextButtonControl_Texto;
                xamlMember.Setter = set_410_TextButtonControl_Texto;
                break;
            case "InXone.WinUI.Controls.Utilities.TextButtonControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Utilities.TextButtonControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.Uwp.ViewModels.TextButtonViewModel");
                xamlMember.Getter = get_411_TextButtonControl_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "InXone.WinUI.Controls.Utilities.TextEditorControl.Texto":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Utilities.TextEditorControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Texto", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_412_TextEditorControl_Texto;
                xamlMember.Setter = set_412_TextEditorControl_Texto;
                break;
            case "InXone.WinUI.Controls.Utilities.TextEditorControl.m_ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Utilities.TextEditorControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "m_ViewModel", "InXone.WinUI.Controls.ViewModels.TextEditorViewModel");
                xamlMember.Getter = get_413_TextEditorControl_m_ViewModel;
                xamlMember.Setter = set_413_TextEditorControl_m_ViewModel;
                break;
            case "Microsoft.UI.Xaml.Controls.WebView2.Source":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.WebView2");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "Source", "System.Uri");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_414_WebView2_Source;
                xamlMember.Setter = set_414_WebView2_Source;
                break;
            case "Microsoft.UI.Xaml.Controls.WebView2.CanGoBack":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.WebView2");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CanGoBack", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_415_WebView2_CanGoBack;
                xamlMember.Setter = set_415_WebView2_CanGoBack;
                break;
            case "Microsoft.UI.Xaml.Controls.WebView2.CanGoForward":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.WebView2");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CanGoForward", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_416_WebView2_CanGoForward;
                xamlMember.Setter = set_416_WebView2_CanGoForward;
                break;
            case "Microsoft.UI.Xaml.Controls.WebView2.CoreWebView2":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.WebView2");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "CoreWebView2", "Microsoft.Web.WebView2.Core.CoreWebView2");
                xamlMember.Getter = get_417_WebView2_CoreWebView2;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.WebView2.DefaultBackgroundColor":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.WebView2");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "DefaultBackgroundColor", "Windows.UI.Color");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_418_WebView2_DefaultBackgroundColor;
                xamlMember.Setter = set_418_WebView2_DefaultBackgroundColor;
                break;
            case "InXone.WinUI.Controls.Web.WebBrowserControl.ViewModel":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("InXone.WinUI.Controls.Web.WebBrowserControl");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "ViewModel", "InXone.Uwp.ViewModels.WebBrowserViewModel");
                xamlMember.Getter = get_419_WebBrowserControl_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter.TrueValue":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "TrueValue", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_420_DoubleToObjectConverter_TrueValue;
                xamlMember.Setter = set_420_DoubleToObjectConverter_TrueValue;
                break;
            case "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter.FalseValue":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "FalseValue", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_421_DoubleToObjectConverter_FalseValue;
                xamlMember.Setter = set_421_DoubleToObjectConverter_FalseValue;
                break;
            case "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter.NullValue":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "NullValue", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_422_DoubleToObjectConverter_NullValue;
                xamlMember.Setter = set_422_DoubleToObjectConverter_NullValue;
                break;
            case "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter.GreaterThan":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "GreaterThan", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_423_DoubleToObjectConverter_GreaterThan;
                xamlMember.Setter = set_423_DoubleToObjectConverter_GreaterThan;
                break;
            case "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter.LessThan":
                userType = (global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter");
                xamlMember = new global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlMember(this, "LessThan", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_424_DoubleToObjectConverter_LessThan;
                xamlMember.Setter = set_424_DoubleToObjectConverter_LessThan;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);
    internal delegate object BoxInstanceMethod(object instance);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlSystemBaseType
        , global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Microsoft.UI.Xaml.Markup.IXamlType _baseType;
        global::Microsoft.UI.Xaml.Markup.IXamlType _boxedType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Microsoft.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }
        override public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { return _boxedType; } }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (BoxedType != null)
            {
                return BoxInstance(BoxedType.CreateFromString(input));
            }

            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }
        public BoxInstanceMethod BoxInstance {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void SetBoxedType(global::Microsoft.UI.Xaml.Markup.IXamlType boxedType)
        {
            _boxedType = boxedType;
        }

        public object BoxType<T>(object instance) where T: struct
        {
            T unwrapped = (T)instance;
            return new global::System.Nullable<T>(unwrapped);
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Microsoft.UI.Xaml.Markup.IXamlMember
    {
        global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::InXone.WinUI.Controls.InXone_WinUI_Controls_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Microsoft.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Microsoft.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

