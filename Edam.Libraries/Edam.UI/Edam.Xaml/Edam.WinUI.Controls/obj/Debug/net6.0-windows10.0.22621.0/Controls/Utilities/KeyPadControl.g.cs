#pragma checksum "C:\prjs\Datovy.Edam\Edam.Libraries\Edam.UI\Edam.Xaml\Edam.WinUI.Controls\Controls\Utilities\KeyPadControl.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "6954FF20C12D60E3C4BDEBF5006D6120EEB9C6A5651B9729787A335B68E3BAA5"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Edam.WinUI.Controls.Utilities
{
    partial class KeyPadControl : 
        global::Microsoft.UI.Xaml.Controls.UserControl, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class KeyPadControl_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IKeyPadControl_Bindings
        {
            private global::Edam.WinUI.Controls.Utilities.KeyPadControl dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj2;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2TextDisabled = false;

            private KeyPadControl_obj1_BindingsTracking bindingsTracking;

            public KeyPadControl_obj1_Bindings()
            {
                this.bindingsTracking = new KeyPadControl_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 24 && columnNumber == 16)
                {
                    isobj2TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Controls\Utilities\KeyPadControl.xaml line 20
                        this.obj2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        this.bindingsTracking.RegisterTwoWayListener_2(this.obj2);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IKeyPadControl_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::Edam.WinUI.Controls.Utilities.KeyPadControl>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Edam.WinUI.Controls.Utilities.KeyPadControl obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::Edam.Uwp.ViewModels.KeyPadViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_TitleText(obj.TitleText, phase);
                    }
                }
            }
            private void Update_ViewModel_TitleText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Utilities\KeyPadControl.xaml line 20
                    if (!isobj2TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj2, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_2_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.TitleText = this.obj2.Text;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class KeyPadControl_obj1_BindingsTracking
            {
                private global::System.WeakReference<KeyPadControl_obj1_Bindings> weakRefToBindingObj; 

                public KeyPadControl_obj1_BindingsTracking(KeyPadControl_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<KeyPadControl_obj1_Bindings>(obj);
                }

                public KeyPadControl_obj1_Bindings TryGetBindingObject()
                {
                    KeyPadControl_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    KeyPadControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Edam.Uwp.ViewModels.KeyPadViewModel obj = sender as global::Edam.Uwp.ViewModels.KeyPadViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_TitleText(obj.TitleText, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "TitleText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_TitleText(obj.TitleText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Edam.Uwp.ViewModels.KeyPadViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::Edam.Uwp.ViewModels.KeyPadViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void RegisterTwoWayListener_2(global::Microsoft.UI.Xaml.Controls.TextBlock sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TextBlock.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_2_Text();
                        }
                    });
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 3: // Controls\Utilities\KeyPadControl.xaml line 62
                {
                    global::Edam.WinUI.Controls.Utilities.TextButtonControl element3 = global::WinRT.CastExtensions.As<global::Edam.WinUI.Controls.Utilities.TextButtonControl>(target);
                    ((global::Edam.WinUI.Controls.Utilities.TextButtonControl)element3).PointerPressed += this.TextButtonControl_PointerPressed;
                }
                break;
            case 4: // Controls\Utilities\KeyPadControl.xaml line 68
                {
                    global::Edam.WinUI.Controls.Utilities.TextButtonControl element4 = global::WinRT.CastExtensions.As<global::Edam.WinUI.Controls.Utilities.TextButtonControl>(target);
                    ((global::Edam.WinUI.Controls.Utilities.TextButtonControl)element4).PointerPressed += this.TextButtonControl_PointerPressed;
                }
                break;
            case 5: // Controls\Utilities\KeyPadControl.xaml line 74
                {
                    global::Edam.WinUI.Controls.Utilities.TextButtonControl element5 = global::WinRT.CastExtensions.As<global::Edam.WinUI.Controls.Utilities.TextButtonControl>(target);
                    ((global::Edam.WinUI.Controls.Utilities.TextButtonControl)element5).PointerPressed += this.TextButtonControl_PointerPressed;
                }
                break;
            case 6: // Controls\Utilities\KeyPadControl.xaml line 81
                {
                    global::Edam.WinUI.Controls.Utilities.TextButtonControl element6 = global::WinRT.CastExtensions.As<global::Edam.WinUI.Controls.Utilities.TextButtonControl>(target);
                    ((global::Edam.WinUI.Controls.Utilities.TextButtonControl)element6).PointerPressed += this.TextButtonControl_PointerPressed;
                }
                break;
            case 7: // Controls\Utilities\KeyPadControl.xaml line 87
                {
                    global::Edam.WinUI.Controls.Utilities.TextButtonControl element7 = global::WinRT.CastExtensions.As<global::Edam.WinUI.Controls.Utilities.TextButtonControl>(target);
                    ((global::Edam.WinUI.Controls.Utilities.TextButtonControl)element7).PointerPressed += this.TextButtonControl_PointerPressed;
                }
                break;
            case 8: // Controls\Utilities\KeyPadControl.xaml line 93
                {
                    global::Edam.WinUI.Controls.Utilities.TextButtonControl element8 = global::WinRT.CastExtensions.As<global::Edam.WinUI.Controls.Utilities.TextButtonControl>(target);
                    ((global::Edam.WinUI.Controls.Utilities.TextButtonControl)element8).PointerPressed += this.TextButtonControl_PointerPressed;
                }
                break;
            case 9: // Controls\Utilities\KeyPadControl.xaml line 100
                {
                    global::Edam.WinUI.Controls.Utilities.TextButtonControl element9 = global::WinRT.CastExtensions.As<global::Edam.WinUI.Controls.Utilities.TextButtonControl>(target);
                    ((global::Edam.WinUI.Controls.Utilities.TextButtonControl)element9).PointerPressed += this.TextButtonControl_PointerPressed;
                }
                break;
            case 10: // Controls\Utilities\KeyPadControl.xaml line 106
                {
                    global::Edam.WinUI.Controls.Utilities.TextButtonControl element10 = global::WinRT.CastExtensions.As<global::Edam.WinUI.Controls.Utilities.TextButtonControl>(target);
                    ((global::Edam.WinUI.Controls.Utilities.TextButtonControl)element10).PointerPressed += this.TextButtonControl_PointerPressed;
                }
                break;
            case 11: // Controls\Utilities\KeyPadControl.xaml line 112
                {
                    global::Edam.WinUI.Controls.Utilities.TextButtonControl element11 = global::WinRT.CastExtensions.As<global::Edam.WinUI.Controls.Utilities.TextButtonControl>(target);
                    ((global::Edam.WinUI.Controls.Utilities.TextButtonControl)element11).PointerPressed += this.TextButtonControl_PointerPressed;
                }
                break;
            case 12: // Controls\Utilities\KeyPadControl.xaml line 119
                {
                    global::Edam.WinUI.Controls.Utilities.TextButtonControl element12 = global::WinRT.CastExtensions.As<global::Edam.WinUI.Controls.Utilities.TextButtonControl>(target);
                    ((global::Edam.WinUI.Controls.Utilities.TextButtonControl)element12).PointerPressed += this.TextButtonControl_PointerPressed;
                }
                break;
            case 13: // Controls\Utilities\KeyPadControl.xaml line 125
                {
                    global::Edam.WinUI.Controls.Utilities.TextButtonControl element13 = global::WinRT.CastExtensions.As<global::Edam.WinUI.Controls.Utilities.TextButtonControl>(target);
                    ((global::Edam.WinUI.Controls.Utilities.TextButtonControl)element13).PointerPressed += this.TextButtonControl_PointerPressed;
                }
                break;
            case 14: // Controls\Utilities\KeyPadControl.xaml line 131
                {
                    this.OKButton = global::WinRT.CastExtensions.As<global::Edam.WinUI.Controls.Utilities.TextButtonControl>(target);
                    ((global::Edam.WinUI.Controls.Utilities.TextButtonControl)this.OKButton).PointerPressed += this.TextButtonControl_PointerPressed;
                }
                break;
            case 15: // Controls\Utilities\KeyPadControl.xaml line 140
                {
                    global::Edam.WinUI.Controls.Utilities.TextButtonControl element15 = global::WinRT.CastExtensions.As<global::Edam.WinUI.Controls.Utilities.TextButtonControl>(target);
                    ((global::Edam.WinUI.Controls.Utilities.TextButtonControl)element15).PointerPressed += this.TextButtonControl_PointerPressed;
                }
                break;
            case 16: // Controls\Utilities\KeyPadControl.xaml line 38
                {
                    this.TextBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Controls\Utilities\KeyPadControl.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.UserControl element1 = (global::Microsoft.UI.Xaml.Controls.UserControl)target;
                    KeyPadControl_obj1_Bindings bindings = new KeyPadControl_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

