#pragma checksum "C:\prjs\Datovy.Edam\Edam.Libraries\Edam.UI\Edam.Xaml\Edam.WinUI.Controls\Controls\Assets\AssetMapSidePanelControl.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "F4B16D44694AC7647AEDF5AFF2129F9640026B9E536B228CAE7EEEC5B4A6DA04"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Edam.WinUI.Controls.Assets
{
    partial class AssetMapSidePanelControl : 
        global::Microsoft.UI.Xaml.Controls.UserControl, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_UIElement_Visibility(global::Microsoft.UI.Xaml.UIElement obj, global::Microsoft.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_FontIcon_Glyph(global::Microsoft.UI.Xaml.Controls.FontIcon obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Glyph = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBox_Text(global::Microsoft.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AssetMapSidePanelControl_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IAssetMapSidePanelControl_Bindings
        {
            private global::Edam.WinUI.Controls.Assets.AssetMapSidePanelControl dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.StackPanel obj2;
            private global::Microsoft.UI.Xaml.Controls.FontIcon obj4;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj5;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj6;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj7;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj8;
            private global::Microsoft.UI.Xaml.Controls.ListView obj9;
            private global::Microsoft.UI.Xaml.Controls.ListView obj11;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj13;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj14;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2VisibilityDisabled = false;
            private static bool isobj4GlyphDisabled = false;
            private static bool isobj5TextDisabled = false;
            private static bool isobj6TextDisabled = false;
            private static bool isobj7TextDisabled = false;
            private static bool isobj8TextDisabled = false;
            private static bool isobj9ItemsSourceDisabled = false;
            private static bool isobj11ItemsSourceDisabled = false;
            private static bool isobj13TextDisabled = false;
            private static bool isobj14TextDisabled = false;

            private AssetMapSidePanelControl_obj1_BindingsTracking bindingsTracking;

            public AssetMapSidePanelControl_obj1_Bindings()
            {
                this.bindingsTracking = new AssetMapSidePanelControl_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 23 && columnNumber == 86)
                {
                    isobj2VisibilityDisabled = true;
                }
                else if (lineNumber == 112 && columnNumber == 81)
                {
                    isobj4GlyphDisabled = true;
                }
                else if (lineNumber == 101 && columnNumber == 45)
                {
                    isobj5TextDisabled = true;
                }
                else if (lineNumber == 102 && columnNumber == 52)
                {
                    isobj6TextDisabled = true;
                }
                else if (lineNumber == 84 && columnNumber == 52)
                {
                    isobj7TextDisabled = true;
                }
                else if (lineNumber == 86 && columnNumber == 53)
                {
                    isobj8TextDisabled = true;
                }
                else if (lineNumber == 65 && columnNumber == 29)
                {
                    isobj9ItemsSourceDisabled = true;
                }
                else if (lineNumber == 47 && columnNumber == 29)
                {
                    isobj11ItemsSourceDisabled = true;
                }
                else if (lineNumber == 32 && columnNumber == 45)
                {
                    isobj13TextDisabled = true;
                }
                else if (lineNumber == 33 && columnNumber == 52)
                {
                    isobj14TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Controls\Assets\AssetMapSidePanelControl.xaml line 23
                        this.obj2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                        this.bindingsTracking.RegisterTwoWayListener_2(this.obj2);
                        break;
                    case 4: // Controls\Assets\AssetMapSidePanelControl.xaml line 112
                        this.obj4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.FontIcon>(target);
                        this.bindingsTracking.RegisterTwoWayListener_4(this.obj4);
                        break;
                    case 5: // Controls\Assets\AssetMapSidePanelControl.xaml line 101
                        this.obj5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_5(this.obj5);
                        break;
                    case 6: // Controls\Assets\AssetMapSidePanelControl.xaml line 102
                        this.obj6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_6(this.obj6);
                        break;
                    case 7: // Controls\Assets\AssetMapSidePanelControl.xaml line 84
                        this.obj7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_7(this.obj7);
                        break;
                    case 8: // Controls\Assets\AssetMapSidePanelControl.xaml line 86
                        this.obj8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_8(this.obj8);
                        break;
                    case 9: // Controls\Assets\AssetMapSidePanelControl.xaml line 65
                        this.obj9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListView>(target);
                        this.bindingsTracking.RegisterTwoWayListener_9(this.obj9);
                        break;
                    case 11: // Controls\Assets\AssetMapSidePanelControl.xaml line 47
                        this.obj11 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListView>(target);
                        this.bindingsTracking.RegisterTwoWayListener_11(this.obj11);
                        break;
                    case 13: // Controls\Assets\AssetMapSidePanelControl.xaml line 32
                        this.obj13 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_13(this.obj13);
                        break;
                    case 14: // Controls\Assets\AssetMapSidePanelControl.xaml line 33
                        this.obj14 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_14(this.obj14);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IAssetMapSidePanelControl_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::Edam.WinUI.Controls.Assets.AssetMapSidePanelControl>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Edam.WinUI.Controls.Assets.AssetMapSidePanelControl obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::Edam.WinUI.Controls.ViewModels.DataMapSidePanelViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_PanelVisibility(obj.PanelVisibility, phase);
                        this.Update_ViewModel_SelectedChevron(obj.SelectedChevron, phase);
                        this.Update_ViewModel_SelectedBooklet(obj.SelectedBooklet, phase);
                        this.Update_ViewModel_SelectedMapItem(obj.SelectedMapItem, phase);
                        this.Update_ViewModel_Context(obj.Context, phase);
                        this.Update_ViewModel_UseCaseName(obj.UseCaseName, phase);
                        this.Update_ViewModel_UseCaseDescription(obj.UseCaseDescription, phase);
                    }
                }
            }
            private void Update_ViewModel_PanelVisibility(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Assets\AssetMapSidePanelControl.xaml line 23
                    if (!isobj2VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj2, obj);
                    }
                }
            }
            private void Update_ViewModel_SelectedChevron(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Assets\AssetMapSidePanelControl.xaml line 112
                    if (!isobj4GlyphDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_FontIcon_Glyph(this.obj4, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedBooklet(global::Edam.Data.Books.BookletInfo obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedBooklet_Name(obj.Name, phase);
                        this.Update_ViewModel_SelectedBooklet_Description(obj.Description, phase);
                    }
                }
            }
            private void Update_ViewModel_SelectedBooklet_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Assets\AssetMapSidePanelControl.xaml line 101
                    if (!isobj5TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj5, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedBooklet_Description(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Assets\AssetMapSidePanelControl.xaml line 102
                    if (!isobj6TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj6, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedMapItem(global::Edam.Data.AssetSchema.AssetDataMapItem obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedMapItem_Description(obj.Description, phase);
                        this.Update_ViewModel_SelectedMapItem_Instructions(obj.Instructions, phase);
                    }
                }
            }
            private void Update_ViewModel_SelectedMapItem_Description(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Assets\AssetMapSidePanelControl.xaml line 84
                    if (!isobj7TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj7, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedMapItem_Instructions(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Assets\AssetMapSidePanelControl.xaml line 86
                    if (!isobj8TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj8, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Context(global::Edam.WinUI.Controls.DataModels.DataMapContext obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Context(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Context_TargetItems(obj.TargetItems, phase);
                        this.Update_ViewModel_Context_SourceItems(obj.SourceItems, phase);
                    }
                }
            }
            private void Update_ViewModel_Context_TargetItems(global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.AssetSchema.MapItemInfo> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Context_TargetItems(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Assets\AssetMapSidePanelControl.xaml line 65
                    if (!isobj9ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj9, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Context_SourceItems(global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.AssetSchema.MapItemInfo> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Context_SourceItems(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Assets\AssetMapSidePanelControl.xaml line 47
                    if (!isobj11ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj11, obj, null);
                    }
                }
            }
            private void Update_ViewModel_UseCaseName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Assets\AssetMapSidePanelControl.xaml line 32
                    if (!isobj13TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj13, obj, null);
                    }
                }
            }
            private void Update_ViewModel_UseCaseDescription(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Assets\AssetMapSidePanelControl.xaml line 33
                    if (!isobj14TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj14, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_2_Visibility()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.PanelVisibility = this.obj2.Visibility;
                        }
                    }
                }
            }
            private void UpdateTwoWay_4_Glyph()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedChevron = this.obj4.Glyph;
                        }
                    }
                }
            }
            private void UpdateTwoWay_5_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.SelectedBooklet != null)
                            {
                                this.dataRoot.ViewModel.SelectedBooklet.Name = this.obj5.Text;
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_6_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.SelectedBooklet != null)
                            {
                                this.dataRoot.ViewModel.SelectedBooklet.Description = this.obj6.Text;
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_7_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.SelectedMapItem != null)
                            {
                                this.dataRoot.ViewModel.SelectedMapItem.Description = this.obj7.Text;
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_8_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.SelectedMapItem != null)
                            {
                                this.dataRoot.ViewModel.SelectedMapItem.Instructions = this.obj8.Text;
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_9_ItemsSource()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.Context != null)
                            {
                                this.dataRoot.ViewModel.Context.TargetItems = (global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.AssetSchema.MapItemInfo>)this.obj9.ItemsSource;
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_11_ItemsSource()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.Context != null)
                            {
                                this.dataRoot.ViewModel.Context.SourceItems = (global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.AssetSchema.MapItemInfo>)this.obj11.ItemsSource;
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_13_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.UseCaseName = this.obj13.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_14_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.UseCaseDescription = this.obj14.Text;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AssetMapSidePanelControl_obj1_BindingsTracking
            {
                private global::System.WeakReference<AssetMapSidePanelControl_obj1_Bindings> weakRefToBindingObj; 

                public AssetMapSidePanelControl_obj1_BindingsTracking(AssetMapSidePanelControl_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AssetMapSidePanelControl_obj1_Bindings>(obj);
                }

                public AssetMapSidePanelControl_obj1_Bindings TryGetBindingObject()
                {
                    AssetMapSidePanelControl_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_Context(null);
                    UpdateChildListeners_ViewModel_Context_TargetItems(null);
                    UpdateChildListeners_ViewModel_Context_SourceItems(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AssetMapSidePanelControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Edam.WinUI.Controls.ViewModels.DataMapSidePanelViewModel obj = sender as global::Edam.WinUI.Controls.ViewModels.DataMapSidePanelViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_PanelVisibility(obj.PanelVisibility, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedChevron(obj.SelectedChevron, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedBooklet(obj.SelectedBooklet, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedMapItem(obj.SelectedMapItem, DATA_CHANGED);
                                bindings.Update_ViewModel_Context(obj.Context, DATA_CHANGED);
                                bindings.Update_ViewModel_UseCaseName(obj.UseCaseName, DATA_CHANGED);
                                bindings.Update_ViewModel_UseCaseDescription(obj.UseCaseDescription, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "PanelVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_PanelVisibility(obj.PanelVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedChevron":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedChevron(obj.SelectedChevron, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedBooklet":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedBooklet(obj.SelectedBooklet, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedMapItem":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedMapItem(obj.SelectedMapItem, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Context":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Context(obj.Context, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "UseCaseName":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_UseCaseName(obj.UseCaseName, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "UseCaseDescription":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_UseCaseDescription(obj.UseCaseDescription, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Edam.WinUI.Controls.ViewModels.DataMapSidePanelViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::Edam.WinUI.Controls.ViewModels.DataMapSidePanelViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Context(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AssetMapSidePanelControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Edam.WinUI.Controls.DataModels.DataMapContext obj = sender as global::Edam.WinUI.Controls.DataModels.DataMapContext;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Context_TargetItems(obj.TargetItems, DATA_CHANGED);
                                bindings.Update_ViewModel_Context_SourceItems(obj.SourceItems, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "TargetItems":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Context_TargetItems(obj.TargetItems, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SourceItems":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Context_SourceItems(obj.SourceItems, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Edam.WinUI.Controls.DataModels.DataMapContext cache_ViewModel_Context = null;
                public void UpdateChildListeners_ViewModel_Context(global::Edam.WinUI.Controls.DataModels.DataMapContext obj)
                {
                    if (obj != cache_ViewModel_Context)
                    {
                        if (cache_ViewModel_Context != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Context).PropertyChanged -= PropertyChanged_ViewModel_Context;
                            cache_ViewModel_Context = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Context = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Context;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Context_TargetItems(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AssetMapSidePanelControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.AssetSchema.MapItemInfo> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.AssetSchema.MapItemInfo>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_Context_TargetItems(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    AssetMapSidePanelControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.AssetSchema.MapItemInfo> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.AssetSchema.MapItemInfo>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.AssetSchema.MapItemInfo> cache_ViewModel_Context_TargetItems = null;
                public void UpdateChildListeners_ViewModel_Context_TargetItems(global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.AssetSchema.MapItemInfo> obj)
                {
                    if (obj != cache_ViewModel_Context_TargetItems)
                    {
                        if (cache_ViewModel_Context_TargetItems != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Context_TargetItems).PropertyChanged -= PropertyChanged_ViewModel_Context_TargetItems;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_Context_TargetItems).CollectionChanged -= CollectionChanged_ViewModel_Context_TargetItems;
                            cache_ViewModel_Context_TargetItems = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Context_TargetItems = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Context_TargetItems;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_Context_TargetItems;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Context_SourceItems(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AssetMapSidePanelControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.AssetSchema.MapItemInfo> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.AssetSchema.MapItemInfo>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_Context_SourceItems(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    AssetMapSidePanelControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.AssetSchema.MapItemInfo> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.AssetSchema.MapItemInfo>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.AssetSchema.MapItemInfo> cache_ViewModel_Context_SourceItems = null;
                public void UpdateChildListeners_ViewModel_Context_SourceItems(global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.AssetSchema.MapItemInfo> obj)
                {
                    if (obj != cache_ViewModel_Context_SourceItems)
                    {
                        if (cache_ViewModel_Context_SourceItems != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Context_SourceItems).PropertyChanged -= PropertyChanged_ViewModel_Context_SourceItems;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_Context_SourceItems).CollectionChanged -= CollectionChanged_ViewModel_Context_SourceItems;
                            cache_ViewModel_Context_SourceItems = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Context_SourceItems = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Context_SourceItems;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_Context_SourceItems;
                        }
                    }
                }
                public void RegisterTwoWayListener_2(global::Microsoft.UI.Xaml.Controls.StackPanel sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.UIElement.VisibilityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_2_Visibility();
                        }
                    });
                }
                public void RegisterTwoWayListener_4(global::Microsoft.UI.Xaml.Controls.FontIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.FontIcon.GlyphProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_4_Glyph();
                        }
                    });
                }
                public void RegisterTwoWayListener_5(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_6(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_6_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_7(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_7_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_8(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_8_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_9(global::Microsoft.UI.Xaml.Controls.ListView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ItemsControl.ItemsSourceProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_9_ItemsSource();
                        }
                    });
                }
                public void RegisterTwoWayListener_11(global::Microsoft.UI.Xaml.Controls.ListView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ItemsControl.ItemsSourceProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_11_ItemsSource();
                        }
                    });
                }
                public void RegisterTwoWayListener_13(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_13_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_14(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_14_Text();
                        }
                    };
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 3: // Controls\Assets\AssetMapSidePanelControl.xaml line 111
                {
                    this.SidePanelToggle = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.SidePanelToggle).Click += this.SidePanelToggle_Click;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Controls\Assets\AssetMapSidePanelControl.xaml line 4
                {                    
                    global::Microsoft.UI.Xaml.Controls.UserControl element1 = (global::Microsoft.UI.Xaml.Controls.UserControl)target;
                    AssetMapSidePanelControl_obj1_Bindings bindings = new AssetMapSidePanelControl_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

