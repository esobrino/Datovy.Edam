#pragma checksum "C:\prjs\Datovy.Edam\Edam.Libraries\Edam.UI\Edam.Xaml\Edam.WinUI.Controls\Controls\Projects\ProjectSidePanelControl.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "8890E2BB73828FD3F9A5F2ADCC8815858F4E3636C1DFF41872317A4985B4A2D8"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Edam.WinUI.Controls.Projects
{
    partial class ProjectSidePanelControl : 
        global::Microsoft.UI.Xaml.Controls.UserControl, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_TreeView_ItemsSource(global::Microsoft.UI.Xaml.Controls.TreeView obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TreeViewItem_ItemsSource(global::Microsoft.UI.Xaml.Controls.TreeViewItem obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Microsoft_UI_Xaml_UIElement_Visibility(global::Microsoft.UI.Xaml.UIElement obj, global::Microsoft.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBox_Text(global::Microsoft.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_FontIcon_Glyph(global::Microsoft.UI.Xaml.Controls.FontIcon obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Glyph = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ProjectSidePanelControl_obj4_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IProjectSidePanelControl_Bindings
        {
            private global::Edam.WinUI.Controls.DataModels.ProjectItem dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Microsoft.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Microsoft.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj4;
            private global::Microsoft.UI.Xaml.Controls.StackPanel obj9;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj10;
            private global::Microsoft.UI.Xaml.Controls.FontIcon obj11;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj12;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj4ItemsSourceDisabled = false;
            private static bool isobj9VisibilityDisabled = false;
            private static bool isobj10TextDisabled = false;
            private static bool isobj10VisibilityDisabled = false;
            private static bool isobj11GlyphDisabled = false;
            private static bool isobj12TextDisabled = false;

            private ProjectSidePanelControl_obj4_BindingsTracking bindingsTracking;

            public ProjectSidePanelControl_obj4_Bindings()
            {
                this.bindingsTracking = new ProjectSidePanelControl_obj4_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 40 && columnNumber == 52)
                {
                    isobj4ItemsSourceDisabled = true;
                }
                else if (lineNumber == 54 && columnNumber == 37)
                {
                    isobj9VisibilityDisabled = true;
                }
                else if (lineNumber == 60 && columnNumber == 56)
                {
                    isobj10TextDisabled = true;
                }
                else if (lineNumber == 61 && columnNumber == 66)
                {
                    isobj10VisibilityDisabled = true;
                }
                else if (lineNumber == 55 && columnNumber == 69)
                {
                    isobj11GlyphDisabled = true;
                }
                else if (lineNumber == 57 && columnNumber == 74)
                {
                    isobj12TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 4: // Controls\Projects\ProjectSidePanelControl.xaml line 40
                        this.obj4 = new global::System.WeakReference(global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TreeViewItem>(target));
                        this.bindingsTracking.RegisterTwoWayListener_4((this.obj4.Target as global::Microsoft.UI.Xaml.Controls.TreeViewItem));
                        break;
                    case 9: // Controls\Projects\ProjectSidePanelControl.xaml line 53
                        this.obj9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                        this.bindingsTracking.RegisterTwoWayListener_9(this.obj9);
                        break;
                    case 10: // Controls\Projects\ProjectSidePanelControl.xaml line 60
                        this.obj10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_10(this.obj10);
                        break;
                    case 11: // Controls\Projects\ProjectSidePanelControl.xaml line 55
                        this.obj11 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.FontIcon>(target);
                        break;
                    case 12: // Controls\Projects\ProjectSidePanelControl.xaml line 57
                        this.obj12 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj4.Target as global::Microsoft.UI.Xaml.Controls.TreeViewItem).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_(global::WinRT.CastExtensions.As<global::Edam.WinUI.Controls.DataModels.ProjectItem>(item), 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IProjectSidePanelControl_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::Edam.WinUI.Controls.DataModels.ProjectItem>(newDataRoot);
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Microsoft.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Microsoft.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Microsoft.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Microsoft.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Microsoft.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Microsoft.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Edam.WinUI.Controls.DataModels.ProjectItem obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Children(obj.Children, phase);
                        this.Update_TextVisibility(obj.TextVisibility, phase);
                        this.Update_SelectedText(obj.SelectedText, phase);
                        this.Update_TextEditorVisibility(obj.TextEditorVisibility, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Item(obj.Item, phase);
                    }
                }
            }
            private void Update_Children(global::System.Collections.ObjectModel.ObservableCollection<global::Edam.WinUI.Controls.DataModels.ProjectItem> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Children(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Projects\ProjectSidePanelControl.xaml line 40
                    if (!isobj4ItemsSourceDisabled)
                    {
                        if ((this.obj4.Target as global::Microsoft.UI.Xaml.Controls.TreeViewItem) != null)
                        {
                            XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TreeViewItem_ItemsSource((this.obj4.Target as global::Microsoft.UI.Xaml.Controls.TreeViewItem), obj, null);
                        }
                    }
                }
            }
            private void Update_TextVisibility(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Projects\ProjectSidePanelControl.xaml line 53
                    if (!isobj9VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj9, obj);
                    }
                }
            }
            private void Update_SelectedText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Projects\ProjectSidePanelControl.xaml line 60
                    if (!isobj10TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj10, obj, null);
                    }
                }
            }
            private void Update_TextEditorVisibility(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Projects\ProjectSidePanelControl.xaml line 60
                    if (!isobj10VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj10, obj);
                    }
                }
            }
            private void Update_Item(global::Edam.InOut.ItemBaseInfo obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Item_Type(obj.Type, phase);
                        this.Update_Item_NameFull(obj.NameFull, phase);
                    }
                }
            }
            private void Update_Item_Type(global::Edam.InOut.ItemType obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Controls\Projects\ProjectSidePanelControl.xaml line 55
                    if (!isobj11GlyphDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_FontIcon_Glyph(this.obj11, (global::System.String)this.LookupConverter("FileConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_Item_NameFull(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Controls\Projects\ProjectSidePanelControl.xaml line 57
                    if (!isobj12TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj12, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_4_ItemsSource()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.Children = (global::System.Collections.ObjectModel.ObservableCollection<global::Edam.WinUI.Controls.DataModels.ProjectItem>)(this.obj4.Target as global::Microsoft.UI.Xaml.Controls.TreeViewItem).ItemsSource;
                    }
                }
            }
            private void UpdateTwoWay_9_Visibility()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.TextVisibility = this.obj9.Visibility;
                    }
                }
            }
            private void UpdateTwoWay_10_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.SelectedText = this.obj10.Text;
                    }
                }
            }
            private void UpdateTwoWay_10_Visibility()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.TextEditorVisibility = this.obj10.Visibility;
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class ProjectSidePanelControl_obj4_BindingsTracking
            {
                private global::System.WeakReference<ProjectSidePanelControl_obj4_Bindings> weakRefToBindingObj; 

                public ProjectSidePanelControl_obj4_BindingsTracking(ProjectSidePanelControl_obj4_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<ProjectSidePanelControl_obj4_Bindings>(obj);
                }

                public ProjectSidePanelControl_obj4_Bindings TryGetBindingObject()
                {
                    ProjectSidePanelControl_obj4_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_Children(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ProjectSidePanelControl_obj4_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Edam.WinUI.Controls.DataModels.ProjectItem obj = sender as global::Edam.WinUI.Controls.DataModels.ProjectItem;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_Children(obj.Children, DATA_CHANGED);
                                bindings.Update_TextVisibility(obj.TextVisibility, DATA_CHANGED);
                                bindings.Update_SelectedText(obj.SelectedText, DATA_CHANGED);
                                bindings.Update_TextEditorVisibility(obj.TextEditorVisibility, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Children":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Children(obj.Children, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TextVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_TextVisibility(obj.TextVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedText(obj.SelectedText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TextEditorVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_TextEditorVisibility(obj.TextEditorVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::Edam.WinUI.Controls.DataModels.ProjectItem obj)
                {
                    ProjectSidePanelControl_obj4_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_Children(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ProjectSidePanelControl_obj4_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::Edam.WinUI.Controls.DataModels.ProjectItem> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Edam.WinUI.Controls.DataModels.ProjectItem>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_Children(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    ProjectSidePanelControl_obj4_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::Edam.WinUI.Controls.DataModels.ProjectItem> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Edam.WinUI.Controls.DataModels.ProjectItem>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::Edam.WinUI.Controls.DataModels.ProjectItem> cache_Children = null;
                public void UpdateChildListeners_Children(global::System.Collections.ObjectModel.ObservableCollection<global::Edam.WinUI.Controls.DataModels.ProjectItem> obj)
                {
                    if (obj != cache_Children)
                    {
                        if (cache_Children != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_Children).PropertyChanged -= PropertyChanged_Children;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_Children).CollectionChanged -= CollectionChanged_Children;
                            cache_Children = null;
                        }
                        if (obj != null)
                        {
                            cache_Children = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_Children;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_Children;
                        }
                    }
                }
                public void RegisterTwoWayListener_4(global::Microsoft.UI.Xaml.Controls.TreeViewItem sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TreeViewItem.ItemsSourceProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_4_ItemsSource();
                        }
                    });
                }
                public void RegisterTwoWayListener_9(global::Microsoft.UI.Xaml.Controls.StackPanel sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.UIElement.VisibilityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_9_Visibility();
                        }
                    });
                }
                public void RegisterTwoWayListener_10(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_10_Text();
                        }
                    };
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.UIElement.VisibilityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_10_Visibility();
                        }
                    });
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ProjectSidePanelControl_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IProjectSidePanelControl_Bindings
        {
            private global::Edam.WinUI.Controls.Projects.ProjectSidePanelControl dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.TreeView obj2;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2ItemsSourceDisabled = false;

            private ProjectSidePanelControl_obj1_BindingsTracking bindingsTracking;

            public ProjectSidePanelControl_obj1_Bindings()
            {
                this.bindingsTracking = new ProjectSidePanelControl_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 36 && columnNumber == 16)
                {
                    isobj2ItemsSourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Controls\Projects\ProjectSidePanelControl.xaml line 34
                        this.obj2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TreeView>(target);
                        this.bindingsTracking.RegisterTwoWayListener_2(this.obj2);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IProjectSidePanelControl_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::Edam.WinUI.Controls.Projects.ProjectSidePanelControl>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Edam.WinUI.Controls.Projects.ProjectSidePanelControl obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::Edam.WinUI.Controls.ViewModels.ProjectViewerViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_TreeView(obj.TreeView, phase);
                    }
                }
            }
            private void Update_ViewModel_TreeView(global::Edam.WinUI.Controls.DataModels.ProjectItem obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_TreeView(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_TreeView_Children(obj.Children, phase);
                    }
                }
            }
            private void Update_ViewModel_TreeView_Children(global::System.Collections.ObjectModel.ObservableCollection<global::Edam.WinUI.Controls.DataModels.ProjectItem> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_TreeView_Children(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Projects\ProjectSidePanelControl.xaml line 34
                    if (!isobj2ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TreeView_ItemsSource(this.obj2, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_2_ItemsSource()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.TreeView != null)
                            {
                                this.dataRoot.ViewModel.TreeView.Children = (global::System.Collections.ObjectModel.ObservableCollection<global::Edam.WinUI.Controls.DataModels.ProjectItem>)this.obj2.ItemsSource;
                            }
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class ProjectSidePanelControl_obj1_BindingsTracking
            {
                private global::System.WeakReference<ProjectSidePanelControl_obj1_Bindings> weakRefToBindingObj; 

                public ProjectSidePanelControl_obj1_BindingsTracking(ProjectSidePanelControl_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<ProjectSidePanelControl_obj1_Bindings>(obj);
                }

                public ProjectSidePanelControl_obj1_Bindings TryGetBindingObject()
                {
                    ProjectSidePanelControl_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_TreeView(null);
                    UpdateChildListeners_ViewModel_TreeView_Children(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ProjectSidePanelControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Edam.WinUI.Controls.ViewModels.ProjectViewerViewModel obj = sender as global::Edam.WinUI.Controls.ViewModels.ProjectViewerViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_TreeView(obj.TreeView, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "TreeView":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_TreeView(obj.TreeView, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Edam.WinUI.Controls.ViewModels.ProjectViewerViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::Edam.WinUI.Controls.ViewModels.ProjectViewerViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_TreeView(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ProjectSidePanelControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Edam.WinUI.Controls.DataModels.ProjectItem obj = sender as global::Edam.WinUI.Controls.DataModels.ProjectItem;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_TreeView_Children(obj.Children, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Children":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_TreeView_Children(obj.Children, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Edam.WinUI.Controls.DataModels.ProjectItem cache_ViewModel_TreeView = null;
                public void UpdateChildListeners_ViewModel_TreeView(global::Edam.WinUI.Controls.DataModels.ProjectItem obj)
                {
                    if (obj != cache_ViewModel_TreeView)
                    {
                        if (cache_ViewModel_TreeView != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_TreeView).PropertyChanged -= PropertyChanged_ViewModel_TreeView;
                            cache_ViewModel_TreeView = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_TreeView = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_TreeView;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_TreeView_Children(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ProjectSidePanelControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::Edam.WinUI.Controls.DataModels.ProjectItem> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Edam.WinUI.Controls.DataModels.ProjectItem>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_TreeView_Children(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    ProjectSidePanelControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::Edam.WinUI.Controls.DataModels.ProjectItem> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Edam.WinUI.Controls.DataModels.ProjectItem>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::Edam.WinUI.Controls.DataModels.ProjectItem> cache_ViewModel_TreeView_Children = null;
                public void UpdateChildListeners_ViewModel_TreeView_Children(global::System.Collections.ObjectModel.ObservableCollection<global::Edam.WinUI.Controls.DataModels.ProjectItem> obj)
                {
                    if (obj != cache_ViewModel_TreeView_Children)
                    {
                        if (cache_ViewModel_TreeView_Children != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_TreeView_Children).PropertyChanged -= PropertyChanged_ViewModel_TreeView_Children;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_TreeView_Children).CollectionChanged -= CollectionChanged_ViewModel_TreeView_Children;
                            cache_ViewModel_TreeView_Children = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_TreeView_Children = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_TreeView_Children;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_TreeView_Children;
                        }
                    }
                }
                public void RegisterTwoWayListener_2(global::Microsoft.UI.Xaml.Controls.TreeView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TreeView.ItemsSourceProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_2_ItemsSource();
                        }
                    });
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Controls\Projects\ProjectSidePanelControl.xaml line 34
                {
                    this.TreeView = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TreeView>(target);
                }
                break;
            case 4: // Controls\Projects\ProjectSidePanelControl.xaml line 40
                {
                    global::Microsoft.UI.Xaml.Controls.TreeViewItem element4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TreeViewItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TreeViewItem)element4).KeyDown += this.TreeViewItem_KeyDown;
                    ((global::Microsoft.UI.Xaml.Controls.TreeViewItem)element4).PointerPressed += this.TreeViewItem_PointerPressed;
                }
                break;
            case 5: // Controls\Projects\ProjectSidePanelControl.xaml line 45
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element5).Click += this.TreeItemEdit_Click;
                }
                break;
            case 6: // Controls\Projects\ProjectSidePanelControl.xaml line 46
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element6).Click += this.TreeItemCopy_Click;
                }
                break;
            case 7: // Controls\Projects\ProjectSidePanelControl.xaml line 47
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element7).Click += this.TreeAddItems_Click;
                }
                break;
            case 8: // Controls\Projects\ProjectSidePanelControl.xaml line 49
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element8).Click += this.TreeItemDelete_Click;
                }
                break;
            case 10: // Controls\Projects\ProjectSidePanelControl.xaml line 60
                {
                    global::Microsoft.UI.Xaml.Controls.TextBox element10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)element10).KeyDown += this.ItemTextEdit_KeyDown;
                }
                break;
            case 12: // Controls\Projects\ProjectSidePanelControl.xaml line 57
                {
                    global::Microsoft.UI.Xaml.Controls.TextBlock element12 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBlock)element12).PointerPressed += this.ItemText_PointerPressed;
                    ((global::Microsoft.UI.Xaml.Controls.TextBlock)element12).DoubleTapped += this.TextBlock_DoubleTapped;
                }
                break;
            case 13: // Controls\Projects\ProjectSidePanelControl.xaml line 27
                {
                    global::Microsoft.UI.Xaml.Controls.AppBarButton element13 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)element13).Click += this.ProjectRefresh_Click;
                }
                break;
            case 14: // Controls\Projects\ProjectSidePanelControl.xaml line 30
                {
                    global::Microsoft.UI.Xaml.Controls.AppBarButton element14 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)element14).Click += this.ProjectAdd_Click;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Controls\Projects\ProjectSidePanelControl.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.UserControl element1 = (global::Microsoft.UI.Xaml.Controls.UserControl)target;
                    ProjectSidePanelControl_obj1_Bindings bindings = new ProjectSidePanelControl_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 4: // Controls\Projects\ProjectSidePanelControl.xaml line 40
                {                    
                    global::Microsoft.UI.Xaml.Controls.TreeViewItem element4 = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)target;
                    ProjectSidePanelControl_obj4_Bindings bindings = new ProjectSidePanelControl_obj4_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element4.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element4.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element4, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element4, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

