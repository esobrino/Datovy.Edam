#pragma checksum "C:\prjs\Datovy.Edam\Edam.Libraries\Edam.UI\Edam.Xaml\Edam.WinUI.Controls\Controls\Assets\AssetSidePanelControl.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "A632105AA94B8383A4FF061C824C8F5333B6C987E95B211456F04744CE49EB1E"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Edam.WinUI.Controls.Assets
{
    partial class AssetSidePanelControl : 
        global::Microsoft.UI.Xaml.Controls.UserControl, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_UIElement_Visibility(global::Microsoft.UI.Xaml.UIElement obj, global::Microsoft.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsRepeater_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsRepeater obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_FontIcon_Glyph(global::Microsoft.UI.Xaml.Controls.FontIcon obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Glyph = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AssetSidePanelControl_obj7_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IAssetSidePanelControl_Bindings
        {
            private global::Edam.Data.Asset.NamespaceInfo dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj7;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj8;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj9;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj8TextDisabled = false;
            private static bool isobj9TextDisabled = false;

            public AssetSidePanelControl_obj7_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 101 && columnNumber == 82)
                {
                    isobj8TextDisabled = true;
                }
                else if (lineNumber == 102 && columnNumber == 82)
                {
                    isobj9TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 7: // Controls\Assets\AssetSidePanelControl.xaml line 93
                        this.obj7 = new global::System.WeakReference(global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target));
                        break;
                    case 8: // Controls\Assets\AssetSidePanelControl.xaml line 101
                        this.obj8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 9: // Controls\Assets\AssetSidePanelControl.xaml line 102
                        this.obj9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj7.Target as global::Microsoft.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_(global::WinRT.CastExtensions.As<global::Edam.Data.Asset.NamespaceInfo>(item), 1 << phase);
            }

            public void Recycle()
            {
            }

            // IAssetSidePanelControl_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::Edam.Data.Asset.NamespaceInfo>(newDataRoot);
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Edam.Data.Asset.NamespaceInfo obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Prefix(obj.Prefix, phase);
                        this.Update_UriText(obj.UriText, phase);
                    }
                }
            }
            private void Update_Prefix(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Controls\Assets\AssetSidePanelControl.xaml line 101
                    if (!isobj8TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj8, obj, null);
                    }
                }
            }
            private void Update_UriText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Controls\Assets\AssetSidePanelControl.xaml line 102
                    if (!isobj9TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj9, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AssetSidePanelControl_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IAssetSidePanelControl_Bindings
        {
            private global::Edam.WinUI.Controls.Assets.AssetSidePanelControl dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Edam.WinUI.Controls.Assets.AssetDataTreeControl obj3;
            private global::Microsoft.UI.Xaml.Controls.StackPanel obj4;
            private global::Microsoft.UI.Xaml.Controls.ItemsRepeater obj5;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj10;
            private global::Microsoft.UI.Xaml.Controls.Button obj11;
            private global::Microsoft.UI.Xaml.Controls.FontIcon obj12;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj13;

            // Fields for each event bindings event handler.
            private global::Microsoft.UI.Xaml.RoutedEventHandler obj11Click;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj3VisibilityDisabled = false;
            private static bool isobj4VisibilityDisabled = false;
            private static bool isobj5VisibilityDisabled = false;
            private static bool isobj5ItemsSourceDisabled = false;
            private static bool isobj10TextDisabled = false;
            private static bool isobj12GlyphDisabled = false;
            private static bool isobj13ItemsSourceDisabled = false;

            private AssetSidePanelControl_obj1_BindingsTracking bindingsTracking;

            public AssetSidePanelControl_obj1_Bindings()
            {
                this.bindingsTracking = new AssetSidePanelControl_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 47 && columnNumber == 22)
                {
                    isobj3VisibilityDisabled = true;
                }
                else if (lineNumber == 52 && columnNumber == 22)
                {
                    isobj4VisibilityDisabled = true;
                }
                else if (lineNumber == 89 && columnNumber == 16)
                {
                    isobj5VisibilityDisabled = true;
                }
                else if (lineNumber == 90 && columnNumber == 16)
                {
                    isobj5ItemsSourceDisabled = true;
                }
                else if (lineNumber == 82 && columnNumber == 27)
                {
                    isobj10TextDisabled = true;
                }
                else if (lineNumber == 83 && columnNumber == 50)
                {
                    this.obj11.Click -= obj11Click;
                }
                else if (lineNumber == 84 && columnNumber == 74)
                {
                    isobj12GlyphDisabled = true;
                }
                else if (lineNumber == 60 && columnNumber == 57)
                {
                    isobj13ItemsSourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // Controls\Assets\AssetSidePanelControl.xaml line 44
                        this.obj3 = global::WinRT.CastExtensions.As<global::Edam.WinUI.Controls.Assets.AssetDataTreeControl>(target);
                        this.bindingsTracking.RegisterTwoWayListener_3(this.obj3);
                        break;
                    case 4: // Controls\Assets\AssetSidePanelControl.xaml line 49
                        this.obj4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                        this.bindingsTracking.RegisterTwoWayListener_4(this.obj4);
                        break;
                    case 5: // Controls\Assets\AssetSidePanelControl.xaml line 88
                        this.obj5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ItemsRepeater>(target);
                        this.bindingsTracking.RegisterTwoWayListener_5(this.obj5);
                        break;
                    case 10: // Controls\Assets\AssetSidePanelControl.xaml line 82
                        this.obj10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 11: // Controls\Assets\AssetSidePanelControl.xaml line 83
                        this.obj11 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        this.obj11Click = (global::System.Object p0, global::Microsoft.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.NamespacesToggle.ToggleClick(p0, p1);
                        };
                        (global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target)).Click += obj11Click;
                        break;
                    case 12: // Controls\Assets\AssetSidePanelControl.xaml line 84
                        this.obj12 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.FontIcon>(target);
                        this.bindingsTracking.RegisterTwoWayListener_12(this.obj12);
                        break;
                    case 13: // Controls\Assets\AssetSidePanelControl.xaml line 60
                        this.obj13 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_13(this.obj13);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IAssetSidePanelControl_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::Edam.WinUI.Controls.Assets.AssetSidePanelControl>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Edam.WinUI.Controls.Assets.AssetSidePanelControl obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                        this.Update_m_ViewModel(obj.m_ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::Edam.WinUI.Controls.ViewModels.MapSidePanelViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_TreePanelVisible(obj.TreePanelVisible, phase);
                        this.Update_ViewModel_SidePanelVisible(obj.SidePanelVisible, phase);
                        this.Update_ViewModel_NamespacesToggle(obj.NamespacesToggle, phase);
                        this.Update_ViewModel_SaveOptions(obj.SaveOptions, phase);
                    }
                }
            }
            private void Update_ViewModel_TreePanelVisible(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Assets\AssetSidePanelControl.xaml line 44
                    if (!isobj3VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj3, obj);
                    }
                }
            }
            private void Update_ViewModel_SidePanelVisible(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Assets\AssetSidePanelControl.xaml line 49
                    if (!isobj4VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj4, obj);
                    }
                }
            }
            private void Update_ViewModel_NamespacesToggle(global::Edam.WinUI.Controls.ViewModels.LableToggleViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_NamespacesToggle(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_NamespacesToggle_PanelVisibility(obj.PanelVisibility, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_NamespacesToggle_Text(obj.Text, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_NamespacesToggle_Icon(obj.Icon, phase);
                    }
                }
            }
            private void Update_ViewModel_NamespacesToggle_PanelVisibility(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Assets\AssetSidePanelControl.xaml line 88
                    if (!isobj5VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj5, obj);
                    }
                }
            }
            private void Update_m_ViewModel(global::Edam.WinUI.Controls.ViewModels.MapSidePanelViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_m_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_m_ViewModel_Namespaces(obj.Namespaces, phase);
                    }
                }
            }
            private void Update_m_ViewModel_Namespaces(global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.Asset.NamespaceInfo> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_m_ViewModel_Namespaces(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Assets\AssetSidePanelControl.xaml line 88
                    if (!isobj5ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsRepeater_ItemsSource(this.obj5, obj, null);
                    }
                }
            }
            private void Update_ViewModel_NamespacesToggle_Text(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Controls\Assets\AssetSidePanelControl.xaml line 82
                    if (!isobj10TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj10, obj, null);
                    }
                }
            }
            private void Update_ViewModel_NamespacesToggle_Icon(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Assets\AssetSidePanelControl.xaml line 84
                    if (!isobj12GlyphDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_FontIcon_Glyph(this.obj12, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SaveOptions(global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_SaveOptions(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\Assets\AssetSidePanelControl.xaml line 60
                    if (!isobj13ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj13, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_3_Visibility()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.TreePanelVisible = this.obj3.Visibility;
                        }
                    }
                }
            }
            private void UpdateTwoWay_4_Visibility()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SidePanelVisible = this.obj4.Visibility;
                        }
                    }
                }
            }
            private void UpdateTwoWay_5_Visibility()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.NamespacesToggle != null)
                            {
                                this.dataRoot.ViewModel.NamespacesToggle.PanelVisibility = this.obj5.Visibility;
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_5_ItemsSource()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.m_ViewModel != null)
                        {
                            this.dataRoot.m_ViewModel.Namespaces = (global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.Asset.NamespaceInfo>)this.obj5.ItemsSource;
                        }
                    }
                }
            }
            private void UpdateTwoWay_12_Glyph()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            if (this.dataRoot.ViewModel.NamespacesToggle != null)
                            {
                                this.dataRoot.ViewModel.NamespacesToggle.Icon = this.obj12.Glyph;
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_13_ItemsSource()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SaveOptions = (global::System.Collections.ObjectModel.ObservableCollection<global::System.String>)this.obj13.ItemsSource;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AssetSidePanelControl_obj1_BindingsTracking
            {
                private global::System.WeakReference<AssetSidePanelControl_obj1_Bindings> weakRefToBindingObj; 

                public AssetSidePanelControl_obj1_BindingsTracking(AssetSidePanelControl_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AssetSidePanelControl_obj1_Bindings>(obj);
                }

                public AssetSidePanelControl_obj1_Bindings TryGetBindingObject()
                {
                    AssetSidePanelControl_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_NamespacesToggle(null);
                    UpdateChildListeners_m_ViewModel(null);
                    UpdateChildListeners_m_ViewModel_Namespaces(null);
                    UpdateChildListeners_ViewModel_SaveOptions(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AssetSidePanelControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Edam.WinUI.Controls.ViewModels.MapSidePanelViewModel obj = sender as global::Edam.WinUI.Controls.ViewModels.MapSidePanelViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_TreePanelVisible(obj.TreePanelVisible, DATA_CHANGED);
                                bindings.Update_ViewModel_SidePanelVisible(obj.SidePanelVisible, DATA_CHANGED);
                                bindings.Update_ViewModel_NamespacesToggle(obj.NamespacesToggle, DATA_CHANGED);
                                bindings.Update_ViewModel_SaveOptions(obj.SaveOptions, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "TreePanelVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_TreePanelVisible(obj.TreePanelVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SidePanelVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SidePanelVisible(obj.SidePanelVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NamespacesToggle":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_NamespacesToggle(obj.NamespacesToggle, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SaveOptions":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SaveOptions(obj.SaveOptions, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Edam.WinUI.Controls.ViewModels.MapSidePanelViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::Edam.WinUI.Controls.ViewModels.MapSidePanelViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_NamespacesToggle(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AssetSidePanelControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Edam.WinUI.Controls.ViewModels.LableToggleViewModel obj = sender as global::Edam.WinUI.Controls.ViewModels.LableToggleViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_NamespacesToggle_PanelVisibility(obj.PanelVisibility, DATA_CHANGED);
                                bindings.Update_ViewModel_NamespacesToggle_Icon(obj.Icon, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "PanelVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_NamespacesToggle_PanelVisibility(obj.PanelVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Icon":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_NamespacesToggle_Icon(obj.Icon, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Edam.WinUI.Controls.ViewModels.LableToggleViewModel cache_ViewModel_NamespacesToggle = null;
                public void UpdateChildListeners_ViewModel_NamespacesToggle(global::Edam.WinUI.Controls.ViewModels.LableToggleViewModel obj)
                {
                    if (obj != cache_ViewModel_NamespacesToggle)
                    {
                        if (cache_ViewModel_NamespacesToggle != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_NamespacesToggle).PropertyChanged -= PropertyChanged_ViewModel_NamespacesToggle;
                            cache_ViewModel_NamespacesToggle = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_NamespacesToggle = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_NamespacesToggle;
                        }
                    }
                }
                public void PropertyChanged_m_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AssetSidePanelControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Edam.WinUI.Controls.ViewModels.MapSidePanelViewModel obj = sender as global::Edam.WinUI.Controls.ViewModels.MapSidePanelViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_m_ViewModel_Namespaces(obj.Namespaces, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Namespaces":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_m_ViewModel_Namespaces(obj.Namespaces, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Edam.WinUI.Controls.ViewModels.MapSidePanelViewModel cache_m_ViewModel = null;
                public void UpdateChildListeners_m_ViewModel(global::Edam.WinUI.Controls.ViewModels.MapSidePanelViewModel obj)
                {
                    if (obj != cache_m_ViewModel)
                    {
                        if (cache_m_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_m_ViewModel).PropertyChanged -= PropertyChanged_m_ViewModel;
                            cache_m_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_m_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_m_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_m_ViewModel_Namespaces(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AssetSidePanelControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.Asset.NamespaceInfo> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.Asset.NamespaceInfo>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_m_ViewModel_Namespaces(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    AssetSidePanelControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.Asset.NamespaceInfo> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.Asset.NamespaceInfo>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.Asset.NamespaceInfo> cache_m_ViewModel_Namespaces = null;
                public void UpdateChildListeners_m_ViewModel_Namespaces(global::System.Collections.ObjectModel.ObservableCollection<global::Edam.Data.Asset.NamespaceInfo> obj)
                {
                    if (obj != cache_m_ViewModel_Namespaces)
                    {
                        if (cache_m_ViewModel_Namespaces != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_m_ViewModel_Namespaces).PropertyChanged -= PropertyChanged_m_ViewModel_Namespaces;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_m_ViewModel_Namespaces).CollectionChanged -= CollectionChanged_m_ViewModel_Namespaces;
                            cache_m_ViewModel_Namespaces = null;
                        }
                        if (obj != null)
                        {
                            cache_m_ViewModel_Namespaces = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_m_ViewModel_Namespaces;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_m_ViewModel_Namespaces;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_SaveOptions(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AssetSidePanelControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::System.String>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_SaveOptions(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    AssetSidePanelControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::System.String>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::System.String> cache_ViewModel_SaveOptions = null;
                public void UpdateChildListeners_ViewModel_SaveOptions(global::System.Collections.ObjectModel.ObservableCollection<global::System.String> obj)
                {
                    if (obj != cache_ViewModel_SaveOptions)
                    {
                        if (cache_ViewModel_SaveOptions != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_SaveOptions).PropertyChanged -= PropertyChanged_ViewModel_SaveOptions;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_SaveOptions).CollectionChanged -= CollectionChanged_ViewModel_SaveOptions;
                            cache_ViewModel_SaveOptions = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_SaveOptions = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_SaveOptions;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_SaveOptions;
                        }
                    }
                }
                public void RegisterTwoWayListener_3(global::Edam.WinUI.Controls.Assets.AssetDataTreeControl sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.UIElement.VisibilityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_3_Visibility();
                        }
                    });
                }
                public void RegisterTwoWayListener_4(global::Microsoft.UI.Xaml.Controls.StackPanel sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.UIElement.VisibilityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_4_Visibility();
                        }
                    });
                }
                public void RegisterTwoWayListener_5(global::Microsoft.UI.Xaml.Controls.ItemsRepeater sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.UIElement.VisibilityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_Visibility();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemsSourceProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_ItemsSource();
                        }
                    });
                }
                public void RegisterTwoWayListener_12(global::Microsoft.UI.Xaml.Controls.FontIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.FontIcon.GlyphProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_12_Glyph();
                        }
                    });
                }
                public void RegisterTwoWayListener_13(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ItemsControl.ItemsSourceProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_13_ItemsSource();
                        }
                    });
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Controls\Assets\AssetSidePanelControl.xaml line 13
                {
                    this.TreeViewPanel = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 3: // Controls\Assets\AssetSidePanelControl.xaml line 44
                {
                    this.TreeView = global::WinRT.CastExtensions.As<global::Edam.WinUI.Controls.Assets.AssetDataTreeControl>(target);
                }
                break;
            case 4: // Controls\Assets\AssetSidePanelControl.xaml line 49
                {
                    this.PanelView = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                }
                break;
            case 5: // Controls\Assets\AssetSidePanelControl.xaml line 88
                {
                    this.NamespaceList = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ItemsRepeater>(target);
                }
                break;
            case 11: // Controls\Assets\AssetSidePanelControl.xaml line 83
                {
                    this.ToggleNamespaces = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 13: // Controls\Assets\AssetSidePanelControl.xaml line 60
                {
                    this.SaveOption = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ComboBox)this.SaveOption).SelectionChanged += this.SaveOption_SelectionChanged;
                }
                break;
            case 14: // Controls\Assets\AssetSidePanelControl.xaml line 25
                {
                    this.AssetRefresh = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.AssetRefresh).Click += this.AssetRefresh_Click;
                }
                break;
            case 15: // Controls\Assets\AssetSidePanelControl.xaml line 29
                {
                    global::Microsoft.UI.Xaml.Controls.Button element15 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element15).Click += this.DataAssetView_Click;
                }
                break;
            case 16: // Controls\Assets\AssetSidePanelControl.xaml line 33
                {
                    global::Microsoft.UI.Xaml.Controls.Button element16 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element16).Click += this.DataTreeView_Click;
                }
                break;
            case 17: // Controls\Assets\AssetSidePanelControl.xaml line 37
                {
                    global::Microsoft.UI.Xaml.Controls.Button element17 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element17).Click += this.DataMapView_Click;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Controls\Assets\AssetSidePanelControl.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.UserControl element1 = (global::Microsoft.UI.Xaml.Controls.UserControl)target;
                    AssetSidePanelControl_obj1_Bindings bindings = new AssetSidePanelControl_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 7: // Controls\Assets\AssetSidePanelControl.xaml line 93
                {                    
                    global::Microsoft.UI.Xaml.Controls.Grid element7 = (global::Microsoft.UI.Xaml.Controls.Grid)target;
                    AssetSidePanelControl_obj7_Bindings bindings = new AssetSidePanelControl_obj7_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element7.DataContext);
                    element7.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element7, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element7, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

